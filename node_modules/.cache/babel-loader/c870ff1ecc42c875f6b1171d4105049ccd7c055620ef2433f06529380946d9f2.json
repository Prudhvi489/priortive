{"ast":null,"code":"import axios from \"axios\";\nimport { envdata } from \"../components/Envexports\";\nexport const Subadminapicalls = async (endpoint, data, method, contentType) => {\n  let apidata;\n  if (method === \"GET\") {\n    apidata = {};\n  } else {\n    apidata = data;\n  }\n  const config = {\n    method: method,\n    // HTTP method\n    url: `${envdata.baseurl}/${endpoint}`,\n    data: apidata,\n    // Request data\n    headers: {\n      \"Content-Type\": contentType\n    }\n  };\n  const res = await axios(config);\n  return res.data;\n};\n_c = Subadminapicalls;\nvar _c;\n$RefreshReg$(_c, \"Subadminapicalls\");","map":{"version":3,"names":["axios","envdata","Subadminapicalls","endpoint","data","method","contentType","apidata","config","url","baseurl","headers","res","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/bitbucket/priortive/src/ApiServices/Subadminapicalls.js"],"sourcesContent":["import axios from \"axios\";\nimport { envdata } from \"../components/Envexports\";\nexport const  Subadminapicalls= async(endpoint,data,method,contentType)=>{\n  let apidata;\n  if(method===\"GET\"){\n      apidata={}\n  }\n  else{\n      apidata=data\n  }\n    const config = {\n        method: method, // HTTP method\n        url: `${envdata.baseurl}/${endpoint}`,\n        data:apidata, // Request data\n        headers: {\n          \"Content-Type\": contentType,\n        }\n      };\n      const res = await axios(config);\n    return res.data;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,0BAA0B;AAClD,OAAO,MAAOC,gBAAgB,GAAE,MAAAA,CAAMC,QAAQ,EAACC,IAAI,EAACC,MAAM,EAACC,WAAW,KAAG;EACvE,IAAIC,OAAO;EACX,IAAGF,MAAM,KAAG,KAAK,EAAC;IACdE,OAAO,GAAC,CAAC,CAAC;EACd,CAAC,MACG;IACAA,OAAO,GAACH,IAAI;EAChB;EACE,MAAMI,MAAM,GAAG;IACXH,MAAM,EAAEA,MAAM;IAAE;IAChBI,GAAG,EAAG,GAAER,OAAO,CAACS,OAAQ,IAAGP,QAAS,EAAC;IACrCC,IAAI,EAACG,OAAO;IAAE;IACdI,OAAO,EAAE;MACP,cAAc,EAAEL;IAClB;EACF,CAAC;EACD,MAAMM,GAAG,GAAG,MAAMZ,KAAK,CAACQ,MAAM,CAAC;EACjC,OAAOI,GAAG,CAACR,IAAI;AACnB,CAAC;AAAAS,EAAA,GAlBaX,gBAAgB;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
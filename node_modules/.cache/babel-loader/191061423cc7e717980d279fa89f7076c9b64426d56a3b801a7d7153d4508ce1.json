{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/bitbucket/priortive/src/components/pages/Hotels/Room_booking.jsx\",\n  _s = $RefreshSig$();\nimport { Container, Divider, Checkbox, InputLabel, Button, Grid, Paper, TextField, InputAdornment, RadioGroup, FormControlLabel, Radio, Stack, Breadcrumbs, ToggleButtonGroup } from \"@mui/material\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { room_booking } from \"../../../assets/styles/Hotelstyles\";\nimport { ticketbooking } from \"../../../assets/styles/Flights\";\nimport { makeStyles } from \"@mui/styles\";\nimport Ratingstar from \"../../../assets/Hotelimages/Ratingstar.svg\";\nimport Refundpolicy from \"../../../assets/images/Refundpolicy.svg\";\nimport HealthAndSafetyIcon from \"@mui/icons-material/HealthAndSafety\";\nimport correct from \"../../../assets/images/correct.svg\";\nimport Hotelconfirmation from \"../../modals/Hotelmodals/Hotelconfirmation\";\nimport personblue from \"../../../assets/images/personblue.svg\";\nimport traveller from \"../../../assets/images/traveller.svg\";\nimport MuiToggleButton from \"@mui/material/ToggleButton\";\nimport { styled } from \"@mui/material/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport person from \"../../../assets/images/person.svg\";\nimport calender from \"../../../assets/images/calender.svg\";\nimport passport from \"../../../assets/images/passport.svg\";\nimport pan_card from \"../../../assets/images/pan_card.svg\";\nimport Email from \"../../../assets/images/Email.svg\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport Tickettravellers from \"../../modals/Signupmodals/Tickettravellers\";\nimport { Apipost } from \"../../../ApiServices/Apicalls.js\";\nimport Countrycodefilter from \"../../modals/Signupmodals/Countrycodefilter\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport helperFunctions from \"../../../helpers/helperFunctions\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\nimport axios from \"axios\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Loadingmodal from \"../../modals/Signupmodals/Loadingmodal\";\nimport PromoCodes from \"../../OffersCarousel/PromoCodes\";\nimport Importantinfo from \"../../OffersCarousel/Importantinfo\";\nimport { regex_data } from \"../../../components/Regex\";\nimport { envdata } from \"../../Envexports\";\nimport MySnackbar from \"../../modals/Signupmodals/Snackbar\";\nimport Why_gmt from \"../../why_gmt/Why_gmt\";\nimport { sha512 } from \"js-sha512\";\nimport { HotelBookingDetailsActions } from \"../../../store/Hotelslices.jsx/HotelBookDetails\";\nimport Hotelhelpers from \"../../../helpers/Hotelhelpers\";\nimport { styles } from '../../../assets/styles/Styles_export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToggleButton = styled(MuiToggleButton)(({\n  selectedColor\n}) => ({\n  \"&.Mui-selected, &.Mui-selected:hover\": {\n    color: \"white!important\",\n    background: `${styles.app_color}!important`\n  }\n}));\n_c = ToggleButton;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: `${styles.app_color}!important`\n      }\n    }\n  },\n  travelerinfo: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#EDEDED!important\"\n      }\n    }\n  },\n  MuiAccordionroot: {\n    \"&.MuiAccordion-root:before\": {\n      backgroundColor: \"white\"\n    }\n  },\n  root1: {\n    \"& > *\": {\n      margin: 0,\n      padding: 0\n    }\n  }\n}));\n// const baseurl = process.env.REACT_APP_BASEURL;\nconst Room_booking = () => {\n  _s();\n  var _persons$, _persons$$adult_state, _room_details$HotelRo, _persons$2, _persons$2$adult_stat, _persons$3, _persons$3$adult_stat;\n  const navigate = useNavigate();\n  const ticketbook = ticketbooking();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  // for snackbar\n  const [snackopen, setSnackopen] = useState(false);\n  const [snackmessage, setSnackmessage] = useState(\"\");\n  function snackclose() {\n    setSnackopen(false);\n  }\n  //\n  const room_style = room_booking();\n  const [offers, setOffers] = useState(50);\n  const [health_insurance, setHealth_insurance] = useState(\"yes\");\n  const [hotelbooked, setHotelbooked] = useState(false);\n  const [require_all_pax_details, setRequire_all_pax_details] = useState(false);\n  const [gmt_fee, setGmt_fee] = useState(100);\n  const [coupons, setCoupons] = useState({});\n  const [persons, setPersons] = useState([{\n    adult_state: [{\n      type: 1,\n      first_name: \"\",\n      last_name: \"\",\n      gender: 0,\n      dob: \"\",\n      passport_num: \"\",\n      passport_exp: \"\",\n      title: 1,\n      passport_issue: \"\",\n      passport_issue_country: \"\",\n      pan_no: \"\",\n      f_name_err: false,\n      l_name_err: false,\n      dob_err: false,\n      p_num_err: false,\n      p_exp_err: false,\n      title_err: false,\n      passport_issue_err: false,\n      passport_issue_country_err: false,\n      pan_no_err: false\n    }],\n    child_state: [{\n      type: 2,\n      first_name: \"\",\n      last_name: \"\",\n      gender: 0,\n      dob: \"\",\n      passport_num: \"\",\n      passport_exp: \"\",\n      title: 3,\n      passport_issue: \"\",\n      passport_issue_country: \"\",\n      pan_no: \"\",\n      f_name_err: false,\n      l_name_err: false,\n      dob_err: false,\n      p_num_err: false,\n      p_exp_err: false,\n      title_err: false,\n      passport_issue_err: false,\n      passport_issue_country_err: false,\n      pan_no_err: false\n    }]\n  }]);\n  const [adult_num, setAdult_num] = useState(1);\n  const [child_num, setChild_num] = useState(0);\n  const [ticket_receiver_info, setTicket_receiver_info] = useState({\n    email: \"\",\n    mobile: \"\",\n    email_err: false,\n    mobile_err: false\n  });\n  const [viewtravellerdialog, setViewtravellerdialog] = useState(false);\n  const [selectedcountry, setSelectedcountry] = useState({\n    id: 74,\n    country_name: \"India\",\n    country_code: \"IN\",\n    code: \"+91\",\n    country_flag: `${envdata.baseurl}/in.png`\n  });\n  const [traveller_index, setTraveller_index] = useState(\"\");\n  const [travellerdata, setTravellerdata] = useState([]);\n  const [countrydialog, setCountrydialog] = useState(false);\n  const [book_req, setBook_req] = useState(\"\");\n  const [price_change, setPrice_change] = useState(false);\n  const [changed_room_data, setChanged_room_data] = useState(\"\");\n  const [booking_details, setBooking_details] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [open_combination, setOpen_combination] = useState(false);\n  const [prices, setPrices] = useState({\n    discount: 0,\n    updatedprice: 0,\n    totalprice: 0,\n    coupon_id: \"\",\n    coupon_code: \"\"\n  });\n  const textFieldRef = useRef(null);\n  const ticker_receivers_ref = useRef(null);\n  const hotel_details = useSelector(state => state.hotel_room.hotelinfo);\n  // console.log(hotel_details,\"hotel detaisl\")\n  const hotel_code = useSelector(state => state.hotel_room.hotel_code);\n  const profile = useSelector(state => state.profile.profiledata);\n  const hotel_index = useSelector(state => state.hotel_room.hotel_resultindex);\n  let hotelresult = useSelector(state => state.hotel_data.hotelresult);\n  let searchtype = useSelector(state => state.hotel_data.destination).type;\n  const room_details = useSelector(state => state.hotel_room.roominfo);\n  console.log(room_details, \"roodetailsbro\");\n  const hotel_info = hotel_details.HotelDetails;\n  const location1 = useLocation();\n  let first_split;\n  let splitarray;\n  let category_ids;\n  let selectedroom;\n  let cancellation_policies;\n  let fixed_room_price;\n  let open_room_price;\n  // if(room_details?.RoomCombinationsArray[0]?.InfoSource===\"OpenCombination\"){\n  // alert(\"sdjfj\")\n  // setOpen_combination(true);\n  // selected_room=location1.state[0]\n  // cancellation_policies=[{Charge: 100, ChargeType: 2, Currency: 'INR', FromDate: '2023-09-15T00:00:00', ToDate: '2023-09-16T23:59:59'}]\n  // }\n  // else{\n  // setOpen_combination(false)\n  if ((room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) !== undefined) {\n    fixed_room_price = helperFunctions.hotel_fixedroom_price(location1.state, room_details.HotelRoomsDetails);\n    first_split = location1.state.split(\"_\");\n    console.log(first_split, \"split array\");\n    splitarray = first_split.map(split_item => split_item.split(\"|\"));\n    // category_ids = splitarray.map((item) => item[1]);\n    category_ids = first_split[first_split.length - 1].split(\"|\")[1];\n    selectedroom = splitarray.map(item => parseInt(item[0]));\n    console.log(selectedroom, \"selected rooom\");\n    console.log(category_ids, \"category\");\n    cancellation_policies = room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[0]).CancellationPolicies;\n  } else {\n    open_room_price = Hotelhelpers.open_room_price(room_details.HotelRoomsDetails, location1.state);\n    selectedroom = location1.state[0];\n    cancellation_policies = room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom).CancellationPolicies;\n  }\n  // }\n  //  console.log(cancellation_policies,\"cancaelltioinpoliciate\")\n  const checkintime = useSelector(state => state.hotel_room.checkin);\n  const checkouttime = useSelector(state => state.hotel_room.checkout);\n  // hotel guests validation\n  const guests_details = useSelector(state => state.hotel_guestcount.guests);\n  // Guests validations\n  const hotel_guest_validation = async (data, roomindex, room) => {\n    console.log(room, \"hadarata\");\n    let stopExecution = false;\n    let roomguests = [];\n    outerLoop: for (const item in data) {\n      let guest = {\n        //  \"Middlename\":null,\n        //  \"Age\":null,\n        LeadPassenger: false\n        //  \"Phoneno\":null,\n        //  \"Email\":null,\n        //  \"PassportNo\":null,\n        //  \"PassportIssueDate\":null,\n        //  \"PassportExpDate\":null,\n        //  \"PAN\":null\n      };\n\n      const innerArray = data[item];\n      for (let i = 0; i < innerArray.length; i++) {\n        const value = innerArray[i];\n        guest.Title = value.title === 1 ? \"Mr\" : value.title === 2 ? \"Mrs\" : value.title === 3 ? \"Miss\" : value.title === 4 && \"Ms\";\n        guest.PaxType = value.type;\n        if (value.first_name.trim() === \"\") {\n          setSnackopen(true);\n          setSnackmessage(\"First_name should not be empty\");\n          // alert(\"First_name should not be empty \");\n          stopExecution = true;\n          setPersons(prevdata => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].f_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].f_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n          return true;\n          // break outerLoop;\n        } else if (regex_data.string_pattern.test(value.first_name)) {\n          setSnackopen(true);\n          setSnackmessage(\"first name not a string\");\n          // alert(\"first name not a string\");\n          stopExecution = true;\n          setPersons(prevdata => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].f_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].f_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n          return true;\n          // break outerLoop;\n        } else {\n          setPersons(prevdata => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].f_name_err = false;\n            } else {\n              updatedPersons[roomindex].child_state[i].f_name_err = false;\n            }\n            return updatedPersons;\n          });\n          guest.FirstName = value.first_name.trim();\n          // return false\n          // condition goes here\n        }\n\n        if (value.last_name.trim() === \"\") {\n          setSnackopen(true);\n          setSnackmessage(\"last name shouldn't be empty\");\n          // alert(\"last name shouldn't be empty\");\n          stopExecution = true;\n          setPersons(prevdata => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].l_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].l_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n          return true;\n        } else if (regex_data.string_pattern.test(value.last_name)) {\n          setSnackopen(true);\n          setSnackmessage(\"last name should only be string\");\n          // alert(\"last name should only be string\");\n          stopExecution = true;\n          setPersons(prevdata => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].l_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].l_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({\n            behavior: \"smooth\"\n          });\n          return true;\n        } else {\n          setPersons(prevdata => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].l_name_err = false;\n            } else {\n              updatedPersons[roomindex].child_state[i].l_name_err = false;\n            }\n            return updatedPersons;\n          });\n          guest.LastName = value.last_name.trim();\n          // return false\n        }\n\n        // Passport mandatory\n\n        if (room !== null && room !== void 0 && room.RequireAllPaxDetails && room !== null && room !== void 0 && room.IsPassportMandatory) {\n          // Passport number validation\n          if (value.passport_num === \"\") {\n            setSnackopen(true);\n            setSnackmessage(\"passport number shouldn't be empty\");\n            // alert(\"passport number shouldn't be empty\");\n            stopExecution = true;\n            setPersons(prevdata => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_num_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_num_err = true;\n              }\n              return updatedPersons;\n            });\n            textFieldRef.current.scrollIntoView({\n              behavior: \"smooth\"\n            });\n            return true;\n          } else if (!regex_data.generic_passport.test(value.passport_num.trim())) {\n            setSnackopen(true);\n            setSnackmessage(\"Enter correct passport number\");\n            // alert(\"Enter correct passport number\");\n            stopExecution = true;\n            setPersons(prevdata => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_num_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_num_err = true;\n              }\n              return updatedPersons;\n            });\n            textFieldRef.current.scrollIntoView({\n              behavior: \"smooth\"\n            });\n            return true;\n          } else {\n            stopExecution = false;\n            setPersons(prevdata => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_num_err = false;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_num_err = false;\n              }\n              return updatedPersons;\n            });\n            guest.PassportNo = value.passport_num.trim();\n            // return false;\n          }\n          // passport issue date validation\n          if (value.passport_issue === \"\") {\n            setSnackopen(true);\n            setSnackmessage(\"passport issue date shouldn't be empty\");\n            // alert(\"passport issue date shouldn't be empty\");\n            stopExecution = true;\n            setPersons(prevdata => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].passport_issue_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[i].passport_issue_err = true;\n              }\n              return updatedPersons;\n            });\n            textFieldRef.current.scrollIntoView({\n              behavior: \"smooth\"\n            });\n            return true;\n          } else {\n            stopExecution = false;\n            setPersons(prevdata => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].passport_issue_err = false;\n              } else {\n                updatedPersons[roomindex].child_state[i].passport_issue_err = false;\n              }\n              return updatedPersons;\n            });\n            guest.PassportIssueDate = helperFunctions.getapi_date(value.passport_issue);\n            // return false;\n          }\n          // passport expiry date validation\n          if (value.passport_exp === \"\") {\n            setSnackopen(true);\n            setSnackmessage(\"passport expiry date shouldn't be empty\");\n            // alert(\"passport expiry date shouldn't be empty\");\n            stopExecution = true;\n            setPersons(prevdata => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_exp_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_exp_err = true;\n              }\n              return updatedPersons;\n            });\n            return true;\n          } else {\n            stopExecution = false;\n            setPersons(prevdata => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_exp_err = false;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_exp_err = false;\n              }\n              return updatedPersons;\n            });\n            guest.PassportExpDate = helperFunctions.getapi_date(value.passport_exp);\n            // return false;\n          }\n          // passport issue country validation\n          // if (value.passport_issue_country === \"\") {\n          //   alert(\"passport issue_country shouldn't be empty\");\n          //   stopExecution = true;\n          //   setPersons((prevdata) => {\n          //     const updatedPersons = [...prevdata];\n          //     if (value.type === 1) {\n          //       updatedPersons[roomindex].adult_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     } else {\n          //       updatedPersons[roomindex].child_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     }\n          //     return updatedPersons;\n          //   });\n          //   return true;\n          // }\n          // else if (string_pattern.test(value.passport_issue_country.trim())) {\n          //   alert(\"passport issue country must be a string\");\n          //   stopExecution = true;\n          //   setPersons((prevdata) => {\n          //     const updatedPersons = [...prevdata];\n          //     if (value.type === 1) {\n          //       updatedPersons[roomindex].adult_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     } else {\n          //       updatedPersons[roomindex].child_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     }\n          //     return updatedPersons;\n          //   });\n          //   return true;\n          // }\n          //  else {\n          //   stopExecution = false;\n          //   setPersons((prevdata) => {\n          //     const updatedPersons = [...prevdata];\n          //     if (value.type === 1) {\n          //       updatedPersons[roomindex].adult_state[\n          //         i\n          //       ].passport_issue_country_err = false;\n          //     } else {\n          //       updatedPersons[roomindex].child_state[\n          //         i\n          //       ].passport_issue_country_err = false;\n          //     }\n          //     return updatedPersons;\n          //   });\n\n          //   // return true;\n          // }\n        }\n        // Pan number validation\n        if (room !== null && room !== void 0 && room.RequireAllPaxDetails && room.IsPANMandatory) {\n          //&&value.type===1\n          // adult pancard checking\n          if (value.type === 1) {\n            if (value.pan_no === \"\") {\n              setSnackopen(true);\n              setSnackmessage(\"pan number shouldn't be empty\");\n              // alert(\"pan number shouldn't be empty\");\n              stopExecution = true;\n              setPersons(prevdata => {\n                const updatedPersons = [...prevdata];\n                if (value.type === 1) {\n                  updatedPersons[roomindex].adult_state[i].pan_no_err = true;\n                } else {\n                  updatedPersons[roomindex].child_state[i].pan_no_err = true;\n                }\n                return updatedPersons;\n              });\n              textFieldRef.current.scrollIntoView({\n                behavior: \"smooth\"\n              });\n              return true;\n            } else if (!regex_data.pan_Regex.test(value.pan_no.trim())) {\n              setSnackopen(true);\n              setSnackmessage(\"Enter valid pan number\");\n              // alert(\"Enter valid pan number\");\n              stopExecution = true;\n              setPersons(prevdata => {\n                const updatedPersons = [...prevdata];\n                if (value.type === 1) {\n                  updatedPersons[roomindex].adult_state[i].pan_no_err = true;\n                } else {\n                  updatedPersons[roomindex].child_state[i].pan_no_err = true;\n                }\n                return updatedPersons;\n              });\n              textFieldRef.current.scrollIntoView({\n                behavior: \"smooth\"\n              });\n              return true;\n            } else {\n              stopExecution = false;\n              setPersons(prevdata => {\n                const updatedPersons = [...prevdata];\n                if (value.type === 1) {\n                  updatedPersons[roomindex].adult_state[i].pan_no_err = false;\n                } else {\n                  updatedPersons[roomindex].child_state[i].pan_no_err = false;\n                }\n                return updatedPersons;\n              });\n              guest.PAN = value.pan_no;\n              // return false;\n            }\n          } else if (value.type === 2) {\n            guest.GuardianDetail = {\n              Title: roomguests[0].Title,\n              FirstName: roomguests[0].FirstName,\n              LastName: roomguests[0].LastName,\n              PAN: roomguests[0].PAN\n            };\n          }\n        }\n        if (value.type === 1 && i === 0) {\n          guest.LeadPassenger = true;\n        } else if (value.type === 2) {\n          guest.Age = guests_details[roomindex].ChildAge[i];\n        }\n        roomguests.push(guest);\n      }\n      if (stopExecution) {\n        break;\n      }\n    }\n    return roomguests;\n  };\n  // Book api funtion\n  const book_room_api = async data => {\n    setLoading(true);\n    let book_obj;\n    if (data === undefined) {\n      book_obj = book_req;\n    } else {\n      book_obj = data;\n    }\n    setPrice_change(false);\n    const res = await axios.post(`${envdata.baseurl}/deDupeBookRoom`, book_obj);\n    if (res.data.status) {\n      setLoading(false);\n      const booking_detail = await axios.post(`${envdata.baseurl}/getHotelBookingDetail`, {\n        BookingId: res.data.data.BookingId,\n        userId: localStorage.getItem(\"userid\"),\n        checkType: 0\n      });\n      if (booking_detail.data.status && booking_detail.data.data.Status === 1) {\n        setBooking_details(booking_detail.data.data);\n        setHotelbooked(true);\n        // console.log(booking_detail.data);\n      } else if (booking_detail.data.status && booking_detail.data.data.Status !== 1) {\n        setLoading(false);\n        setSnackopen(true);\n        setSnackmessage(\"booking cancelled\");\n        // alert(\"booking cancelled\");\n      } else {\n        setLoading(false);\n        setSnackopen(true);\n        setSnackmessage(booking_detail.data.data.message);\n        // alert(booking_detail.data.data.message);\n      }\n    } else {\n      var _res$data, _res$data$data;\n      setLoading(false);\n      setSnackopen(true);\n      setSnackmessage((_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.message);\n      // alert(res.data?.data?.message);\n    }\n  };\n  // gmtblock room api\n  const gmt_blockroom = async () => {\n    let book_room_data = [];\n    let guests_data = [];\n    try {\n      var _coupons$convenienceF, _coupons$convenienceF2, _hotel_details$HotelD;\n      for (let i = 0; i < location1.state.length; i++) {\n        let sel_room = room_details.HotelRoomsDetails.find(item => item.RoomIndex === location1.state[i]);\n        const room_guests = await hotel_guest_validation(persons[i], i, sel_room);\n        // console.log(room_guests, \"each room\");\n        if (room_guests === true) {\n          return;\n        } else {\n          guests_data.push(room_guests);\n        }\n        let smoking = (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"NoPreference\" ? 0 : (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"Smoking\" ? 1 : (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"NonSmoking\" ? 2 : (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"Either\" && 3;\n        let book_room_obj = {\n          RoomIndex: sel_room.RoomIndex,\n          RoomTypeCode: \"\",\n          RoomTypeName: sel_room.RoomTypeName,\n          RatePlanCode: \"\",\n          SmokingPreference: smoking,\n          Price: sel_room.Price,\n          HotelPassenger: room_guests\n        };\n        book_room_data.push(book_room_obj);\n      }\n      // ticket receivers_information validation\n      if (ticket_receiver_info.email.trim() === \"\") {\n        setSnackopen(true);\n        setSnackmessage(\"ticket receivers info shouldn't be empty\");\n        setTicket_receiver_info(prevstate => ({\n          ...prevstate,\n          email_err: true\n        }));\n        return;\n      } else if (!regex_data.email_Regex.test(ticket_receiver_info.email.trim())) {\n        setSnackopen(true);\n        setSnackmessage(\"enter valid email address\");\n        // alert(\"enter valid email address\");\n        setTicket_receiver_info(prevstate => ({\n          ...prevstate,\n          email_err: true\n        }));\n        return;\n      } else {\n        setTicket_receiver_info(prevstate => ({\n          ...prevstate,\n          email_err: false\n        }));\n      }\n      if (ticket_receiver_info.mobile === \"\") {\n        setSnackopen(true);\n        setSnackmessage(\"ticket receiver mobile number shouldn't be empty\");\n        // alert(\"Ticket reviever mobile number shouldn't be empty\");\n        setTicket_receiver_info(prev => ({\n          ...prev,\n          mobile_err: true\n        }));\n        return;\n      } else if (!regex_data.mobile_regex.test(ticket_receiver_info.mobile.trim())) {\n        setSnackopen(true);\n        setSnackmessage(\"Ticket receivers mobile shouldn't be empty\");\n        // alert(\"Ticket receivers mobile shouldn't be empty\");\n        setTicket_receiver_info(prev => ({\n          ...prev,\n          mobile_err: true\n        }));\n        return;\n      } else {\n        setTicket_receiver_info(prev => ({\n          ...prev,\n          mobile_err: false\n        }));\n      }\n      const bookroom_obj = {\n        searchType: 2,\n        booked_by: localStorage.getItem(\"userid\"),\n        booked_by_name: profile === null || profile === void 0 ? void 0 : profile.first_name,\n        rating: null,\n        review: null,\n        total_staying_persons: adult_num + child_num,\n        number_of_rooms: guests_details.length,\n        coupon_id: prices.coupon_id,\n        platform: 0,\n        admin_commission_type: (_coupons$convenienceF = coupons === null || coupons === void 0 ? void 0 : (_coupons$convenienceF2 = coupons.convenienceFee[0]) === null || _coupons$convenienceF2 === void 0 ? void 0 : _coupons$convenienceF2.convenience_type) !== null && _coupons$convenienceF !== void 0 ? _coupons$convenienceF : \"\",\n        admin_commission: gmt_fee,\n        hotel_picture: hotel_info.Images[0].split('/')[5].split('?')[0].replace(/%28/g, \"(\").replace(/%29/g, \")\"),\n        //'.split('/')[5].split('?')[0].replace(/%28/g, \"(\").replace(/%29/g, \")\")'\n        ticket_sent_mail: ticket_receiver_info.email,\n        ticket_sent_ph_num: ticket_receiver_info.mobile,\n        from_date: hotelresult.CheckInDate,\n        to_date: hotelresult.CheckOutDate,\n        created_at: helperFunctions.getapi_date(new Date()),\n        discount: prices.discount,\n        payment_status: 0,\n        payment_id: \"\",\n        total_price: prices.discount > 0 ? prices.updatedprice : prices.totalprice,\n        coupon_code: prices.coupon_code,\n        pub_price: fixed_room_price,\n        TraceId: \"\",\n        ResultIndex: 0,\n        HotelCode: hotel_code,\n        CategoryId: \"\",\n        // searchtype === \"1\"\n        //   ? sel_hotel.supplier_hotel_codes[0].CategoryId\n        //   : sel_hotel.SupplierHotelCodes[0].CategoryId,\n        HotelName: hotel_info.HotelName,\n        GuestNationality: \"IN\",\n        NoOfRooms: guests_details.length,\n        ClientReferenceNo: \"0\",\n        IsVoucherBooking: \"true\",\n        HotelRoomsDetails: book_room_data\n      };\n      book_room_data[0]['Amenities'] = room_details === null || room_details === void 0 ? void 0 : room_details.HotelRoomsDetails[0].Amenities;\n      book_room_data[0]['CancellationPolicies'] = room_details === null || room_details === void 0 ? void 0 : room_details.HotelRoomsDetails[0].CancellationPolicies;\n      let block_room_obj = {\n        \"HotelCode\": hotel_details === null || hotel_details === void 0 ? void 0 : (_hotel_details$HotelD = hotel_details.HotelDetails) === null || _hotel_details$HotelD === void 0 ? void 0 : _hotel_details$HotelD.HotelCode,\n        \"rooms\": []\n      };\n      //  adding ticket receivers_info in book api\n      for (let room = 0; room <= bookroom_obj.HotelRoomsDetails.length - 1; room++) {\n        var _sel_room$Price;\n        const sel_room = room_details.HotelRoomsDetails.find(item => item.RoomIndex === location1.state[room]);\n        let each_room = {\n          \"roomId\": sel_room.Id,\n          \"price\": sel_room === null || sel_room === void 0 ? void 0 : (_sel_room$Price = sel_room.Price) === null || _sel_room$Price === void 0 ? void 0 : _sel_room$Price.PublishedPriceRoundedOff\n        };\n        block_room_obj === null || block_room_obj === void 0 ? void 0 : block_room_obj.rooms.push(each_room);\n        Object.assign(bookroom_obj.HotelRoomsDetails[room].HotelPassenger[0], {\n          Phoneno: ticket_receiver_info.mobile,\n          Email: ticket_receiver_info.email\n        });\n      }\n      // ////////////\n      // const sel_room=room_details.HotelRoomsDetails.find((item)=>item.RoomIndex===location1.state[0])\n      // console.log(sel_room,\"selected room\")\n      setLoading(true);\n      const gmt_block_res = await axios.post(`${envdata.baseurl}/gmtBlockRoom`, block_room_obj);\n      console.log(gmt_block_res.data, \"response\");\n      const gmt_block_data = gmt_block_res.data;\n      if (gmt_block_data.status) {\n        dispatch(HotelBookingDetailsActions.bookingrequest({\n          bookdata: bookroom_obj,\n          trasaction_id: transactionStr\n        }));\n        setLoading(false);\n        document.getElementById(\"payuPayButton\").click();\n      }\n    } catch (error) {\n      console.log(error, \"error dta\");\n      alert(error);\n    }\n  };\n  // tbo rooms block api calling\n  const hot_room_booking = async () => {\n    var _coupons$convenienceF3, _coupons$convenienceF4;\n    // setHotelbooked(true);\n    let sel_hotel;\n    if (searchtype === \"1\") {\n      sel_hotel = hotelresult.Hotels.find(item => item.hotel_code === hotel_code);\n    } else {\n      sel_hotel = hotelresult.Hotels.find(item => item.HotelCode === hotel_code);\n    }\n    let block_room_data = [];\n    let book_room_data = [];\n    let guests_data = [];\n    // console.group(room_details.HotelRoomsDetails,\"room details\")\n    // console.log(category_ids,\"dflaksjdf\")\n    // console.log(selectedroom,\"sefffe\")\n    for (let i = 0; i < selectedroom.length; i++) {\n      let sel_room = room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[i] && item.CategoryId === category_ids);\n      // console.log(sel_room,\"data to be displayed\")\n\n      const room_guests = await hotel_guest_validation(persons[i], i, sel_room);\n      // console.log(room_guests, \"each room\");\n      if (room_guests === true) {\n        return;\n      } else {\n        guests_data.push(room_guests);\n      }\n      // console.log(sel_room,\"data\")\n      let smoking = (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"NoPreference\" ? 0 : (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"Smoking\" ? 1 : (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"NonSmoking\" ? 2 : (sel_room === null || sel_room === void 0 ? void 0 : sel_room.SmokingPreference) === \"Either\" && 3;\n      let block_room_obj = {\n        RoomIndex: sel_room === null || sel_room === void 0 ? void 0 : sel_room.RoomIndex,\n        RoomTypeCode: sel_room === null || sel_room === void 0 ? void 0 : sel_room.RoomTypeCode,\n        RoomTypeName: sel_room === null || sel_room === void 0 ? void 0 : sel_room.RoomTypeName,\n        RatePlanCode: sel_room === null || sel_room === void 0 ? void 0 : sel_room.RatePlanCode,\n        SmokingPreference: smoking,\n        Supplements: null,\n        Price:\n        // sel_room.Price,\n        {\n          CurrencyCode: sel_room === null || sel_room === void 0 ? void 0 : sel_room.Price.CurrencyCode,\n          RoomPrice: sel_room.Price.RoomPrice,\n          Tax: sel_room.Price.Tax,\n          ExtraGuestCharge: sel_room.Price.ExtraGuestCharge,\n          ChildCharge: sel_room.Price.ChildCharge,\n          OtherCharges: sel_room.Price.OtherCharges,\n          Discount: sel_room.Price.Discount,\n          PublishedPrice: sel_room.Price.PublishedPrice,\n          PublishedPriceRoundedOff: sel_room.Price.PublishedPriceRoundedOff,\n          OfferedPrice: sel_room.Price.OfferedPrice,\n          OfferedPriceRoundedOff: sel_room.Price.OfferedPriceRoundedOff,\n          AgentCommission: sel_room.Price.AgentCommission,\n          AgentMarkUp: sel_room.Price.AgentMarkUp,\n          ServiceTax: sel_room.Price.ServiceTax,\n          TDS: sel_room.Price.TDS\n        }\n      };\n      let book_room_obj = {\n        RoomIndex: sel_room.RoomIndex,\n        RoomTypeCode: sel_room.RoomTypeCode,\n        RoomTypeName: sel_room.RoomTypeName,\n        RatePlanCode: sel_room.RatePlanCode,\n        SmokingPreference: smoking,\n        Price: sel_room.Price,\n        // {\n        //   CurrencyCode: sel_room.Price.CurrencyCode,\n        //   RoomPrice: sel_room.Price.RoomPrice,\n        //   Tax: sel_room.Price.Tax,\n        //   ExtraGuestCharge: sel_room.Price.ExtraGuestCharge,\n        //   ChildCharge: sel_room.Price.ChildCharge,\n        //   OtherCharges: sel_room.Price.OtherCharges,\n        //   Discount: sel_room.Price.Discount,\n        //   PublishedPrice: sel_room.Price.PublishedPrice,\n        //   PublishedPriceRoundedOff: sel_room.Price.PublishedPriceRoundedOff,\n        //   OfferedPrice: sel_room.Price.OfferedPrice,\n        //   OfferedPriceRoundedOff: sel_room.Price.OfferedPriceRoundedOff,\n        //   AgentCommission: sel_room.Price.AgentCommission,\n        //   AgentMarkUp: sel_room.Price.AgentMarkUp,\n        //   ServiceTax: sel_room.Price.ServiceTax,\n        //   TDS: sel_room.Price.TDS,\n        // },\n        HotelPassenger: room_guests\n      };\n      block_room_data.push(block_room_obj);\n      book_room_data.push(book_room_obj);\n    }\n    // ticket receivers_information validation\n    if (ticket_receiver_info.email.trim() === \"\") {\n      setSnackopen(true);\n      setSnackmessage(\"ticket receivers info shouldn't be empty\");\n      setTicket_receiver_info(prevstate => ({\n        ...prevstate,\n        email_err: true\n      }));\n      return;\n    } else if (!regex_data.email_Regex.test(ticket_receiver_info.email.trim())) {\n      setSnackopen(true);\n      setSnackmessage(\"enter valid email address\");\n      // alert(\"enter valid email address\");\n      setTicket_receiver_info(prevstate => ({\n        ...prevstate,\n        email_err: true\n      }));\n      return;\n    } else {\n      setTicket_receiver_info(prevstate => ({\n        ...prevstate,\n        email_err: false\n      }));\n    }\n    if (ticket_receiver_info.mobile === \"\") {\n      setSnackopen(true);\n      setSnackmessage(\"ticket receiver mobile number shouldn't be empty\");\n      // alert(\"Ticket reviever mobile number shouldn't be empty\");\n      setTicket_receiver_info(prev => ({\n        ...prev,\n        mobile_err: true\n      }));\n      return;\n    } else if (!regex_data.mobile_regex.test(ticket_receiver_info.mobile.trim())) {\n      setSnackopen(true);\n      setSnackmessage(\"Ticket receivers mobile shouldn't be empty\");\n      // alert(\"Ticket receivers mobile shouldn't be empty\");\n      setTicket_receiver_info(prev => ({\n        ...prev,\n        mobile_err: true\n      }));\n      return;\n    } else {\n      setTicket_receiver_info(prev => ({\n        ...prev,\n        mobile_err: false\n      }));\n    }\n    book_room_data[0]['CancellationPolicies'] = room_details === null || room_details === void 0 ? void 0 : room_details.HotelRoomsDetails[0].CancellationPolicies;\n    const blockroom_obj = {\n      TraceId: room_details.TraceId,\n      ResultIndex: hotel_index,\n      HotelCode: hotel_code.toString(),\n      CategoryId: category_ids,\n      // searchtype === \"1\"\n      //   ? sel_hotel.supplier_hotel_codes[0].CategoryId\n      //   : sel_hotel.SupplierHotelCodes[0].CategoryId,\n      HotelName: hotel_info.HotelName,\n      GuestNationality: \"IN\",\n      NoOfRooms: guests_details.length,\n      ClientReferenceNo: \"0\",\n      IsVoucherBooking: \"true\",\n      HotelRoomsDetails: block_room_data\n    };\n    const bookroom_obj = {\n      searchType: 1,\n      booked_by: localStorage.getItem(\"userid\"),\n      booked_by_name: profile === null || profile === void 0 ? void 0 : profile.first_name,\n      rating: null,\n      review: null,\n      total_staying_persons: adult_num + child_num,\n      number_of_rooms: guests_details.length,\n      coupon_id: prices.coupon_id,\n      platform: 0,\n      admin_commission_type: (_coupons$convenienceF3 = coupons === null || coupons === void 0 ? void 0 : (_coupons$convenienceF4 = coupons.convenienceFee[0]) === null || _coupons$convenienceF4 === void 0 ? void 0 : _coupons$convenienceF4.convenience_type) !== null && _coupons$convenienceF3 !== void 0 ? _coupons$convenienceF3 : \"\",\n      admin_commission: gmt_fee,\n      hotel_picture: hotel_info.Images[0],\n      ticket_sent_mail: ticket_receiver_info.email,\n      ticket_sent_ph_num: ticket_receiver_info.mobile,\n      from_date: hotelresult.CheckInDate,\n      to_date: hotelresult.CheckOutDate,\n      created_at: helperFunctions.getapi_date(new Date()),\n      discount: prices.discount,\n      payment_status: 1,\n      payment_id: \"123lkj\",\n      total_price: prices.discount > 0 ? prices.updatedprice : prices.totalprice,\n      coupon_code: prices.coupon_code,\n      pub_price: fixed_room_price,\n      TraceId: room_details.TraceId,\n      ResultIndex: hotel_index,\n      HotelCode: hotel_code,\n      CategoryId: category_ids,\n      HotelName: hotel_info.HotelName,\n      GuestNationality: \"IN\",\n      NoOfRooms: guests_details.length,\n      ClientReferenceNo: \"0\",\n      IsVoucherBooking: \"true\",\n      HotelRoomsDetails: book_room_data\n    };\n    //  adding ticket receivers_info in book api\n    for (let room = 0; room <= bookroom_obj.HotelRoomsDetails.length - 1; room++) {\n      Object.assign(bookroom_obj.HotelRoomsDetails[room].HotelPassenger[0], {\n        Phoneno: ticket_receiver_info.mobile,\n        Email: ticket_receiver_info.email\n      });\n    }\n    //  block room api calling\n    setLoading(true);\n    try {\n      const res = await axios.post(`${envdata.baseurl}/deDupeBlockRoom`, blockroom_obj);\n      if (res.status) {\n        let data = res.data.data;\n        bookroom_obj.IsPackageFare = data === null || data === void 0 ? void 0 : data.IsPackageFare;\n        if (data !== null && data !== void 0 && data.IsPackageDetailsMandatory) {\n          Object.assign(bookroom_obj, {\n            ArrivalTransport: {\n              TransportInfoId: \"6E 231\",\n              Time: \"2023-07-05T14:05:36\"\n            }\n          });\n        }\n        if (data !== null && data !== void 0 && data.IsDepartureDetailsMandatory) {\n          Object.assign(bookroom_obj, {\n            DepartureTransport: {\n              TransportInfoId: \"6E 231\",\n              Time: \"2023-07-06T14:05:36\"\n            }\n          });\n        }\n        setBook_req(bookroom_obj);\n        if (data !== null && data !== void 0 && data.IsCancellationPolicyChanged || data !== null && data !== void 0 && data.IsPriceChanged) {\n          for (let i = 0; i <= bookroom_obj.HotelRoomsDetails.length - 1; i++) {\n            let changeddata = data.HotelRoomsDetails[i].Price;\n            bookroom_obj.HotelRoomsDetails[i].Price = {\n              CurrencyCode: changeddata.CurrencyCode,\n              RoomPrice: changeddata.RoomPrice,\n              Tax: changeddata.Tax,\n              ExtraGuestCharge: changeddata.ExtraGuestCharge,\n              ChildCharge: changeddata.ChildCharge,\n              OtherCharges: changeddata.OtherCharges,\n              Discount: changeddata.Discount,\n              PublishedPrice: changeddata.PublishedPrice,\n              PublishedPriceRoundedOff: changeddata.PublishedPriceRoundedOff,\n              OfferedPrice: changeddata.OfferedPrice,\n              OfferedPriceRoundedOff: changeddata.OfferedPriceRoundedOff,\n              AgentCommission: changeddata.AgentCommission,\n              AgentMarkUp: changeddata.AgentMarkUp,\n              ServiceTax: changeddata.ServiceTax,\n              TDS: changeddata.TDS\n            };\n          }\n          setBook_req(bookroom_obj);\n          setLoading(false);\n          setPrice_change(true);\n          setChanged_room_data(data);\n        } else {\n          // book_room_api(bookroom_obj);\n          dispatch(HotelBookingDetailsActions.bookingrequest({\n            bookdata: bookroom_obj,\n            trasaction_id: transactionStr\n          }));\n          // details =\n          //  `${key}|${transactionStr}|${prices.discount > 0 ? prices.updatedprice : prices.totalprice}|${productinfo}|${persons[0]?.adult_state[0]?.first_name}|${ticket_receiver_info.email}|||||||||||${salt}`;\n          // console.log(details)\n          //  let hashedValue = sha512.create();\n          // hashedValue.update(details);\n          // console.log(hashedValue.hex(),\"hashed value\")\n          // setHashedData(hashedValue.hex())\n          setLoading(false);\n          document.getElementById(\"payuPayButton\").click();\n        }\n      } else {\n        setSnackopen(true);\n        setSnackmessage(res.data.message);\n        // alert(res.data.message);\n      }\n    } catch (error) {\n      setSnackopen(true);\n      setSnackmessage(error);\n      // alert(error);\n    }\n  };\n  // profile data setting\n  useEffect(() => {\n    setTicket_receiver_info(prev => ({\n      ...prev,\n      mobile: profile === null || profile === void 0 ? void 0 : profile.mobile,\n      email: profile === null || profile === void 0 ? void 0 : profile.email\n    }));\n  }, [profile]);\n  useEffect(() => {\n    let total_adult = 0;\n    let total_child = 0;\n    const settraveller_state = async () => {\n      // if (require_all_pax_details) {\n      total_adult = await guests_details.reduce((sum, item) => sum + item.NoOfAdults, 0);\n      total_child = await guests_details.reduce((sum, item) => sum + item.NoOfChild, 0);\n      setAdult_num(total_adult);\n      setChild_num(total_child);\n      // }\n      // else {\n      //   total_adult = guests_details.length;\n      //   setAdult_num(total_adult);\n      // }\n      const per = await Array.from({\n        length: guests_details.length\n      }, (_, index) => ({\n        adult_state: Array.from({\n          length: guests_details[index].NoOfAdults\n        }, (_, index) => ({\n          type: 1,\n          first_name: \"\",\n          last_name: \"\",\n          gender: 0,\n          dob: \"\",\n          passport_num: \"\",\n          passport_exp: \"\",\n          title: 1,\n          passport_issue: \"\",\n          passport_issue_country: \"\",\n          pan_no: \"\",\n          f_name_err: false,\n          l_name_err: false,\n          dob_err: false,\n          p_num_err: false,\n          p_exp_err: false,\n          title_err: false,\n          passport_issue_err: false,\n          passport_issue_country_err: false,\n          pan_no_err: false\n        })),\n        child_state: Array.from({\n          length: guests_details[index].NoOfChild\n        }, (_, index) => ({\n          type: 2,\n          first_name: \"\",\n          last_name: \"\",\n          gender: 0,\n          dob: \"\",\n          passport_num: \"\",\n          passport_exp: \"\",\n          title: 3,\n          passport_issue: \"\",\n          passport_issue_country: \"\",\n          pan_no: \"\",\n          f_name_err: false,\n          l_name_err: false,\n          dob_err: false,\n          p_num_err: false,\n          p_exp_err: false,\n          title_err: false,\n          passport_issue_err: false,\n          passport_issue_country_err: false,\n          pan_no_err: false\n        }))\n      }));\n      // console.log(per,\"details generated dynamically\")\n      setPersons([...per]);\n    };\n    settraveller_state();\n    // setLoading(true)\n  }, [guests_details, room_details]);\n  const titlechange = (type, index, roomindex) => (event, title) => {\n    if (title === null) {\n      return;\n    } else {\n      // child title updation\n      if (type === 1) {\n        const updatedpersons = [...persons];\n        updatedpersons[roomindex].child_state[index].title = title;\n        setPersons(updatedpersons);\n      }\n      // adult title updation\n      else if (type === 2) {\n        const updatedpersons = [...persons];\n        updatedpersons[roomindex].adult_state[index].title = title;\n        setPersons(updatedpersons);\n      }\n    }\n  };\n  // promocodes callback\n  // type-1 coupon data\n  // type-2 validated coupon and discount data\n  const coupons_data = data => {\n    if (data.type === 1) {\n      setGmt_fee(data.platform_charge);\n      setCoupons(data.couponsdata);\n      setPrices(prev => ({\n        ...prev,\n        totalprice: data.totalprice\n      }));\n    } else {\n      setPrices(prev => ({\n        ...prev,\n        discount: data.discount,\n        updatedprice: data.updated_price,\n        coupon_id: data.couponid,\n        coupon_code: data.couponcode\n      }));\n    }\n  };\n  // 0=>infant\n  // 1=>child\n  // 2=>adult\n  const handleGender = (type, index, roomindex) => (event, gender) => {\n    // child gender updation\n    if (type === 1) {\n      const updatedpersons = [...persons];\n      updatedpersons[roomindex].child_state[index].gender = gender;\n      setPersons(updatedpersons);\n    }\n    // adult gender updation\n    else if (type === 2) {\n      const updatedpersons = [...persons];\n      updatedpersons[roomindex].adult_state[index].gender = gender;\n      setPersons(updatedpersons);\n    }\n    // setGender(gender);\n  };\n  // handle travellers onchange event\n  // 2->adult state\n  // 1->child state\n  const handletravellersinput = (e, index, type, roomindex) => {\n    const {\n      name,\n      value\n    } = e.target;\n    // console.log(value,\"value\")\n    if (type === 2) {\n      // Get a copy of the current persons state\n      const updatedPersons = [...persons];\n      // console.log(updatedPersons[roomindex],\"change\")\n      updatedPersons[roomindex].adult_state[index][name] = value;\n      setPersons(updatedPersons);\n    } else if (type === 1) {\n      // Get a copy of the current persons state\n      const updatedPersons = [...persons];\n      updatedPersons[roomindex].child_state[index][name] = value;\n      setPersons(updatedPersons);\n    }\n  };\n  // travellers dialog opening\n  const Travellersdialogopen = async (index, type, roomindex) => {\n    setTraveller_index({\n      indx: index,\n      type: type,\n      roomindex: roomindex\n    });\n    // console.log(localStorage.getItem(\"userid\"));\n    const userid = localStorage.getItem(\"userid\");\n    if (userid != null) {\n      const res = await Apipost(\"/allTravellers\", {\n        user_id: userid\n      });\n      if (res.status) {\n        setTravellerdata(res.data);\n        setViewtravellerdialog(true);\n      }\n    } else {\n      setSnackopen(true);\n      setSnackmessage(\"you need to login to your account\");\n      // alert(\"you need to login to your account\");\n    }\n  };\n  // travelers call back setting in inputs\n  const traveller_cal = data => {\n    const gendre = data.gender === \"1\" ? 0 : data.gender === \"2\" ? 1 : data.gender === \"3\" && 2;\n    const [birth_day, birth_month, birth_year] = data === null || data === void 0 ? void 0 : data.dob.split(\"/\");\n    let birth_date = `${birth_year}-${birth_month}-${birth_day}`;\n    const [p_day, p_month, p_year] = data === null || data === void 0 ? void 0 : data.passport_expiry.split(\"/\");\n    let passport_expdate = `${p_year}-${p_month}-${p_day}`;\n    const [p_issue_day, p_issue_month, p_issue_year] = data === null || data === void 0 ? void 0 : data.passport_issue_date.split(\"/\");\n    let passport_issue_date = `${p_issue_year}-${p_issue_month}-${p_issue_day}`;\n    // console.log(birth_date);\n    // console.log(passport_expdate);\n    if (traveller_index.type === 2) {\n      // alert(traveller_index.indx);\n      setPersons(prevdata => {\n        const updatedPersons = [...prevdata];\n        updatedPersons[traveller_index.roomindex].adult_state[traveller_index.indx] = {\n          ...updatedPersons[traveller_index.roomindex].adult_state[traveller_index.indx],\n          first_name: data.first_name,\n          last_name: data.last_name,\n          gender: gendre,\n          dob: birth_date,\n          passport_num: data.passport,\n          passport_exp: passport_expdate,\n          passport_issue: passport_issue_date,\n          pan_no: data.pan_card,\n          passport_issue_country: data.passport_issue_country,\n          title: parseInt(data.title)\n        };\n        return updatedPersons;\n      });\n    } else if (traveller_index.type === 1) {\n      setPersons(prevdata => {\n        const updatedPersons = [...prevdata];\n        updatedPersons[traveller_index.roomindex].child_state[traveller_index.indx] = {\n          ...updatedPersons[traveller_index.roomindex].child_state[traveller_index.indx],\n          first_name: data.first_name,\n          last_name: data.last_name,\n          gender: gendre,\n          dob: birth_date,\n          passport_num: data.passport,\n          passport_exp: passport_expdate,\n          passport_issue: passport_issue_date,\n          pan_no: data.pan_card,\n          passport_issue_country: data.passport_issue_country,\n          title: parseInt(data.title)\n        };\n        return updatedPersons;\n      });\n    }\n  };\n  // country selection\n  function handlecountryselected(value) {\n    setSelectedcountry(value);\n  }\n  // if(!persons){\n  //   <h1>loading...</h1>\n  // }\n\n  // payment related start's\n\n  const [transactionStr, setTransactionStr] = useState(\"\");\n  let key = envdata.PayU_hotel_Key; //\"Lk3AOx\";//\n  let salt = envdata.PayU_hotel_salt; //\"VFuQME6bm4OQKXQ7T8Fbxw4XniaBxWxf\"//\n  let productinfo = \"web\";\n  let details;\n  //-----------------------------PAYU key\n  details = `${key}|${transactionStr}|${prices.discount > 0 ? prices.updatedprice : prices.totalprice}|${productinfo}|${(_persons$ = persons[0]) === null || _persons$ === void 0 ? void 0 : (_persons$$adult_state = _persons$.adult_state[0]) === null || _persons$$adult_state === void 0 ? void 0 : _persons$$adult_state.first_name}|${ticket_receiver_info.email}|||||||||||${salt}`;\n  // details = `${key}|${transactionStr}|10|${productinfo}|${persons[0]?.adult_state[0]?.first_name}|${\n  //   ticket_receiver_info.email\n  // }|||||||||||${salt}`;\n  console.log(details, \"detailjs\");\n  let hashedValue = sha512.create();\n  hashedValue.update(details);\n  let hashedData = hashedValue.hex();\n  // const [hashedData,setHashedData] = useState(); //= hashedValue.hex();\n\n  useEffect(() => {\n    const randomFiveDigitNumber = Math.floor(10000 + Math.random() * 90000);\n    let txnid = \"txnid\" + \"-\" + Date.now() + randomFiveDigitNumber; //crypto.randomUUID();\n    setTransactionStr(txnid);\n  }, []);\n\n  // payment related end's\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MySnackbar, {\n      open: snackopen,\n      close: snackclose,\n      message: snackmessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hotelconfirmation, {\n      open: hotelbooked,\n      close: () => setHotelbooked(false),\n      data: booking_details\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countrycodefilter, {\n      open: countrydialog,\n      onclose: () => setCountrydialog(false),\n      selectedvalue: handlecountryselected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loadingmodal, {\n      open: loading,\n      loadingclose: () => setLoading(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tickettravellers, {\n      open: viewtravellerdialog,\n      close: () => setViewtravellerdialog(false),\n      travellers: travellerdata,\n      traveller_data: traveller_cal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          md: 9,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            mt: {\n              md: 1,\n              xs: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: room_style.text,\n              style: {\n                display: \"flex\",\n                gap: \"10px\"\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                sx: {\n                  display: {\n                    md: \"none\",\n                    xs: \"block\"\n                  }\n                },\n                onClick: () => navigate(-1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1453,\n                columnNumber: 17\n              }, this), \" \", \"Complete your Booking\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1448,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              mt: 1,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  borderRadius: \"0.8rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  p: 1,\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 3,\n                      xs: 12,\n                      sx: {\n                        padding: \"8px\",\n                        height: \"11rem\"\n                      },\n                      textAlign: \"center\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: (hotel_info === null || hotel_info === void 0 ? void 0 : hotel_info.Images) === undefined ? \"\" : hotel_info === null || hotel_info === void 0 ? void 0 : hotel_info.Images[0],\n                        alt: \"selected_room\",\n                        style: {\n                          maxWidth: \"100%\",\n                          maxHeight: \"100%\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          borderRadius: \"0.7rem\",\n                          objectFit: \"cover\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1472,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1465,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      container: true,\n                      direction: \"column\",\n                      md: 8.5,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: room_style.hotelname,\n                          children: hotel_info.HotelName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1487,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1486,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Stack, {\n                          direction: \"row\",\n                          children: Array.from({\n                            length: hotel_info.StarRating\n                          }, (_, index) => {\n                            return /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: Ratingstar,\n                              alt: \"ratingstar\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1497,\n                              columnNumber: 35\n                            }, this);\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1492,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1491,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: room_style.hotel_loc,\n                          children: typeof (hotel_info === null || hotel_info === void 0 ? void 0 : hotel_info.Address) === \"string\" && hotel_info.Address\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1504,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1503,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        container: true,\n                        rowGap: 1,\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 2.5,\n                          xs: 4,\n                          children: /*#__PURE__*/_jsxDEV(Stack, {\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: room_style.hotel_loc,\n                              children: [\"Check-In\", \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1511,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: room_style.hotel_checked_dates,\n                              children: helperFunctions.get_numeric_date(hotelresult.CheckInDate)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1514,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: room_style.hotel_loc,\n                              children: [`${helperFunctions.day_name(hotelresult.CheckInDate)} ${checkintime}`, \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1519,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1510,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1509,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 2.5,\n                          xs: 4,\n                          alignSelf: \"center\",\n                          textAlign: \"center\",\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: room_style.days_stay,\n                            children: `${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate)} ${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate) > 1 ? \"Nights\" : \"Night\"}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1533,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1526,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          md: 2.5,\n                          xs: 4,\n                          children: /*#__PURE__*/_jsxDEV(Stack, {\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: room_style.hotel_loc,\n                              children: \"Check-Out\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1549,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: room_style.hotel_checked_dates,\n                              children: helperFunctions.get_numeric_date(hotelresult.CheckOutDate)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1552,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: room_style.hotel_loc,\n                              children: `${helperFunctions.day_name(hotelresult.CheckOutDate)} ${checkouttime}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1557,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1548,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1547,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          container: true,\n                          justifyContent: \"space-between\",\n                          md: 4.5,\n                          xs: 12,\n                          alignSelf: \"center\",\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            sx: {\n                              display: {\n                                md: \"none\",\n                                xs: \"block\"\n                              },\n                              fontSize: \"14px\",\n                              color: \"rgba(0, 53, 86, 1)\",\n                              fontWeight: \"500\"\n                            },\n                            children: \"Rooms & guests\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1572,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n                            separator: \"|\",\n                            className: room_style.guests_count,\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              children: `${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate)} ${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate) > 1 ? \"Nights\" : \"Night\"}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1586,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: [adult_num + child_num, \" Guest\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1600,\n                              columnNumber: 31\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: `${guests_details.length} ${guests_details.length > 1 ? \"Rooms\" : \"Room\"}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1601,\n                              columnNumber: 31\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1582,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1564,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1508,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1485,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1464,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    sx: {\n                      borderBottom: `1px dashed ${styles.app_color}`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1609,\n                    columnNumber: 21\n                  }, this), (room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) !== undefined && /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: room_style.room_name,\n                      children: [(_room_details$HotelRo = room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[0])) === null || _room_details$HotelRo === void 0 ? void 0 : _room_details$HotelRo.RoomTypeName, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1617,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1615,\n                    columnNumber: 71\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"14px\",\n                      fontWeight: 400,\n                      color: \"#000000\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1630,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1463,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1462,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                display: {\n                  xs: \"block\",\n                  md: \"none\"\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  padding: \"1rem\",\n                  borderRadius: \"0.5rem\"\n                },\n                elevation: 3,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 1.5,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: ticketbook.completebookings,\n                      children: \"Fare summary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1655,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1654,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    justifyContent: \"space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: `${guests_details.length} ${guests_details.length > 1 ? \"Rooms\" : \"Room\"} * ${`${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate)} ${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate) > 1 ? \"Nights\" : \"Night\"}`}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1662,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: \"grey\",\n                            fontSize: \"12px\"\n                          },\n                          children: \"Base Price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1677,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1661,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1660,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: `${cancellation_policies[0].Currency} ${room_details.RoomCombinationsArray === undefined ? open_room_price : fixed_room_price}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1682,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1659,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1688,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1687,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      justifyContent: \"space-between\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: \"Fee & Surcharges\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1708,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        textAlign: \"right\",\n                        children: `${cancellation_policies[0].Currency} ${gmt_fee}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1709,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1707,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1706,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1715,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1714,\n                    columnNumber: 21\n                  }, this), prices.discount > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        justifyContent: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: \"Total Discount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1721,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          sx: {\n                            color: \"#3F8CFF\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Stack, {\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              children: `- ${cancellation_policies[0].Currency} ${prices.discount}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1724,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              style: {\n                                border: \"none\",\n                                background: \"none\",\n                                color: \"red\",\n                                textDecoration: \"underline\"\n                              },\n                              onClick: () => {\n                                setPrices(prev => ({\n                                  ...prev,\n                                  discount: 0\n                                }));\n                              },\n                              children: \"Remove\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1726,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1723,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1722,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1720,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1719,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1747,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1746,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      sx: {\n                        color: styles.app_color\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: ticketbook.totalamount,\n                          children: \"Total Amount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1754,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1753,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        textAlign: \"right\",\n                        sx: {\n                          fontWeight: 500\n                        },\n                        children: `${(room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) !== undefined && cancellation_policies[0].Currency} ${prices.discount > 0 ? prices.updatedprice : prices.totalprice}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1758,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1752,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1751,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1653,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1649,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1648,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                padding: \"1rem\",\n                borderRadius: \"0.8rem\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: Refundpolicy,\n                      alt: \"cancellation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1779,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: room_style.room_name,\n                      children: \"Cancellation Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1780,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1778,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1777,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 1,\n                  sx: {\n                    padding: \"1rem\",\n                    backgroundColor: styles.shade_color,\n                    borderRadius: \"0.5rem\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 4,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: room_style.cancel_header,\n                        children: \"Cancellation Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1797,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1796,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 4,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: room_style.cancel_header,\n                        children: \"Penalty%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1802,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1801,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 4,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: room_style.cancel_header,\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1807,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1806,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1795,\n                    columnNumber: 21\n                  }, this), cancellation_policies.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      container: true,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        md: 4,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: room_style.hotel_loc,\n                          children: `Before ${(room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) === undefined ? item.FromDate : helperFunctions.calculateDateDifference(hotelresult.CheckInDate, item.FromDate)}- ${(room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) === undefined ? item.ToDate : helperFunctions.calculateDateDifference(hotelresult.CheckInDate, item.ToDate)} Days`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1814,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1813,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        md: 4,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: room_style.hotel_loc,\n                          children: `${(room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) === undefined ? Hotelhelpers.open_room_cancellation_percent(item === null || item === void 0 ? void 0 : item.ChargeType, item === null || item === void 0 ? void 0 : item.Charge, location1 === null || location1 === void 0 ? void 0 : location1.state, room_details === null || room_details === void 0 ? void 0 : room_details.HotelRoomsDetails) : helperFunctions.hotel_cancellation_penalty(item.ChargeType, item.Charge, location1.state, room_details.HotelRoomsDetails)}%`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1825,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1824,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        md: 4,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: room_style.hotel_loc,\n                          children: `${item.Currency} ${(room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) === undefined ? Hotelhelpers.open_room_cancellation_rs(item === null || item === void 0 ? void 0 : item.ChargeType, item === null || item === void 0 ? void 0 : item.Charge, location1 === null || location1 === void 0 ? void 0 : location1.state, room_details === null || room_details === void 0 ? void 0 : room_details.HotelRoomsDetails) : helperFunctions.hotel_cancellation_penalty_rs(item.ChargeType, item.Charge, location1.state, room_details.HotelRoomsDetails)}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1837,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1836,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1812,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1785,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1776,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1775,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              sx: {\n                display: {\n                  md: \"none\",\n                  xs: \"block\"\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(PromoCodes, {\n                coupons: coupons_data,\n                data: {\n                  baseprice: (room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) === undefined ? open_room_price : fixed_room_price,\n                  count: guests_details.length\n                },\n                all_prices: prices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1861,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1860,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Importantinfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1870,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                borderRadius: \"0.8rem\",\n                padding: \"1.5rem 0.5rem 0.5rem 1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(HealthAndSafetyIcon, {\n                  sx: {\n                    color: styles.app_color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1878,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: styles.app_color,\n                    fontWeight: 500\n                  },\n                  children: \"Health Insurance Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1879,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1877,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Protection your stay in Hotel from COVID - 19, medical costs & more with Health Insurance from our partner Xcover.\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1885,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: health_insurance,\n                onChange: e => setHealth_insurance(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"yes\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    sx: {\n                      color: \"white\",\n                      \"&, &.Mui-checked\": {\n                        color: styles.textcolor\n                      },\n                      size: \"small\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1896,\n                    columnNumber: 23\n                  }, this),\n                  label: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"14px\",\n                      fontFamily: \"poppins\"\n                    },\n                    children: [\"Yes, add Health Insurance with COVID-19 Cover for only \\u20B9 99.00\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1907,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1893,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  pl: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Stack, {\n                      direction: \"row\",\n                      spacing: 1,\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: correct,\n                        alt: \"correct\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1916,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: room_style.insurance_text,\n                        children: \"Emergency medical\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1917,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1915,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1914,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Stack, {\n                      direction: \"row\",\n                      spacing: 1,\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: correct,\n                        alt: \"correct\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1924,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: room_style.insurance_text,\n                        children: \"24/7 Emergency assistance\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1925,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1923,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1922,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1913,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"no\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    sx: {\n                      color: \"white\",\n                      \"&, &.Mui-checked\": {\n                        color: styles.textcolor\n                      },\n                      size: \"small\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1934,\n                    columnNumber: 23\n                  }, this),\n                  label: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"14px\",\n                      fontFamily: \"poppins\"\n                    },\n                    children: \"No, thanks, I\\u2019ll risk it.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1946,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1931,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1889,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1871,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: textFieldRef,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: ticketbook.paperadjustment,\n                elevation: 3,\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1.5,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: personblue,\n                    alt: \"personblue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1957,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: ticketbook.textsize,\n                    children: \"Guest Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1958,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1956,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  mt: 1,\n                  direction: \"column\",\n                  children: [Array.from({\n                    length: guests_details.length\n                  }, (_, roomindex) => {\n                    // console.log(room_details.HotelRoomsDetails.find(item=>item.RoomIndex===selectedroom[roomindex]),\"true\")\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        style: {\n                          marginLeft: \"1rem\",\n                          color: styles.app_color,\n                          marginTop: `${roomindex === 0 ? 0 : 1}rem`\n                        },\n                        children: [\"Room\", roomindex + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1971,\n                        columnNumber: 29\n                      }, this), Array.from({\n                        length: guests_details[roomindex].NoOfAdults\n                      }, (_, index) => {\n                        var _persons$roomindex, _persons$roomindex$ad, _persons$roomindex2, _persons$roomindex2$a, _persons$roomindex3, _persons$roomindex3$a, _persons$roomindex4, _persons$roomindex4$a, _persons$roomindex5, _persons$roomindex5$a, _room_details$HotelRo2, _persons$roomindex6, _persons$roomindex6$a, _persons$roomindex7, _persons$roomindex7$a, _persons$roomindex8, _persons$roomindex8$a, _persons$roomindex10, _persons$roomindex10$, _persons$roomindex12, _persons$roomindex12$, _persons$roomindex13, _persons$roomindex13$;\n                        return /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            container: true,\n                            direction: \"column\",\n                            spacing: 1,\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              container: true,\n                              spacing: 1,\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                mt: 0.4,\n                                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                  src: traveller,\n                                  alt: \"traveller\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1994,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1993,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                sx: {\n                                  fontWeight: \"600\"\n                                },\n                                children: \"Adult\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1999,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1992,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              container: true,\n                              spacing: 2,\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: 4,\n                                xs: 12,\n                                children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                                  value: (_persons$roomindex = persons[roomindex]) === null || _persons$roomindex === void 0 ? void 0 : (_persons$roomindex$ad = _persons$roomindex.adult_state[index]) === null || _persons$roomindex$ad === void 0 ? void 0 : _persons$roomindex$ad.title,\n                                  exclusive: true,\n                                  onChange: titlechange(2, index, roomindex),\n                                  size: \"small\",\n                                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    disableRipple: true,\n                                    value: 1,\n                                    sx: {\n                                      // padding: \"0.3rem 1rem\",\n                                      // background: \"#EEF7FD\",\n                                      // color: styles.app_color,\n                                      // border: \"none\",\n                                      // borderRadius: \"0.5rem!important\",\n                                      // width:'4rem'\n                                      padding: \"0.3rem 1rem\",\n                                      background: \"#EEF7FD\",\n                                      color: styles.app_color,\n                                      border: \"none\",\n                                      borderRadius: \"0.5rem!important\",\n                                      width: \"4rem\",\n                                      textTransform: \"none\",\n                                      \"@media (min-width:900px) and (max-width:1300px)\": {\n                                        width: \"fit-content\",\n                                        padding: \"0rem 0.5rem\"\n                                      },\n                                      \"@media (max-width:367px)\": {\n                                        width: \"fit-content\",\n                                        padding: \"0rem 0.5rem !important\",\n                                        marginLeft: \"0.5rem!important\"\n                                      }\n                                    },\n                                    children: \"MR\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2020,\n                                    columnNumber: 45\n                                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    disableRipple: true,\n                                    value: 2,\n                                    className: ticketbook.titlebtns,\n                                    children: \"MRS\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2054,\n                                    columnNumber: 45\n                                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    value: 3,\n                                    disableRipple: true,\n                                    className: ticketbook.titlebtns,\n                                    children: \"MSTR\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2061,\n                                    columnNumber: 45\n                                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    value: 4,\n                                    disableRipple: true,\n                                    className: ticketbook.titlebtns,\n                                    children: \"Ms\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2068,\n                                    columnNumber: 45\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2006,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2005,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: 4,\n                                xs: 12,\n                                children: /*#__PURE__*/_jsxDEV(TextField, {\n                                  className: classes.travelerinfo,\n                                  label: \"*First Name\",\n                                  fullWidth: true,\n                                  size: \"small\",\n                                  name: \"first_name\"\n                                  // error={adult_state[index].f_name_err}\n                                  // helperText={adult_state[index].f_name_err ? 'Firstname shouldnt be empty' : ''}\n                                  ,\n                                  onChange: e => handletravellersinput(e, index, 2, roomindex),\n                                  value: (_persons$roomindex2 = persons[roomindex]) === null || _persons$roomindex2 === void 0 ? void 0 : (_persons$roomindex2$a = _persons$roomindex2.adult_state[index]) === null || _persons$roomindex2$a === void 0 ? void 0 : _persons$roomindex2$a.first_name,\n                                  InputLabelProps: {\n                                    style: {\n                                      color: (_persons$roomindex3 = persons[roomindex]) !== null && _persons$roomindex3 !== void 0 && (_persons$roomindex3$a = _persons$roomindex3.adult_state[index]) !== null && _persons$roomindex3$a !== void 0 && _persons$roomindex3$a.f_name_err ? \"red\" : \"#8F9098\",\n                                      fontWeight: \"500\"\n                                    }\n                                  },\n                                  InputProps: {\n                                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                      position: \"start\",\n                                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                        src: person,\n                                        alt: \"personn\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 2113,\n                                        columnNumber: 51\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2112,\n                                      columnNumber: 49\n                                    }, this)\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2079,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2077,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: 4,\n                                xs: 12,\n                                children: /*#__PURE__*/_jsxDEV(TextField, {\n                                  className: classes.travelerinfo,\n                                  label: \"*Last Name\",\n                                  fullWidth: true,\n                                  name: \"last_name\",\n                                  onChange: e => handletravellersinput(e, index, 2, roomindex),\n                                  value: (_persons$roomindex4 = persons[roomindex]) === null || _persons$roomindex4 === void 0 ? void 0 : (_persons$roomindex4$a = _persons$roomindex4.adult_state[index]) === null || _persons$roomindex4$a === void 0 ? void 0 : _persons$roomindex4$a.last_name\n                                  // error={adult_state[index].l_name_err}\n                                  // helperText={adult_state[index].l_name_err ? 'Lastname shouldnt be empty' : ''}\n                                  ,\n                                  InputLabelProps: {\n                                    style: {\n                                      color: (_persons$roomindex5 = persons[roomindex]) !== null && _persons$roomindex5 !== void 0 && (_persons$roomindex5$a = _persons$roomindex5.adult_state[index]) !== null && _persons$roomindex5$a !== void 0 && _persons$roomindex5$a.l_name_err ? \"red\" : \"#8F9098\",\n                                      fontWeight: \"500\"\n                                    }\n                                  },\n                                  InputProps: {\n                                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                      position: \"start\",\n                                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                        src: person,\n                                        alt: \"personn\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 2156,\n                                        columnNumber: 51\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2155,\n                                      columnNumber: 49\n                                    }, this)\n                                  },\n                                  size: \"small\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2123,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2122,\n                                columnNumber: 41\n                              }, this), ((_room_details$HotelRo2 = room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[roomindex] && item.CategoryId === category_ids)) === null || _room_details$HotelRo2 === void 0 ? void 0 : _room_details$HotelRo2.RequireAllPaxDetails) &&\n                              /*#__PURE__*/\n                              // true\n                              _jsxDEV(_Fragment, {\n                                children: [room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[roomindex]).IsPassportMandatory && /*#__PURE__*/_jsxDEV(_Fragment, {\n                                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    md: 4,\n                                    xs: 12,\n                                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                                      className: classes.travelerinfo,\n                                      label: \"*Passport No\",\n                                      fullWidth: true,\n                                      name: \"passport_num\",\n                                      onChange: e => handletravellersinput(e, index, 2, roomindex),\n                                      value: (_persons$roomindex6 = persons[roomindex]) === null || _persons$roomindex6 === void 0 ? void 0 : (_persons$roomindex6$a = _persons$roomindex6.adult_state[index]) === null || _persons$roomindex6$a === void 0 ? void 0 : _persons$roomindex6$a.passport_num\n                                      // error={adult_state[index].p_num_err}\n                                      // helperText={adult_state[index].p_num_err ? 'Passport_num shouldnt be empty' : ''}\n                                      ,\n                                      InputLabelProps: {\n                                        style: {\n                                          color: (_persons$roomindex7 = persons[roomindex]) !== null && _persons$roomindex7 !== void 0 && (_persons$roomindex7$a = _persons$roomindex7.adult_state[index]) !== null && _persons$roomindex7$a !== void 0 && _persons$roomindex7$a.p_num_err ? \"red\" : \"#8F9098\",\n                                          fontWeight: \"500\"\n                                        }\n                                      },\n                                      InputProps: {\n                                        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                          position: \"start\",\n                                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                            src: passport,\n                                            alt: \"passport\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 2376,\n                                            columnNumber: 59\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 2375,\n                                          columnNumber: 57\n                                        }, this)\n                                      },\n                                      size: \"small\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2340,\n                                      columnNumber: 51\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2339,\n                                    columnNumber: 49\n                                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    md: 4,\n                                    xs: 12,\n                                    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                                      dateAdapter: AdapterDateFns,\n                                      children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                                        inputFormat: \"MM/dd/yyyy\"\n                                        //  disabled={disableCalendar}\n                                        ,\n                                        sx: {\n                                          \"& .MuiPickersToolbar-penIconButton\": {\n                                            display: \"none\"\n                                          }\n                                        },\n                                        closeOnSelect: true,\n                                        disablePast: true\n                                        //  inputRef={busDateSelectRef}\n                                        ,\n\n                                        label: \"passport_exp\",\n                                        value: (_persons$roomindex8 = persons[roomindex]) === null || _persons$roomindex8 === void 0 ? void 0 : (_persons$roomindex8$a = _persons$roomindex8.adult_state[index]) === null || _persons$roomindex8$a === void 0 ? void 0 : _persons$roomindex8$a.passport_exp // error={adult_state[index].dob_err}\n                                        // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                        ,\n                                        onChange: newvalue => setPersons(prevdata => {\n                                          const updatedpersons = [...prevdata];\n                                          updatedpersons[roomindex].adult_state[index].passport_exp = newvalue;\n                                          return updatedpersons;\n                                        }),\n                                        renderInput: params => {\n                                          var _persons$roomindex9, _persons$roomindex9$a;\n                                          return /*#__PURE__*/_jsxDEV(TextField, {\n                                            id: \"dateInputTag\",\n                                            sx: {\n                                              minWidth: \"90px\"\n                                            }\n                                            // size=\"small\"\n                                            ,\n                                            ...params,\n                                            fullWidth: true,\n                                            autoComplete: \"off\",\n                                            name: \"dob\",\n                                            size: \"small\",\n                                            label: /*#__PURE__*/_jsxDEV(\"span\", {\n                                              style: {\n                                                paddingRight: \"0.5rem\"\n                                              },\n                                              children: \"* Passport Expiry\"\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 2438,\n                                              columnNumber: 61\n                                            }, this)\n                                            // value=\"\"\n                                            ,\n                                            className: classes.travelerinfo,\n                                            InputLabelProps: {\n                                              style: {\n                                                color: (_persons$roomindex9 = persons[roomindex]) !== null && _persons$roomindex9 !== void 0 && (_persons$roomindex9$a = _persons$roomindex9.adult_state[index]) !== null && _persons$roomindex9$a !== void 0 && _persons$roomindex9$a.p_exp_err ? \"red\" : \"#8F9098\",\n                                                fontWeight: \"500\"\n                                              }\n                                            },\n                                            InputProps: {\n                                              readOnly: true,\n                                              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                                position: \"start\",\n                                                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                                  src: passport,\n                                                  alt: \"caleder\"\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 2467,\n                                                  columnNumber: 65\n                                                }, this)\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 2466,\n                                                columnNumber: 63\n                                              }, this)\n                                            }\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 2426,\n                                            columnNumber: 57\n                                          }, this);\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 2390,\n                                        columnNumber: 53\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2387,\n                                      columnNumber: 51\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2386,\n                                    columnNumber: 49\n                                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    md: 4,\n                                    xs: 12,\n                                    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                                      dateAdapter: AdapterDateFns,\n                                      children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                                        inputFormat: \"MM/dd/yyyy\"\n                                        //  disabled={disableCalendar}\n                                        ,\n                                        sx: {\n                                          \"& .MuiPickersToolbar-penIconButton\": {\n                                            display: \"none\"\n                                          }\n                                        },\n                                        closeOnSelect: true,\n                                        disableFuture: true\n                                        //  inputRef={busDateSelectRef}\n                                        ,\n\n                                        label: \"passport_issue\",\n                                        value: (_persons$roomindex10 = persons[roomindex]) === null || _persons$roomindex10 === void 0 ? void 0 : (_persons$roomindex10$ = _persons$roomindex10.adult_state[index]) === null || _persons$roomindex10$ === void 0 ? void 0 : _persons$roomindex10$.passport_issue // error={adult_state[index].dob_err}\n                                        // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                        ,\n                                        onChange: newvalue => setPersons(prevdata => {\n                                          const updatedpersons = [...prevdata];\n                                          updatedpersons[roomindex].adult_state[index].passport_issue = newvalue;\n                                          return updatedpersons;\n                                        }),\n                                        renderInput: params => {\n                                          var _persons$roomindex11, _persons$roomindex11$;\n                                          return /*#__PURE__*/_jsxDEV(TextField, {\n                                            id: \"dateInputTag\",\n                                            sx: {\n                                              minWidth: \"90px\"\n                                            }\n                                            // size=\"small\"\n                                            ,\n                                            ...params,\n                                            fullWidth: true,\n                                            autoComplete: \"off\",\n                                            name: \"dob\",\n                                            size: \"small\",\n                                            label: /*#__PURE__*/_jsxDEV(\"span\", {\n                                              style: {\n                                                paddingRight: \"0.5rem\"\n                                              },\n                                              children: \"* Passport Issue Date\"\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 2531,\n                                              columnNumber: 61\n                                            }, this)\n                                            // value=\"\"\n                                            ,\n                                            className: classes.travelerinfo,\n                                            InputLabelProps: {\n                                              style: {\n                                                color: (_persons$roomindex11 = persons[roomindex]) !== null && _persons$roomindex11 !== void 0 && (_persons$roomindex11$ = _persons$roomindex11.adult_state[index]) !== null && _persons$roomindex11$ !== void 0 && _persons$roomindex11$.passport_issue_err ? \"red\" : \"#8F9098\",\n                                                fontWeight: \"500\"\n                                              }\n                                            },\n                                            InputProps: {\n                                              readOnly: true,\n                                              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                                position: \"start\",\n                                                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                                  src: passport,\n                                                  alt: \"caleder\"\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 2562,\n                                                  columnNumber: 65\n                                                }, this)\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 2561,\n                                                columnNumber: 63\n                                              }, this)\n                                            }\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 2519,\n                                            columnNumber: 57\n                                          }, this);\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 2483,\n                                        columnNumber: 53\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2480,\n                                      columnNumber: 51\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2479,\n                                    columnNumber: 49\n                                  }, this)]\n                                }, void 0, true), room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[roomindex]).IsPANMandatory && /*#__PURE__*/_jsxDEV(Grid, {\n                                  item: true,\n                                  md: 4,\n                                  xs: 12,\n                                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                                    className: classes.travelerinfo,\n                                    label: \"Pan Card No \",\n                                    fullWidth: true,\n                                    name: \"pan_no\",\n                                    onChange: e => handletravellersinput(e, index, 2, roomindex),\n                                    value: (_persons$roomindex12 = persons[roomindex]) === null || _persons$roomindex12 === void 0 ? void 0 : (_persons$roomindex12$ = _persons$roomindex12.adult_state[index]) === null || _persons$roomindex12$ === void 0 ? void 0 : _persons$roomindex12$.pan_no\n                                    // error={adult_state[index].p_num_err}\n                                    // helperText={adult_state[index].p_num_err ? 'Passport_num shouldnt be empty' : ''}\n                                    ,\n                                    InputLabelProps: {\n                                      style: {\n                                        color: (_persons$roomindex13 = persons[roomindex]) !== null && _persons$roomindex13 !== void 0 && (_persons$roomindex13$ = _persons$roomindex13.adult_state[index]) !== null && _persons$roomindex13$ !== void 0 && _persons$roomindex13$.pan_no_err ? \"red\" : \"#8F9098\",\n                                        fontWeight: \"500\"\n                                      }\n                                    },\n                                    InputProps: {\n                                      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                        position: \"start\",\n                                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                          src: pan_card,\n                                          alt: \"passport\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 2664,\n                                          columnNumber: 57\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 2663,\n                                        columnNumber: 55\n                                      }, this)\n                                    },\n                                    size: \"small\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2629,\n                                    columnNumber: 49\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2628,\n                                  columnNumber: 47\n                                }, this)]\n                              }, void 0, true)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2004,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              container: true,\n                              columnGap: 2,\n                              rowGap: 2,\n                              children: /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: \"auto\",\n                                children: /*#__PURE__*/_jsxDEV(Button, {\n                                  onClick: () => Travellersdialogopen(index, 2, roomindex),\n                                  variant: \"contained\",\n                                  disableRipple: true,\n                                  className: ticketbook.addtravellerbtn,\n                                  children: \"Existence Guest\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2686,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2685,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2679,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1986,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false);\n                      }), Array.from({\n                        length: guests_details[roomindex].NoOfChild\n                      }, (_, index) => {\n                        var _persons$roomindex14, _persons$roomindex14$, _persons$roomindex15, _persons$roomindex15$, _persons$roomindex16, _persons$roomindex16$, _persons$roomindex17, _persons$roomindex17$, _persons$roomindex18, _persons$roomindex18$, _persons$roomindex19, _persons$roomindex19$, _persons$roomindex20, _persons$roomindex20$, _persons$roomindex21, _persons$roomindex21$, _persons$roomindex23, _persons$roomindex23$;\n                        return /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            container: true,\n                            direction: \"column\",\n                            spacing: 2,\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              container: true,\n                              spacing: 1,\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                mt: 0.4,\n                                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                  src: traveller,\n                                  alt: \"traveller\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2732,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2731,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                sx: {\n                                  fontWeight: \"600\"\n                                },\n                                children: \"Child\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2737,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2730,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              container: true,\n                              spacing: 3,\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: 4,\n                                xs: 12,\n                                children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                                  value: (_persons$roomindex14 = persons[roomindex]) === null || _persons$roomindex14 === void 0 ? void 0 : (_persons$roomindex14$ = _persons$roomindex14.child_state[index]) === null || _persons$roomindex14$ === void 0 ? void 0 : _persons$roomindex14$.title,\n                                  exclusive: true,\n                                  onChange: titlechange(1, index, roomindex),\n                                  size: \"small\",\n                                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    disableRipple: true,\n                                    value: 1,\n                                    sx: {\n                                      // padding: \"0.3rem 1rem\",\n                                      // background: \"#EEF7FD\",\n                                      // color: styles.app_color,\n                                      // border: \"none\",\n                                      // borderRadius: \"0.5rem!important\",\n                                      // width:'4rem'\n                                      padding: \"0.3rem 1rem\",\n                                      background: \"#EEF7FD\",\n                                      color: styles.app_color,\n                                      border: \"none\",\n                                      borderRadius: \"0.5rem!important\",\n                                      width: \"4rem\",\n                                      textTransform: \"none\",\n                                      \"@media (min-width:900px) and (max-width:1300px)\": {\n                                        width: \"fit-content\",\n                                        padding: \"0rem 0.5rem\"\n                                      },\n                                      \"@media (max-width:367px)\": {\n                                        width: \"fit-content\",\n                                        padding: \"0rem 0.5rem !important\",\n                                        marginLeft: \"0.5rem!important\"\n                                      }\n                                    },\n                                    children: \"MR\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2759,\n                                    columnNumber: 45\n                                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    disableRipple: true,\n                                    value: 2,\n                                    className: ticketbook.titlebtns,\n                                    children: \"MRS\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2793,\n                                    columnNumber: 45\n                                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    value: 3,\n                                    disableRipple: true,\n                                    className: ticketbook.titlebtns,\n                                    children: \"MSTR\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2800,\n                                    columnNumber: 45\n                                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                                    value: 4,\n                                    disableRipple: true,\n                                    className: ticketbook.titlebtns,\n                                    children: \"Ms\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2807,\n                                    columnNumber: 45\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2745,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2743,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: 4,\n                                xs: 12,\n                                children: /*#__PURE__*/_jsxDEV(TextField, {\n                                  className: classes.travelerinfo,\n                                  label: \"*First Name\",\n                                  name: \"first_name\",\n                                  onChange: e => handletravellersinput(e, index, 1, roomindex),\n                                  value: (_persons$roomindex15 = persons[roomindex]) === null || _persons$roomindex15 === void 0 ? void 0 : (_persons$roomindex15$ = _persons$roomindex15.child_state[index]) === null || _persons$roomindex15$ === void 0 ? void 0 : _persons$roomindex15$.first_name,\n                                  fullWidth: true,\n                                  size: \"small\",\n                                  InputLabelProps: {\n                                    style: {\n                                      color: (_persons$roomindex16 = persons[roomindex]) !== null && _persons$roomindex16 !== void 0 && (_persons$roomindex16$ = _persons$roomindex16.child_state[index]) !== null && _persons$roomindex16$ !== void 0 && _persons$roomindex16$.f_name_err ? \"red\" : \"#8F9098\",\n                                      fontWeight: \"500\"\n                                    }\n                                  },\n                                  InputProps: {\n                                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                      position: \"start\",\n                                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                        src: person,\n                                        alt: \"personn\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 2850,\n                                        columnNumber: 51\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2849,\n                                      columnNumber: 49\n                                    }, this)\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2818,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2816,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: 4,\n                                xs: 12,\n                                children: /*#__PURE__*/_jsxDEV(TextField, {\n                                  className: classes.travelerinfo,\n                                  label: \"*Last Name\",\n                                  name: \"last_name\",\n                                  onChange: e => handletravellersinput(e, index, 1, roomindex),\n                                  value: (_persons$roomindex17 = persons[roomindex]) === null || _persons$roomindex17 === void 0 ? void 0 : (_persons$roomindex17$ = _persons$roomindex17.child_state[index]) === null || _persons$roomindex17$ === void 0 ? void 0 : _persons$roomindex17$.last_name,\n                                  fullWidth: true,\n                                  InputLabelProps: {\n                                    style: {\n                                      color: (_persons$roomindex18 = persons[roomindex]) !== null && _persons$roomindex18 !== void 0 && (_persons$roomindex18$ = _persons$roomindex18.child_state[index]) !== null && _persons$roomindex18$ !== void 0 && _persons$roomindex18$.l_name_err ? \"red\" : \"#8F9098\",\n                                      fontWeight: \"500\"\n                                    }\n                                  },\n                                  InputProps: {\n                                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                      position: \"start\",\n                                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                        src: person,\n                                        alt: \"personn\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 2891,\n                                        columnNumber: 51\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 2890,\n                                      columnNumber: 49\n                                    }, this)\n                                  },\n                                  size: \"small\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2860,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2859,\n                                columnNumber: 41\n                              }, this), room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[roomindex]).RequireAllPaxDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: room_details.HotelRoomsDetails.find(item => item.RoomIndex === selectedroom[roomindex]).IsPassportMandatory && /*#__PURE__*/_jsxDEV(_Fragment, {\n                                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    md: 4,\n                                    xs: 12,\n                                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                                      className: classes.travelerinfo,\n                                      label: \"*Passport No\",\n                                      name: \"passport_num\",\n                                      onChange: e => handletravellersinput(e, index, 1, roomindex),\n                                      value: (_persons$roomindex19 = persons[roomindex]) === null || _persons$roomindex19 === void 0 ? void 0 : (_persons$roomindex19$ = _persons$roomindex19.child_state[index]) === null || _persons$roomindex19$ === void 0 ? void 0 : _persons$roomindex19$.passport_num,\n                                      fullWidth: true,\n                                      InputLabelProps: {\n                                        style: {\n                                          color: (_persons$roomindex20 = persons[roomindex]) !== null && _persons$roomindex20 !== void 0 && (_persons$roomindex20$ = _persons$roomindex20.child_state[index]) !== null && _persons$roomindex20$ !== void 0 && _persons$roomindex20$.p_num_err ? \"red\" : \"#8F9098\",\n                                          fontWeight: \"500\"\n                                        }\n                                      },\n                                      InputProps: {\n                                        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                          position: \"start\",\n                                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                            src: passport,\n                                            alt: \"passport\"\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 3126,\n                                            columnNumber: 59\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 3125,\n                                          columnNumber: 57\n                                        }, this)\n                                      },\n                                      size: \"small\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 3092,\n                                      columnNumber: 51\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 3091,\n                                    columnNumber: 49\n                                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    md: 4,\n                                    xs: 12,\n                                    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                                      dateAdapter: AdapterDateFns,\n                                      children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                                        inputFormat: \"MM/dd/yyyy\"\n                                        //  disabled={disableCalendar}\n                                        ,\n                                        sx: {\n                                          \"& .MuiPickersToolbar-penIconButton\": {\n                                            display: \"none\"\n                                          }\n                                        },\n                                        closeOnSelect: true,\n                                        disablePast: true\n                                        //  inputRef={busDateSelectRef}\n                                        ,\n\n                                        label: \"passport_exp\",\n                                        value: (_persons$roomindex21 = persons[roomindex]) === null || _persons$roomindex21 === void 0 ? void 0 : (_persons$roomindex21$ = _persons$roomindex21.child_state[index]) === null || _persons$roomindex21$ === void 0 ? void 0 : _persons$roomindex21$.passport_exp // error={adult_state[index].dob_err}\n                                        // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                        ,\n                                        onChange: newvalue => setPersons(prevdata => {\n                                          const updatedpersons = [...prevdata];\n                                          updatedpersons[roomindex].child_state[index].passport_exp = newvalue;\n                                          return updatedpersons;\n                                        }),\n                                        renderInput: params => {\n                                          var _persons$roomindex22, _persons$roomindex22$;\n                                          return /*#__PURE__*/_jsxDEV(TextField, {\n                                            id: \"dateInputTag\",\n                                            sx: {\n                                              minWidth: \"90px\"\n                                            }\n                                            // size=\"small\"\n                                            ,\n                                            ...params,\n                                            fullWidth: true,\n                                            autoComplete: \"off\",\n                                            name: \"dob\",\n                                            size: \"small\",\n                                            label: /*#__PURE__*/_jsxDEV(\"span\", {\n                                              style: {\n                                                paddingRight: \"0.5rem\"\n                                              },\n                                              children: \"* Passport Expiry\"\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 3188,\n                                              columnNumber: 61\n                                            }, this)\n                                            // value=\"\"\n                                            ,\n                                            className: classes.travelerinfo,\n                                            InputLabelProps: {\n                                              style: {\n                                                color: (_persons$roomindex22 = persons[roomindex]) !== null && _persons$roomindex22 !== void 0 && (_persons$roomindex22$ = _persons$roomindex22.child_state[index]) !== null && _persons$roomindex22$ !== void 0 && _persons$roomindex22$.p_exp_err ? \"red\" : \"#8F9098\",\n                                                fontWeight: \"500\"\n                                              }\n                                            },\n                                            InputProps: {\n                                              readOnly: true,\n                                              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                                position: \"start\",\n                                                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                                  src: passport,\n                                                  alt: \"caleder\"\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 3218,\n                                                  columnNumber: 65\n                                                }, this)\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 3216,\n                                                columnNumber: 63\n                                              }, this)\n                                            }\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 3176,\n                                            columnNumber: 57\n                                          }, this);\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 3140,\n                                        columnNumber: 53\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 3137,\n                                      columnNumber: 51\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 3136,\n                                    columnNumber: 49\n                                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                    item: true,\n                                    md: 4,\n                                    xs: 12,\n                                    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                                      dateAdapter: AdapterDateFns,\n                                      children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n                                        inputFormat: \"MM/dd/yyyy\"\n                                        //  disabled={disableCalendar}\n                                        ,\n                                        sx: {\n                                          \"& .MuiPickersToolbar-penIconButton\": {\n                                            display: \"none\"\n                                          }\n                                        },\n                                        closeOnSelect: true,\n                                        disableFuture: true\n                                        //  inputRef={busDateSelectRef}\n                                        ,\n\n                                        label: \"passport_issue\",\n                                        value: (_persons$roomindex23 = persons[roomindex]) === null || _persons$roomindex23 === void 0 ? void 0 : (_persons$roomindex23$ = _persons$roomindex23.child_state[index]) === null || _persons$roomindex23$ === void 0 ? void 0 : _persons$roomindex23$.passport_issue // error={adult_state[index].dob_err}\n                                        // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                        ,\n                                        onChange: newvalue => setPersons(prevdata => {\n                                          const updatedpersons = [...prevdata];\n                                          updatedpersons[roomindex].child_state[index].passport_issue = newvalue;\n                                          return updatedpersons;\n                                        }),\n                                        renderInput: params => {\n                                          var _persons$roomindex24, _persons$roomindex24$;\n                                          return /*#__PURE__*/_jsxDEV(TextField, {\n                                            id: \"dateInputTag\",\n                                            sx: {\n                                              minWidth: \"90px\"\n                                            }\n                                            // size=\"small\"\n                                            ,\n                                            ...params,\n                                            fullWidth: true,\n                                            autoComplete: \"off\",\n                                            name: \"dob\",\n                                            size: \"small\",\n                                            label: /*#__PURE__*/_jsxDEV(\"span\", {\n                                              style: {\n                                                paddingRight: \"0.5rem\"\n                                              },\n                                              children: \"* Passport Issue Date\"\n                                            }, void 0, false, {\n                                              fileName: _jsxFileName,\n                                              lineNumber: 3282,\n                                              columnNumber: 61\n                                            }, this)\n                                            // value=\"\"\n                                            ,\n                                            className: classes.travelerinfo,\n                                            InputLabelProps: {\n                                              style: {\n                                                color: (_persons$roomindex24 = persons[roomindex]) !== null && _persons$roomindex24 !== void 0 && (_persons$roomindex24$ = _persons$roomindex24.child_state[index]) !== null && _persons$roomindex24$ !== void 0 && _persons$roomindex24$.passport_issue_err ? \"red\" : \"#8F9098\",\n                                                fontWeight: \"500\"\n                                              }\n                                            },\n                                            InputProps: {\n                                              readOnly: true,\n                                              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                                                position: \"start\",\n                                                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                                  src: passport,\n                                                  alt: \"caleder\"\n                                                }, void 0, false, {\n                                                  fileName: _jsxFileName,\n                                                  lineNumber: 3314,\n                                                  columnNumber: 65\n                                                }, this)\n                                              }, void 0, false, {\n                                                fileName: _jsxFileName,\n                                                lineNumber: 3312,\n                                                columnNumber: 63\n                                              }, this)\n                                            }\n                                          }, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 3270,\n                                            columnNumber: 57\n                                          }, this);\n                                        }\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 3234,\n                                        columnNumber: 53\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 3231,\n                                      columnNumber: 51\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 3230,\n                                    columnNumber: 49\n                                  }, this)]\n                                }, void 0, true)\n                              }, void 0, false)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2742,\n                              columnNumber: 39\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              container: true,\n                              children: /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                md: 3.4,\n                                children: /*#__PURE__*/_jsxDEV(Button, {\n                                  variant: \"contained\",\n                                  disableRipple: true,\n                                  className: ticketbook.addtravellerbtn,\n                                  onClick: () => Travellersdialogopen(index, 1, roomindex),\n                                  children: \"Existence Guest\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 3422,\n                                  columnNumber: 43\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 3421,\n                                columnNumber: 41\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3420,\n                              columnNumber: 39\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2724,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false);\n                      })]\n                    }, void 0, true);\n                  }), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      paddingLeft: \"1rem\",\n                      marginTop: \"1.5rem\"\n                    },\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3462,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3460,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"14px\",\n                        fontWeight: \"500\"\n                      },\n                      children: \"Booking details will sent to\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3466,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3465,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    spacing: 2,\n                    ref: ticker_receivers_ref,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 3.7,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        className: classes.travelerinfo,\n                        autoComplete: \"off\",\n                        value: ticket_receiver_info.email,\n                        onChange: e => setTicket_receiver_info(prev => ({\n                          ...prev,\n                          email: e.target.value\n                        })),\n                        label: \"Email ID\",\n                        fullWidth: true,\n                        InputLabelProps: {\n                          style: {\n                            color: ticket_receiver_info.email_err ? \"red\" : \"#8F9098\",\n                            fontWeight: \"500\"\n                          }\n                        },\n                        InputProps: {\n                          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                            position: \"start\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: Email,\n                              alt: \"Email\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3495,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3494,\n                            columnNumber: 31\n                          }, this)\n                        },\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3472,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3471,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      md: 6.5,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        columnGap: 1,\n                        justifyContent: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          width: \"fit-content\",\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            disableRipple: true,\n                            variant: \"outlined\",\n                            onClick: () => setCountrydialog(true),\n                            startIcon: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: Object.keys(selectedcountry).length > 0 ? selectedcountry.country_flag : `${\"baseurl\"}/in.png`,\n                              width: \"20px\",\n                              height: \"20px\",\n                              alt: \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3514,\n                              columnNumber: 33\n                            }, this),\n                            endIcon: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {\n                              sx: {\n                                color: styles.app_color\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3526,\n                              columnNumber: 33\n                            }, this),\n                            sx: {\n                              padding: \"0.4rem 0.5rem\",\n                              borderRadius: \"0.5rem\",\n                              borderColor: \"#EDEDED!important\",\n                              maxWidth: \"100%\"\n                            },\n                            children: Object.keys(selectedcountry).length > 0 ? selectedcountry.code : \"+91\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3509,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3508,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: true,\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            autoComplete: \"off\",\n                            label: \"Phone Number\",\n                            shrink: true,\n                            value: ticket_receiver_info.mobile,\n                            onChange: e => setTicket_receiver_info(prev => ({\n                              ...prev,\n                              mobile: e.target.value\n                            })),\n                            className: classes.travelerinfo,\n                            InputLabelProps: {\n                              style: {\n                                color: ticket_receiver_info.mobile_err ? \"red\" : \"#8F9098\",\n                                fontWeight: \"500\"\n                              }\n                            },\n                            size: \"small\",\n                            fullWidth: true,\n                            autoFocus: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3541,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3540,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3503,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3502,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3470,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1961,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1955,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1954,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Why_gmt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3725,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3724,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              mt: \"1rem !important\",\n              mb: {\n                md: \"1rem !important\",\n                xs: \"0rem !important\"\n              },\n              sx: {\n                backgroundColor: {\n                  md: \"transparent\",\n                  xs: \"white\"\n                },\n                boxShadow: {\n                  md: \"none\",\n                  xs: \"0px -2px 4px 0px rgba(0, 0, 0, 0.25)\"\n                },\n                width: {\n                  md: \"100%\",\n                  xs: \"calc(100% + 32px)\",\n                  sm: \"calc(100% + 48px)\"\n                },\n                marginLeft: {\n                  md: \"0px !important\",\n                  xs: \"-16px !important\",\n                  sm: \"-24px !important\"\n                },\n                padding: {\n                  md: \"0rem\",\n                  xs: \"1rem 1.5rem\"\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                sx: {\n                  display: {\n                    md: \"none\",\n                    xs: \"block\"\n                  },\n                  color: styles.app_color,\n                  fontWeight: \"500\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u20B9 8,400\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3759,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3759,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: \"400\"\n                  },\n                  children: \"for 2 guest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3760,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3752,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  color: \"#fff\",\n                  fontFamily: \"poppins\",\n                  backgroundColor: styles.app_color,\n                  border: \"none\",\n                  borderRadius: \"0.5rem\",\n                  width: \"8rem\",\n                  height: \"2.2rem\"\n                },\n                onClick: typeof location1.state === \"string\" ? () => hot_room_booking() : () => gmt_blockroom(),\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3762,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3727,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 3,\n          sx: {\n            display: {\n              md: \"block\",\n              xs: \"none\"\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            mt: 3.3,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  padding: \"1rem\",\n                  borderRadius: \"0.8rem\"\n                },\n                elevation: 3,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 1.5,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: ticketbook.completebookings,\n                      children: \"Fare summary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3790,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3789,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    container: true,\n                    justifyContent: \"space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: `${guests_details.length} ${guests_details.length > 1 ? \"Rooms\" : \"Room\"} * ${`${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate)} ${helperFunctions.nights_calc(hotelresult.CheckInDate, hotelresult.CheckOutDate) > 1 ? \"Nights\" : \"Night\"}`}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3797,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: \"grey\",\n                            fontSize: \"12px\"\n                          },\n                          children: \"Base Price\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3812,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3796,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3795,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: `${cancellation_policies[0].Currency} ${(room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) === undefined ? open_room_price : fixed_room_price}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3817,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3794,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3823,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3822,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      justifyContent: \"space-between\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: \"Fee & Surcharges\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3843,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        textAlign: \"right\",\n                        children: `${cancellation_policies[0].Currency} ${gmt_fee}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3844,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3842,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3841,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3850,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3849,\n                    columnNumber: 21\n                  }, this), prices.discount > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        justifyContent: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: \"Total Discount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3856,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          sx: {\n                            color: \"#3F8CFF\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(Stack, {\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              children: `- ${cancellation_policies[0].Currency} ${prices.discount}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3859,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              style: {\n                                border: \"none\",\n                                background: \"none\",\n                                color: \"red\",\n                                textDecoration: \"underline\"\n                              },\n                              onClick: () => {\n                                setPrices(prev => ({\n                                  ...prev,\n                                  discount: 0\n                                }));\n                              },\n                              children: \"Remove\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 3861,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 3858,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3857,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3855,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3854,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3882,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3881,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      sx: {\n                        color: styles.app_color\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: ticketbook.totalamount,\n                          children: \"Total Amount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 3889,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3888,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 6,\n                        textAlign: \"right\",\n                        sx: {\n                          fontWeight: 500\n                        },\n                        children: `${cancellation_policies[0].Currency} ${prices.discount > 0 ? prices.updatedprice : prices.totalprice}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 3893,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 3887,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 3886,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 3788,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3784,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3783,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(PromoCodes, {\n                coupons: coupons_data,\n                data: {\n                  baseprice: (room_details === null || room_details === void 0 ? void 0 : room_details.RoomCombinationsArray) === undefined ? open_room_price : fixed_room_price,\n                  count: guests_details.length\n                },\n                all_prices: prices\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3912,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3911,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3782,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3781,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1445,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1444,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"https://test.payu.in/_payment\",\n      method: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"key\",\n        value: `${key}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3926,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"txnid\",\n        value: `${transactionStr}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3927,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"productinfo\",\n        value: `${productinfo}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3928,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"amount\",\n        value: `${prices.discount > 0 ? prices.updatedprice : prices.totalprice}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3929,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"email\",\n        value: `${ticket_receiver_info.email}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3938,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"firstname\",\n        value: `${(_persons$2 = persons[0]) === null || _persons$2 === void 0 ? void 0 : (_persons$2$adult_stat = _persons$2.adult_state[0]) === null || _persons$2$adult_stat === void 0 ? void 0 : _persons$2$adult_stat.first_name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3943,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"lastname\",\n        value: `${(_persons$3 = persons[0]) === null || _persons$3 === void 0 ? void 0 : (_persons$3$adult_stat = _persons$3.adult_state[0]) === null || _persons$3$adult_stat === void 0 ? void 0 : _persons$3$adult_stat.last_name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3948,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"surl\",\n        value: `${process.env.NODE_ENV === \"production\" ? `${process.env.REACT_APP_CLIENT_URL}api/hotelSuccessUrl` : `${process.env.REACT_APP_CLIENT_URL}api/hotelSuccessUrl`}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3953,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"furl\",\n        value: `${process.env.NODE_ENV === \"production\" ? `${process.env.REACT_APP_CLIENT_URL}api/hotelFailUrl` : `${process.env.REACT_APP_CLIENT_URL}api/hotelFailUrl`}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3962,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"phone\",\n        value: `${ticket_receiver_info.mobile}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3971,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"hash\",\n        value: `${hashedData}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3976,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"v-hidden\",\n        id: \"payuPayButton\",\n        type: \"submit\",\n        value: \"PAY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3977,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3925,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1424,\n    columnNumber: 5\n  }, this);\n};\n_s(Room_booking, \"LHkj3h7FLU1Df7qJW1ttZUxsS+s=\", false, function () {\n  return [useNavigate, useStyles, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useLocation, useSelector, useSelector, useSelector];\n});\n_c2 = Room_booking;\nexport default Room_booking;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleButton\");\n$RefreshReg$(_c2, \"Room_booking\");","map":{"version":3,"names":["Container","Divider","Checkbox","InputLabel","Button","Grid","Paper","TextField","InputAdornment","RadioGroup","FormControlLabel","Radio","Stack","Breadcrumbs","ToggleButtonGroup","React","useRef","useState","useEffect","room_booking","ticketbooking","makeStyles","Ratingstar","Refundpolicy","HealthAndSafetyIcon","correct","Hotelconfirmation","personblue","traveller","MuiToggleButton","styled","useDispatch","useSelector","person","calender","passport","pan_card","Email","ArrowDropDownIcon","Tickettravellers","Apipost","Countrycodefilter","useLocation","useNavigate","helperFunctions","AdapterDateFns","LocalizationProvider","MobileDatePicker","axios","ArrowBackIcon","Loadingmodal","PromoCodes","Importantinfo","regex_data","envdata","MySnackbar","Why_gmt","sha512","HotelBookingDetailsActions","Hotelhelpers","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","ToggleButton","selectedColor","color","background","app_color","_c","useStyles","theme","root","borderColor","travelerinfo","MuiAccordionroot","backgroundColor","root1","margin","padding","Room_booking","_s","_persons$","_persons$$adult_state","_room_details$HotelRo","_persons$2","_persons$2$adult_stat","_persons$3","_persons$3$adult_stat","navigate","ticketbook","classes","dispatch","snackopen","setSnackopen","snackmessage","setSnackmessage","snackclose","room_style","offers","setOffers","health_insurance","setHealth_insurance","hotelbooked","setHotelbooked","require_all_pax_details","setRequire_all_pax_details","gmt_fee","setGmt_fee","coupons","setCoupons","persons","setPersons","adult_state","type","first_name","last_name","gender","dob","passport_num","passport_exp","title","passport_issue","passport_issue_country","pan_no","f_name_err","l_name_err","dob_err","p_num_err","p_exp_err","title_err","passport_issue_err","passport_issue_country_err","pan_no_err","child_state","adult_num","setAdult_num","child_num","setChild_num","ticket_receiver_info","setTicket_receiver_info","email","mobile","email_err","mobile_err","viewtravellerdialog","setViewtravellerdialog","selectedcountry","setSelectedcountry","id","country_name","country_code","code","country_flag","baseurl","traveller_index","setTraveller_index","travellerdata","setTravellerdata","countrydialog","setCountrydialog","book_req","setBook_req","price_change","setPrice_change","changed_room_data","setChanged_room_data","booking_details","setBooking_details","loading","setLoading","open_combination","setOpen_combination","prices","setPrices","discount","updatedprice","totalprice","coupon_id","coupon_code","textFieldRef","ticker_receivers_ref","hotel_details","state","hotel_room","hotelinfo","hotel_code","profile","profiledata","hotel_index","hotel_resultindex","hotelresult","hotel_data","searchtype","destination","room_details","roominfo","console","log","hotel_info","HotelDetails","location1","first_split","splitarray","category_ids","selectedroom","cancellation_policies","fixed_room_price","open_room_price","RoomCombinationsArray","undefined","hotel_fixedroom_price","HotelRoomsDetails","split","map","split_item","length","item","parseInt","find","RoomIndex","CancellationPolicies","checkintime","checkin","checkouttime","checkout","guests_details","hotel_guestcount","guests","hotel_guest_validation","data","roomindex","room","stopExecution","roomguests","outerLoop","guest","LeadPassenger","innerArray","i","value","Title","PaxType","trim","prevdata","updatedPersons","current","scrollIntoView","behavior","string_pattern","test","FirstName","LastName","RequireAllPaxDetails","IsPassportMandatory","generic_passport","PassportNo","PassportIssueDate","getapi_date","PassportExpDate","IsPANMandatory","pan_Regex","PAN","GuardianDetail","Age","ChildAge","push","book_room_api","book_obj","res","post","status","booking_detail","BookingId","userId","localStorage","getItem","checkType","Status","message","_res$data","_res$data$data","gmt_blockroom","book_room_data","guests_data","_coupons$convenienceF","_coupons$convenienceF2","_hotel_details$HotelD","sel_room","room_guests","smoking","SmokingPreference","book_room_obj","RoomTypeCode","RoomTypeName","RatePlanCode","Price","HotelPassenger","prevstate","email_Regex","prev","mobile_regex","bookroom_obj","searchType","booked_by","booked_by_name","rating","review","total_staying_persons","number_of_rooms","platform","admin_commission_type","convenienceFee","convenience_type","admin_commission","hotel_picture","Images","replace","ticket_sent_mail","ticket_sent_ph_num","from_date","CheckInDate","to_date","CheckOutDate","created_at","Date","payment_status","payment_id","total_price","pub_price","TraceId","ResultIndex","HotelCode","CategoryId","HotelName","GuestNationality","NoOfRooms","ClientReferenceNo","IsVoucherBooking","Amenities","block_room_obj","_sel_room$Price","each_room","Id","PublishedPriceRoundedOff","rooms","Object","assign","Phoneno","gmt_block_res","gmt_block_data","bookingrequest","bookdata","trasaction_id","transactionStr","document","getElementById","click","error","alert","hot_room_booking","_coupons$convenienceF3","_coupons$convenienceF4","sel_hotel","Hotels","block_room_data","Supplements","CurrencyCode","RoomPrice","Tax","ExtraGuestCharge","ChildCharge","OtherCharges","Discount","PublishedPrice","OfferedPrice","OfferedPriceRoundedOff","AgentCommission","AgentMarkUp","ServiceTax","TDS","blockroom_obj","toString","IsPackageFare","IsPackageDetailsMandatory","ArrivalTransport","TransportInfoId","Time","IsDepartureDetailsMandatory","DepartureTransport","IsCancellationPolicyChanged","IsPriceChanged","changeddata","total_adult","total_child","settraveller_state","reduce","sum","NoOfAdults","NoOfChild","per","Array","from","_","index","titlechange","event","updatedpersons","coupons_data","platform_charge","couponsdata","updated_price","couponid","couponcode","handleGender","handletravellersinput","e","name","target","Travellersdialogopen","indx","userid","user_id","traveller_cal","gendre","birth_day","birth_month","birth_year","birth_date","p_day","p_month","p_year","passport_expiry","passport_expdate","p_issue_day","p_issue_month","p_issue_year","passport_issue_date","handlecountryselected","setTransactionStr","key","PayU_hotel_Key","salt","PayU_hotel_salt","productinfo","details","hashedValue","create","update","hashedData","hex","randomFiveDigitNumber","Math","floor","random","txnid","now","children","open","close","fileName","_jsxFileName","lineNumber","columnNumber","onclose","selectedvalue","loadingclose","travellers","traveller_data","maxWidth","container","spacing","md","direction","mt","xs","className","text","style","display","gap","sx","onClick","borderRadius","p","height","textAlign","src","alt","maxHeight","width","objectFit","hotelname","StarRating","hotel_loc","Address","rowGap","hotel_checked_dates","get_numeric_date","day_name","alignSelf","days_stay","nights_calc","justifyContent","fontSize","fontWeight","separator","guests_count","borderBottom","room_name","elevation","completebookings","Currency","border","textDecoration","totalamount","shade_color","cancel_header","FromDate","calculateDateDifference","ToDate","open_room_cancellation_percent","ChargeType","Charge","hotel_cancellation_penalty","open_room_cancellation_rs","hotel_cancellation_penalty_rs","baseprice","count","all_prices","onChange","control","textcolor","size","label","fontFamily","pl","insurance_text","ref","paperadjustment","textsize","marginLeft","marginTop","_persons$roomindex","_persons$roomindex$ad","_persons$roomindex2","_persons$roomindex2$a","_persons$roomindex3","_persons$roomindex3$a","_persons$roomindex4","_persons$roomindex4$a","_persons$roomindex5","_persons$roomindex5$a","_room_details$HotelRo2","_persons$roomindex6","_persons$roomindex6$a","_persons$roomindex7","_persons$roomindex7$a","_persons$roomindex8","_persons$roomindex8$a","_persons$roomindex10","_persons$roomindex10$","_persons$roomindex12","_persons$roomindex12$","_persons$roomindex13","_persons$roomindex13$","exclusive","disableRipple","textTransform","titlebtns","fullWidth","InputLabelProps","InputProps","startAdornment","position","dateAdapter","inputFormat","closeOnSelect","disablePast","newvalue","renderInput","params","_persons$roomindex9","_persons$roomindex9$a","minWidth","autoComplete","paddingRight","readOnly","disableFuture","_persons$roomindex11","_persons$roomindex11$","columnGap","variant","addtravellerbtn","_persons$roomindex14","_persons$roomindex14$","_persons$roomindex15","_persons$roomindex15$","_persons$roomindex16","_persons$roomindex16$","_persons$roomindex17","_persons$roomindex17$","_persons$roomindex18","_persons$roomindex18$","_persons$roomindex19","_persons$roomindex19$","_persons$roomindex20","_persons$roomindex20$","_persons$roomindex21","_persons$roomindex21$","_persons$roomindex23","_persons$roomindex23$","_persons$roomindex22","_persons$roomindex22$","_persons$roomindex24","_persons$roomindex24$","paddingLeft","startIcon","keys","endIcon","shrink","autoFocus","alignItems","mb","boxShadow","sm","action","method","process","env","NODE_ENV","REACT_APP_CLIENT_URL","_c2","$RefreshReg$"],"sources":["/opt/lampp/htdocs/bitbucket/priortive/src/components/pages/Hotels/Room_booking.jsx"],"sourcesContent":["import {\n  Container,\n  Divider,\n  Checkbox,\n  InputLabel,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  InputAdornment,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Stack,\n  Breadcrumbs,\n  ToggleButtonGroup,\n} from \"@mui/material\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { room_booking } from \"../../../assets/styles/Hotelstyles\";\nimport { ticketbooking } from \"../../../assets/styles/Flights\";\nimport { makeStyles } from \"@mui/styles\";\nimport Ratingstar from \"../../../assets/Hotelimages/Ratingstar.svg\";\nimport Refundpolicy from \"../../../assets/images/Refundpolicy.svg\";\nimport HealthAndSafetyIcon from \"@mui/icons-material/HealthAndSafety\";\nimport correct from \"../../../assets/images/correct.svg\";\nimport Hotelconfirmation from \"../../modals/Hotelmodals/Hotelconfirmation\";\nimport personblue from \"../../../assets/images/personblue.svg\";\nimport traveller from \"../../../assets/images/traveller.svg\";\nimport MuiToggleButton from \"@mui/material/ToggleButton\";\nimport { styled } from \"@mui/material/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport person from \"../../../assets/images/person.svg\";\nimport calender from \"../../../assets/images/calender.svg\";\nimport passport from \"../../../assets/images/passport.svg\";\nimport pan_card from \"../../../assets/images/pan_card.svg\";\nimport Email from \"../../../assets/images/Email.svg\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport Tickettravellers from \"../../modals/Signupmodals/Tickettravellers\";\nimport { Apipost } from \"../../../ApiServices/Apicalls.js\";\nimport Countrycodefilter from \"../../modals/Signupmodals/Countrycodefilter\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport helperFunctions from \"../../../helpers/helperFunctions\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\nimport axios from \"axios\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Loadingmodal from \"../../modals/Signupmodals/Loadingmodal\";\nimport PromoCodes from \"../../OffersCarousel/PromoCodes\";\nimport Importantinfo from \"../../OffersCarousel/Importantinfo\";\nimport { regex_data } from \"../../../components/Regex\";\nimport { envdata } from \"../../Envexports\";\nimport MySnackbar from \"../../modals/Signupmodals/Snackbar\";\nimport Why_gmt from \"../../why_gmt/Why_gmt\";\nimport { sha512 } from \"js-sha512\";\nimport { HotelBookingDetailsActions } from \"../../../store/Hotelslices.jsx/HotelBookDetails\";\nimport Hotelhelpers from \"../../../helpers/Hotelhelpers\";\nimport {styles} from '../../../assets/styles/Styles_export'\nconst ToggleButton = styled(MuiToggleButton)(({ selectedColor }) => ({\n  \"&.Mui-selected, &.Mui-selected:hover\": {\n    color: \"white!important\",\n    background: `${styles.app_color}!important`,\n  },\n}));\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: `${styles.app_color}!important`,\n      },\n    },\n  },\n  travelerinfo: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#EDEDED!important\",\n      },\n    },\n  },\n  MuiAccordionroot: {\n    \"&.MuiAccordion-root:before\": {\n      backgroundColor: \"white\",\n    },\n  },\n  root1: {\n    \"& > *\": {\n      margin: 0,\n      padding: 0,\n    },\n  },\n}));\n// const baseurl = process.env.REACT_APP_BASEURL;\nconst Room_booking = () => {\n  const navigate = useNavigate();\n  const ticketbook = ticketbooking();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  // for snackbar\n  const [snackopen, setSnackopen] = useState(false);\n  const [snackmessage, setSnackmessage] = useState(\"\");\n  function snackclose() {\n    setSnackopen(false);\n  }\n  //\n  const room_style = room_booking();\n  const [offers, setOffers] = useState(50);\n  const [health_insurance, setHealth_insurance] = useState(\"yes\");\n  const [hotelbooked, setHotelbooked] = useState(false);\n  const [require_all_pax_details, setRequire_all_pax_details] = useState(false);\n  const [gmt_fee, setGmt_fee] = useState(100);\n  const [coupons, setCoupons] = useState({});\n  const [persons, setPersons] = useState([\n    {\n      adult_state: [\n        {\n          type: 1,\n          first_name: \"\",\n          last_name: \"\",\n          gender: 0,\n          dob: \"\",\n          passport_num: \"\",\n          passport_exp: \"\",\n          title: 1,\n          passport_issue: \"\",\n          passport_issue_country: \"\",\n          pan_no: \"\",\n          f_name_err: false,\n          l_name_err: false,\n          dob_err: false,\n          p_num_err: false,\n          p_exp_err: false,\n          title_err: false,\n          passport_issue_err: false,\n          passport_issue_country_err: false,\n          pan_no_err: false,\n        },\n      ],\n      child_state: [\n        {\n          type: 2,\n          first_name: \"\",\n          last_name: \"\",\n          gender: 0,\n          dob: \"\",\n          passport_num: \"\",\n          passport_exp: \"\",\n          title: 3,\n          passport_issue: \"\",\n          passport_issue_country: \"\",\n          pan_no: \"\",\n          f_name_err: false,\n          l_name_err: false,\n          dob_err: false,\n          p_num_err: false,\n          p_exp_err: false,\n          title_err: false,\n          passport_issue_err: false,\n          passport_issue_country_err: false,\n          pan_no_err: false,\n        },\n      ],\n    },\n  ]);\n  const [adult_num, setAdult_num] = useState(1);\n  const [child_num, setChild_num] = useState(0);\n  const [ticket_receiver_info, setTicket_receiver_info] = useState({\n    email: \"\",\n    mobile: \"\",\n    email_err: false,\n    mobile_err: false,\n  });\n  const [viewtravellerdialog, setViewtravellerdialog] = useState(false);\n  const [selectedcountry, setSelectedcountry] = useState({\n    id: 74,\n    country_name: \"India\",\n    country_code: \"IN\",\n    code: \"+91\",\n    country_flag: `${envdata.baseurl}/in.png`,\n  });\n  const [traveller_index, setTraveller_index] = useState(\"\");\n  const [travellerdata, setTravellerdata] = useState([]);\n  const [countrydialog, setCountrydialog] = useState(false);\n  const [book_req, setBook_req] = useState(\"\");\n  const [price_change, setPrice_change] = useState(false);\n  const [changed_room_data, setChanged_room_data] = useState(\"\");\n  const [booking_details, setBooking_details] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [open_combination,setOpen_combination]=useState(false);\n  const [prices, setPrices] = useState({\n    discount: 0,\n    updatedprice: 0,\n    totalprice: 0,\n    coupon_id: \"\",\n    coupon_code: \"\",\n  });\n  const textFieldRef = useRef(null);\n  const ticker_receivers_ref = useRef(null);\n  const hotel_details = useSelector((state) => state.hotel_room.hotelinfo);\n  // console.log(hotel_details,\"hotel detaisl\")\n  const hotel_code = useSelector((state) => state.hotel_room.hotel_code);\n  const profile = useSelector((state) => state.profile.profiledata);\n  const hotel_index = useSelector(\n    (state) => state.hotel_room.hotel_resultindex\n  );\n  let hotelresult = useSelector((state) => state.hotel_data.hotelresult);\n  let searchtype = useSelector((state) => state.hotel_data.destination).type;\n  const room_details = useSelector((state) => state.hotel_room.roominfo);\n  console.log(room_details,\"roodetailsbro\")\n  const hotel_info = hotel_details.HotelDetails;\n  const location1 = useLocation();\n  let first_split;\n  let splitarray;\n  let category_ids;\n  let selectedroom;\n  let cancellation_policies;\n  let fixed_room_price;\n  let open_room_price;\n  // if(room_details?.RoomCombinationsArray[0]?.InfoSource===\"OpenCombination\"){\n    // alert(\"sdjfj\")\n    // setOpen_combination(true);\n                    // selected_room=location1.state[0]\n                    // cancellation_policies=[{Charge: 100, ChargeType: 2, Currency: 'INR', FromDate: '2023-09-15T00:00:00', ToDate: '2023-09-16T23:59:59'}]\n  // }\n  // else{\n    // setOpen_combination(false)\n    if(room_details?.RoomCombinationsArray!==undefined){\n    fixed_room_price = helperFunctions.hotel_fixedroom_price(\n      location1.state,\n      room_details.HotelRoomsDetails\n    );\n  first_split = location1.state.split(\"_\");\n  console.log(first_split,\"split array\")\n  splitarray = first_split.map((split_item) => split_item.split(\"|\"));\n  // category_ids = splitarray.map((item) => item[1]);\n  category_ids=first_split[first_split.length-1].split(\"|\")[1]\n  selectedroom = splitarray.map((item) => parseInt(item[0]));\n  console.log(selectedroom,\"selected rooom\");\n  console.log(category_ids,\"category\")\n  cancellation_policies = room_details.HotelRoomsDetails.find(\n    (item) => item.RoomIndex === selectedroom[0]\n  ).CancellationPolicies;\n    }\n    else{\n      open_room_price=Hotelhelpers.open_room_price(room_details.HotelRoomsDetails,location1.state);\n      selectedroom=location1.state[0];\n      cancellation_policies=room_details.HotelRoomsDetails.find(\n        (item) => item.RoomIndex === selectedroom\n      ).CancellationPolicies;\n    }\n  // }\n//  console.log(cancellation_policies,\"cancaelltioinpoliciate\")\n  const checkintime = useSelector((state) => state.hotel_room.checkin);\n  const checkouttime = useSelector((state) => state.hotel_room.checkout);\n  // hotel guests validation\n  const guests_details = useSelector((state) => state.hotel_guestcount.guests);\n  // Guests validations\n  const hotel_guest_validation = async (data, roomindex, room) => {\n    console.log(room,\"hadarata\")\n    let stopExecution = false;\n    let roomguests = [];\n    outerLoop: for (const item in data) {\n      let guest = {\n        //  \"Middlename\":null,\n        //  \"Age\":null,\n        LeadPassenger: false,\n        //  \"Phoneno\":null,\n        //  \"Email\":null,\n        //  \"PassportNo\":null,\n        //  \"PassportIssueDate\":null,\n        //  \"PassportExpDate\":null,\n        //  \"PAN\":null\n      };\n      const innerArray = data[item];\n      for (let i = 0; i < innerArray.length; i++) {\n        const value = innerArray[i];\n        guest.Title =\n          value.title === 1\n            ? \"Mr\"\n            : value.title === 2\n            ? \"Mrs\"\n            : value.title === 3\n            ? \"Miss\"\n            : value.title === 4 && \"Ms\";\n        guest.PaxType = value.type;\n        if (value.first_name.trim() === \"\") {\n          setSnackopen(true);\n          setSnackmessage(\"First_name should not be empty\");\n          // alert(\"First_name should not be empty \");\n          stopExecution = true;\n          setPersons((prevdata) => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].f_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].f_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n          return true;\n          // break outerLoop;\n        } else if (regex_data.string_pattern.test(value.first_name)) {\n          setSnackopen(true);\n          setSnackmessage(\"first name not a string\");\n          // alert(\"first name not a string\");\n          stopExecution = true;\n          setPersons((prevdata) => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].f_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].f_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n          return true;\n          // break outerLoop;\n        } else {\n          setPersons((prevdata) => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].f_name_err = false;\n            } else {\n              updatedPersons[roomindex].child_state[i].f_name_err = false;\n            }\n            return updatedPersons;\n          });\n          guest.FirstName = value.first_name.trim();\n          // return false\n          // condition goes here\n        }\n        if (value.last_name.trim() === \"\") {\n          setSnackopen(true);\n          setSnackmessage(\"last name shouldn't be empty\");\n          // alert(\"last name shouldn't be empty\");\n          stopExecution = true;\n          setPersons((prevdata) => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].l_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].l_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n          return true;\n        } else if (regex_data.string_pattern.test(value.last_name)) {\n          setSnackopen(true);\n          setSnackmessage(\"last name should only be string\");\n          // alert(\"last name should only be string\");\n          stopExecution = true;\n          setPersons((prevdata) => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].l_name_err = true;\n            } else {\n              updatedPersons[roomindex].child_state[i].l_name_err = true;\n            }\n            return updatedPersons;\n          });\n          textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n          return true;\n        } else {\n          setPersons((prevdata) => {\n            const updatedPersons = [...prevdata];\n            if (value.type === 1) {\n              updatedPersons[roomindex].adult_state[i].l_name_err = false;\n            } else {\n              updatedPersons[roomindex].child_state[i].l_name_err = false;\n            }\n            return updatedPersons;\n          });\n          guest.LastName = value.last_name.trim();\n          // return false\n        }\n\n        // Passport mandatory\n\n        if (room?.RequireAllPaxDetails && room?.IsPassportMandatory) {\n          // Passport number validation\n          if (value.passport_num === \"\") {\n            setSnackopen(true);\n            setSnackmessage(\"passport number shouldn't be empty\");\n            // alert(\"passport number shouldn't be empty\");\n            stopExecution = true;\n            setPersons((prevdata) => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_num_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_num_err = true;\n              }\n              return updatedPersons;\n            });\n            textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n            return true;\n          } else if (\n            !regex_data.generic_passport.test(value.passport_num.trim())\n          ) {\n            setSnackopen(true);\n            setSnackmessage(\"Enter correct passport number\");\n            // alert(\"Enter correct passport number\");\n            stopExecution = true;\n            setPersons((prevdata) => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_num_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_num_err = true;\n              }\n              return updatedPersons;\n            });\n            textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n            return true;\n          } else {\n            stopExecution = false;\n            setPersons((prevdata) => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_num_err = false;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_num_err = false;\n              }\n              return updatedPersons;\n            });\n            guest.PassportNo = value.passport_num.trim();\n            // return false;\n          }\n          // passport issue date validation\n          if (value.passport_issue === \"\") {\n            setSnackopen(true);\n            setSnackmessage(\"passport issue date shouldn't be empty\");\n            // alert(\"passport issue date shouldn't be empty\");\n            stopExecution = true;\n            setPersons((prevdata) => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[\n                  i\n                ].passport_issue_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[\n                  i\n                ].passport_issue_err = true;\n              }\n              return updatedPersons;\n            });\n            textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n            return true;\n          } else {\n            stopExecution = false;\n            setPersons((prevdata) => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[\n                  i\n                ].passport_issue_err = false;\n              } else {\n                updatedPersons[roomindex].child_state[\n                  i\n                ].passport_issue_err = false;\n              }\n              return updatedPersons;\n            });\n            guest.PassportIssueDate = helperFunctions.getapi_date(\n              value.passport_issue\n            );\n            // return false;\n          }\n          // passport expiry date validation\n          if (value.passport_exp === \"\") {\n            setSnackopen(true);\n            setSnackmessage(\"passport expiry date shouldn't be empty\");\n            // alert(\"passport expiry date shouldn't be empty\");\n            stopExecution = true;\n            setPersons((prevdata) => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_exp_err = true;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_exp_err = true;\n              }\n              return updatedPersons;\n            });\n            return true;\n          } else {\n            stopExecution = false;\n            setPersons((prevdata) => {\n              const updatedPersons = [...prevdata];\n              if (value.type === 1) {\n                updatedPersons[roomindex].adult_state[i].p_exp_err = false;\n              } else {\n                updatedPersons[roomindex].child_state[i].p_exp_err = false;\n              }\n              return updatedPersons;\n            });\n            guest.PassportExpDate = helperFunctions.getapi_date(\n              value.passport_exp\n            );\n            // return false;\n          }\n          // passport issue country validation\n          // if (value.passport_issue_country === \"\") {\n          //   alert(\"passport issue_country shouldn't be empty\");\n          //   stopExecution = true;\n          //   setPersons((prevdata) => {\n          //     const updatedPersons = [...prevdata];\n          //     if (value.type === 1) {\n          //       updatedPersons[roomindex].adult_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     } else {\n          //       updatedPersons[roomindex].child_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     }\n          //     return updatedPersons;\n          //   });\n          //   return true;\n          // }\n          // else if (string_pattern.test(value.passport_issue_country.trim())) {\n          //   alert(\"passport issue country must be a string\");\n          //   stopExecution = true;\n          //   setPersons((prevdata) => {\n          //     const updatedPersons = [...prevdata];\n          //     if (value.type === 1) {\n          //       updatedPersons[roomindex].adult_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     } else {\n          //       updatedPersons[roomindex].child_state[\n          //         i\n          //       ].passport_issue_country_err = true;\n          //     }\n          //     return updatedPersons;\n          //   });\n          //   return true;\n          // }\n          //  else {\n          //   stopExecution = false;\n          //   setPersons((prevdata) => {\n          //     const updatedPersons = [...prevdata];\n          //     if (value.type === 1) {\n          //       updatedPersons[roomindex].adult_state[\n          //         i\n          //       ].passport_issue_country_err = false;\n          //     } else {\n          //       updatedPersons[roomindex].child_state[\n          //         i\n          //       ].passport_issue_country_err = false;\n          //     }\n          //     return updatedPersons;\n          //   });\n\n          //   // return true;\n          // }\n        }\n        // Pan number validation\n        if (room?.RequireAllPaxDetails && room.IsPANMandatory) {\n          //&&value.type===1\n          // adult pancard checking\n          if (value.type === 1) {\n            if (value.pan_no === \"\") {\n              setSnackopen(true);\n              setSnackmessage(\"pan number shouldn't be empty\");\n              // alert(\"pan number shouldn't be empty\");\n              stopExecution = true;\n              setPersons((prevdata) => {\n                const updatedPersons = [...prevdata];\n                if (value.type === 1) {\n                  updatedPersons[roomindex].adult_state[i].pan_no_err = true;\n                } else {\n                  updatedPersons[roomindex].child_state[i].pan_no_err = true;\n                }\n                return updatedPersons;\n              });\n              textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n              return true;\n            } else if (!regex_data.pan_Regex.test(value.pan_no.trim())) {\n              setSnackopen(true);\n              setSnackmessage(\"Enter valid pan number\");\n              // alert(\"Enter valid pan number\");\n              stopExecution = true;\n              setPersons((prevdata) => {\n                const updatedPersons = [...prevdata];\n                if (value.type === 1) {\n                  updatedPersons[roomindex].adult_state[i].pan_no_err = true;\n                } else {\n                  updatedPersons[roomindex].child_state[i].pan_no_err = true;\n                }\n                return updatedPersons;\n              });\n              textFieldRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n              return true;\n            } else {\n              stopExecution = false;\n              setPersons((prevdata) => {\n                const updatedPersons = [...prevdata];\n                if (value.type === 1) {\n                  updatedPersons[roomindex].adult_state[i].pan_no_err = false;\n                } else {\n                  updatedPersons[roomindex].child_state[i].pan_no_err = false;\n                }\n                return updatedPersons;\n              });\n              guest.PAN = value.pan_no;\n              // return false;\n            }\n          } else if (value.type === 2) {\n            guest.GuardianDetail = {\n              Title: roomguests[0].Title,\n              FirstName: roomguests[0].FirstName,\n              LastName: roomguests[0].LastName,\n              PAN: roomguests[0].PAN,\n            };\n          }\n        }\n        if (value.type === 1 && i === 0) {\n          guest.LeadPassenger = true;\n        } else if (value.type === 2) {\n          guest.Age = guests_details[roomindex].ChildAge[i];\n        }\n        roomguests.push(guest);\n      }\n      if (stopExecution) {\n        break;\n      }\n    }\n\n    return roomguests;\n  };\n  // Book api funtion\n  const book_room_api = async (data) => {\n    setLoading(true);\n    let book_obj;\n    if (data === undefined) {\n      book_obj = book_req;\n    } else {\n      book_obj = data;\n    }\n    setPrice_change(false);\n    const res = await axios.post(`${envdata.baseurl}/deDupeBookRoom`, book_obj);\n    if (res.data.status) {\n      setLoading(false);\n      const booking_detail = await axios.post(\n        `${envdata.baseurl}/getHotelBookingDetail`,\n        {\n          BookingId: res.data.data.BookingId,\n          userId: localStorage.getItem(\"userid\"),\n          checkType: 0,\n        }\n      );\n      if (booking_detail.data.status && booking_detail.data.data.Status === 1) {\n        setBooking_details(booking_detail.data.data);\n        setHotelbooked(true);\n        // console.log(booking_detail.data);\n      } else if (\n        booking_detail.data.status &&\n        booking_detail.data.data.Status !== 1\n      ) {\n        setLoading(false);\n        setSnackopen(true);\n        setSnackmessage(\"booking cancelled\");\n        // alert(\"booking cancelled\");\n      } else {\n        setLoading(false);\n        setSnackopen(true);\n        setSnackmessage(booking_detail.data.data.message);\n        // alert(booking_detail.data.data.message);\n      }\n    } else {\n      setLoading(false);\n      setSnackopen(true);\n      setSnackmessage(res.data?.data?.message);\n      // alert(res.data?.data?.message);\n    }\n  };\n  // gmtblock room api\n  const gmt_blockroom=async()=>{\n    let book_room_data = [];\n    let guests_data = [];\n    try{\n      for (let i = 0; i < location1.state.length; i++) {\n        \n        let sel_room=room_details.HotelRoomsDetails.find((item)=>item.RoomIndex===location1.state[i])\n        const room_guests = await hotel_guest_validation(persons[i], i, sel_room);\n        // console.log(room_guests, \"each room\");\n        if (room_guests === true) {\n          return;\n        } else {\n          guests_data.push(room_guests);\n        }\n  \n        let smoking =\n          sel_room?.SmokingPreference === \"NoPreference\"\n            ? 0\n            : sel_room?.SmokingPreference === \"Smoking\"\n            ? 1\n            : sel_room?.SmokingPreference === \"NonSmoking\"\n            ? 2\n            : sel_room?.SmokingPreference === \"Either\" && 3;\n       \n        let book_room_obj = {\n          RoomIndex: sel_room.RoomIndex,\n          RoomTypeCode: \"\",\n          RoomTypeName: sel_room.RoomTypeName,\n          RatePlanCode: \"\",\n          SmokingPreference: smoking,\n          Price: sel_room.Price,\n          HotelPassenger: room_guests,\n        };\n        book_room_data.push(book_room_obj);\n      }\n          // ticket receivers_information validation\n    if (ticket_receiver_info.email.trim() === \"\") {\n      setSnackopen(true);\n      setSnackmessage(\"ticket receivers info shouldn't be empty\");\n      setTicket_receiver_info((prevstate) => ({\n        ...prevstate,\n        email_err: true,\n      }));\n      return;\n    } else if (\n      !regex_data.email_Regex.test(ticket_receiver_info.email.trim())\n    ) {\n      setSnackopen(true);\n      setSnackmessage(\"enter valid email address\");\n      // alert(\"enter valid email address\");\n      setTicket_receiver_info((prevstate) => ({\n        ...prevstate,\n        email_err: true,\n      }));\n      return;\n    } else {\n      setTicket_receiver_info((prevstate) => ({\n        ...prevstate,\n        email_err: false,\n      }));\n    }\n    if (ticket_receiver_info.mobile === \"\") {\n      setSnackopen(true);\n      setSnackmessage(\"ticket receiver mobile number shouldn't be empty\");\n      // alert(\"Ticket reviever mobile number shouldn't be empty\");\n      setTicket_receiver_info((prev) => ({ ...prev, mobile_err: true }));\n      return;\n    } else if (\n      !regex_data.mobile_regex.test(ticket_receiver_info.mobile.trim())\n    ) {\n      setSnackopen(true);\n      setSnackmessage(\"Ticket receivers mobile shouldn't be empty\");\n      // alert(\"Ticket receivers mobile shouldn't be empty\");\n      setTicket_receiver_info((prev) => ({ ...prev, mobile_err: true }));\n      return;\n    } else {\n      setTicket_receiver_info((prev) => ({ ...prev, mobile_err: false }));\n    }\n    const bookroom_obj = {\n      searchType:2,\n      booked_by: localStorage.getItem(\"userid\"),\n      booked_by_name:profile?.first_name,\n      rating: null,\n      review: null,\n      total_staying_persons: adult_num + child_num,\n      number_of_rooms: guests_details.length,\n      coupon_id: prices.coupon_id,\n      platform: 0,\n      admin_commission_type: coupons?.convenienceFee[0]?.convenience_type ?? \"\",\n      admin_commission: gmt_fee,\n      hotel_picture: hotel_info.Images[0].split('/')[5].split('?')[0].replace(/%28/g, \"(\").replace(/%29/g, \")\"),//'.split('/')[5].split('?')[0].replace(/%28/g, \"(\").replace(/%29/g, \")\")'\n      ticket_sent_mail: ticket_receiver_info.email,\n      ticket_sent_ph_num: ticket_receiver_info.mobile,\n      from_date: hotelresult.CheckInDate,\n      to_date: hotelresult.CheckOutDate,\n      created_at:helperFunctions.getapi_date(new Date()),\n      discount: prices.discount,\n      payment_status: 0,\n      payment_id: \"\",\n      total_price:\n        prices.discount > 0 ? prices.updatedprice : prices.totalprice,\n      coupon_code: prices.coupon_code,\n      pub_price: fixed_room_price,\n      TraceId: \"\",\n      ResultIndex: 0,\n      HotelCode: hotel_code,\n      CategoryId:\"\",\n      // searchtype === \"1\"\n      //   ? sel_hotel.supplier_hotel_codes[0].CategoryId\n      //   : sel_hotel.SupplierHotelCodes[0].CategoryId,\n      HotelName: hotel_info.HotelName,\n      GuestNationality: \"IN\",\n      NoOfRooms: guests_details.length,\n      ClientReferenceNo: \"0\",\n      IsVoucherBooking: \"true\",\n      HotelRoomsDetails: book_room_data,\n    };\n    book_room_data[0]['Amenities']=room_details?.HotelRoomsDetails[0].Amenities;\n    book_room_data[0]['CancellationPolicies']=room_details?.HotelRoomsDetails[0].CancellationPolicies\nlet block_room_obj={\n  \"HotelCode\":hotel_details?.HotelDetails?.HotelCode,\n  \"rooms\":[]\n}\n    //  adding ticket receivers_info in book api\n    for (\n      let room = 0;\n      room <= bookroom_obj.HotelRoomsDetails.length - 1;\n      room++\n    ) {\n      const sel_room=room_details.HotelRoomsDetails.find((item)=>item.RoomIndex===location1.state[room]);\n      let each_room={\n        \"roomId\":sel_room.Id,\n        \"price\":sel_room?.Price?.PublishedPriceRoundedOff\n      }\n      block_room_obj?.rooms.push(each_room);\n      Object.assign(bookroom_obj.HotelRoomsDetails[room].HotelPassenger[0], {\n        Phoneno: ticket_receiver_info.mobile,\n        Email: ticket_receiver_info.email,\n      });\n    }\n      // ////////////\n      // const sel_room=room_details.HotelRoomsDetails.find((item)=>item.RoomIndex===location1.state[0])\n      // console.log(sel_room,\"selected room\")\n      setLoading(true);\n      const gmt_block_res=await axios.post(`${envdata.baseurl}/gmtBlockRoom`,block_room_obj)\n      console.log(gmt_block_res.data,\"response\")\n      const gmt_block_data=gmt_block_res.data;\n      if(gmt_block_data.status){\n        dispatch(\n          HotelBookingDetailsActions.bookingrequest({\n            bookdata: bookroom_obj,\n            trasaction_id: transactionStr,\n          }))\n          setLoading(false);\n          document.getElementById(\"payuPayButton\").click();\n      }\n    }\n    catch(error){\n      console.log(error,\"error dta\")\nalert(error)\n    }\n\n  }\n  // tbo rooms block api calling\n  const hot_room_booking = async () => {\n    // setHotelbooked(true);\n    let sel_hotel;\n    if (searchtype === \"1\") {\n      sel_hotel = hotelresult.Hotels.find(\n        (item) => item.hotel_code === hotel_code\n      );\n    } \n    else {\n      sel_hotel = hotelresult.Hotels.find(\n        (item) => item.HotelCode === hotel_code\n      );\n    }\n    let block_room_data = [];\n    let book_room_data = [];\n    let guests_data = [];\n    // console.group(room_details.HotelRoomsDetails,\"room details\")\n    // console.log(category_ids,\"dflaksjdf\")\n    // console.log(selectedroom,\"sefffe\")\n    for (let i = 0; i < selectedroom.length; i++) {\n      let sel_room = room_details.HotelRoomsDetails.find(\n        (item) =>\n          item.RoomIndex === selectedroom[i] &&\n          item.CategoryId === category_ids\n      );\n      // console.log(sel_room,\"data to be displayed\")\n\n      const room_guests = await hotel_guest_validation(persons[i], i, sel_room);\n      // console.log(room_guests, \"each room\");\n      if (room_guests === true) {\n        return;\n      } else {\n        guests_data.push(room_guests);\n      }\n// console.log(sel_room,\"data\")\n      let smoking =\n        sel_room?.SmokingPreference === \"NoPreference\"\n          ? 0\n          : sel_room?.SmokingPreference === \"Smoking\"\n          ? 1\n          : sel_room?.SmokingPreference === \"NonSmoking\"\n          ? 2\n          : sel_room?.SmokingPreference === \"Either\" && 3;\n      let block_room_obj = {\n        RoomIndex: sel_room?.RoomIndex,\n        RoomTypeCode: sel_room?.RoomTypeCode,\n        RoomTypeName: sel_room?.RoomTypeName,\n        RatePlanCode: sel_room?.RatePlanCode,\n        SmokingPreference: smoking,\n        Supplements: null,\n        Price:\n          // sel_room.Price,\n          {\n            CurrencyCode: sel_room?.Price.CurrencyCode,\n            RoomPrice: sel_room.Price.RoomPrice,\n            Tax: sel_room.Price.Tax,\n            ExtraGuestCharge: sel_room.Price.ExtraGuestCharge,\n            ChildCharge: sel_room.Price.ChildCharge,\n            OtherCharges: sel_room.Price.OtherCharges,\n            Discount: sel_room.Price.Discount,\n            PublishedPrice: sel_room.Price.PublishedPrice,\n            PublishedPriceRoundedOff: sel_room.Price.PublishedPriceRoundedOff,\n            OfferedPrice: sel_room.Price.OfferedPrice,\n            OfferedPriceRoundedOff: sel_room.Price.OfferedPriceRoundedOff,\n            AgentCommission: sel_room.Price.AgentCommission,\n            AgentMarkUp: sel_room.Price.AgentMarkUp,\n            ServiceTax: sel_room.Price.ServiceTax,\n            TDS: sel_room.Price.TDS,\n          },\n      };\n      let book_room_obj = {\n        RoomIndex: sel_room.RoomIndex,\n        RoomTypeCode: sel_room.RoomTypeCode,\n        RoomTypeName: sel_room.RoomTypeName,\n        RatePlanCode: sel_room.RatePlanCode,\n        SmokingPreference: smoking,\n        Price: sel_room.Price,\n        // {\n        //   CurrencyCode: sel_room.Price.CurrencyCode,\n        //   RoomPrice: sel_room.Price.RoomPrice,\n        //   Tax: sel_room.Price.Tax,\n        //   ExtraGuestCharge: sel_room.Price.ExtraGuestCharge,\n        //   ChildCharge: sel_room.Price.ChildCharge,\n        //   OtherCharges: sel_room.Price.OtherCharges,\n        //   Discount: sel_room.Price.Discount,\n        //   PublishedPrice: sel_room.Price.PublishedPrice,\n        //   PublishedPriceRoundedOff: sel_room.Price.PublishedPriceRoundedOff,\n        //   OfferedPrice: sel_room.Price.OfferedPrice,\n        //   OfferedPriceRoundedOff: sel_room.Price.OfferedPriceRoundedOff,\n        //   AgentCommission: sel_room.Price.AgentCommission,\n        //   AgentMarkUp: sel_room.Price.AgentMarkUp,\n        //   ServiceTax: sel_room.Price.ServiceTax,\n        //   TDS: sel_room.Price.TDS,\n        // },\n        HotelPassenger: room_guests,\n      };\n      block_room_data.push(block_room_obj);\n      book_room_data.push(book_room_obj);\n    }\n    // ticket receivers_information validation\n    if (ticket_receiver_info.email.trim() === \"\") {\n      setSnackopen(true);\n      setSnackmessage(\"ticket receivers info shouldn't be empty\");\n      setTicket_receiver_info((prevstate) => ({\n        ...prevstate,\n        email_err: true,\n      }));\n      return;\n    } else if (\n      !regex_data.email_Regex.test(ticket_receiver_info.email.trim())\n    ) {\n      setSnackopen(true);\n      setSnackmessage(\"enter valid email address\");\n      // alert(\"enter valid email address\");\n      setTicket_receiver_info((prevstate) => ({\n        ...prevstate,\n        email_err: true,\n      }));\n      return;\n    } else {\n      setTicket_receiver_info((prevstate) => ({\n        ...prevstate,\n        email_err: false,\n      }));\n    }\n    if (ticket_receiver_info.mobile === \"\") {\n      setSnackopen(true);\n      setSnackmessage(\"ticket receiver mobile number shouldn't be empty\");\n      // alert(\"Ticket reviever mobile number shouldn't be empty\");\n      setTicket_receiver_info((prev) => ({ ...prev, mobile_err: true }));\n      return;\n    } else if (\n      !regex_data.mobile_regex.test(ticket_receiver_info.mobile.trim())\n    ) {\n      setSnackopen(true);\n      setSnackmessage(\"Ticket receivers mobile shouldn't be empty\");\n      // alert(\"Ticket receivers mobile shouldn't be empty\");\n      setTicket_receiver_info((prev) => ({ ...prev, mobile_err: true }));\n      return;\n    } else {\n      setTicket_receiver_info((prev) => ({ ...prev, mobile_err: false }));\n    }\n    book_room_data[0]['CancellationPolicies']=room_details?.HotelRoomsDetails[0].CancellationPolicies\n    const blockroom_obj = {\n      TraceId: room_details.TraceId,\n      ResultIndex: hotel_index,\n      HotelCode: hotel_code.toString(),\n      CategoryId: category_ids,\n      // searchtype === \"1\"\n      //   ? sel_hotel.supplier_hotel_codes[0].CategoryId\n      //   : sel_hotel.SupplierHotelCodes[0].CategoryId,\n      HotelName: hotel_info.HotelName,\n      GuestNationality: \"IN\",\n      NoOfRooms: guests_details.length,\n      ClientReferenceNo: \"0\",\n      IsVoucherBooking: \"true\",\n      HotelRoomsDetails: block_room_data,\n    };\n\n    const bookroom_obj = {\n      searchType:1,\n      booked_by: localStorage.getItem(\"userid\"),\n      booked_by_name:profile?.first_name,\n      rating: null,\n      review: null,\n      total_staying_persons: adult_num + child_num,\n      number_of_rooms: guests_details.length,\n      coupon_id: prices.coupon_id,\n      platform: 0,\n      admin_commission_type: coupons?.convenienceFee[0]?.convenience_type ?? \"\",\n      admin_commission: gmt_fee,\n      hotel_picture: hotel_info.Images[0],\n      ticket_sent_mail: ticket_receiver_info.email,\n      ticket_sent_ph_num: ticket_receiver_info.mobile,\n      from_date: hotelresult.CheckInDate,\n      to_date: hotelresult.CheckOutDate,\n      created_at:helperFunctions.getapi_date(new Date()),\n      discount: prices.discount,\n      payment_status: 1,\n      payment_id: \"123lkj\",\n      total_price:\n        prices.discount > 0 ? prices.updatedprice : prices.totalprice,\n      coupon_code: prices.coupon_code,\n      pub_price: fixed_room_price,\n      TraceId: room_details.TraceId,\n      ResultIndex: hotel_index,\n      HotelCode: hotel_code,\n      CategoryId: category_ids,\n      HotelName: hotel_info.HotelName,\n      GuestNationality: \"IN\",\n      NoOfRooms: guests_details.length,\n      ClientReferenceNo: \"0\",\n      IsVoucherBooking: \"true\",\n      HotelRoomsDetails: book_room_data,\n    };\n    //  adding ticket receivers_info in book api\n    for (\n      let room = 0;\n      room <= bookroom_obj.HotelRoomsDetails.length - 1;\n      room++\n    ) {\n      Object.assign(bookroom_obj.HotelRoomsDetails[room].HotelPassenger[0], {\n        Phoneno: ticket_receiver_info.mobile,\n        Email: ticket_receiver_info.email,\n      });\n    }\n    //  block room api calling\n    setLoading(true);\n    try {\n      const res = await axios.post(\n        `${envdata.baseurl}/deDupeBlockRoom`,\n        blockroom_obj\n      );\n      if (res.status) {\n        let data = res.data.data;\n        bookroom_obj.IsPackageFare = data?.IsPackageFare;\n        if (data?.IsPackageDetailsMandatory) {\n          Object.assign(bookroom_obj, {\n            ArrivalTransport: {\n              TransportInfoId: \"6E 231\",\n              Time: \"2023-07-05T14:05:36\",\n            },\n          });\n        }\n        if (data?.IsDepartureDetailsMandatory) {\n          Object.assign(bookroom_obj, {\n            DepartureTransport: {\n              TransportInfoId: \"6E 231\",\n              Time: \"2023-07-06T14:05:36\",\n            },\n          });\n        }\n        setBook_req(bookroom_obj);\n        if (data?.IsCancellationPolicyChanged || data?.IsPriceChanged) {\n          for (let i = 0; i <= bookroom_obj.HotelRoomsDetails.length - 1; i++) {\n            let changeddata = data.HotelRoomsDetails[i].Price;\n            bookroom_obj.HotelRoomsDetails[i].Price = {\n              CurrencyCode: changeddata.CurrencyCode,\n              RoomPrice: changeddata.RoomPrice,\n              Tax: changeddata.Tax,\n              ExtraGuestCharge: changeddata.ExtraGuestCharge,\n              ChildCharge: changeddata.ChildCharge,\n              OtherCharges: changeddata.OtherCharges,\n              Discount: changeddata.Discount,\n              PublishedPrice: changeddata.PublishedPrice,\n              PublishedPriceRoundedOff: changeddata.PublishedPriceRoundedOff,\n              OfferedPrice: changeddata.OfferedPrice,\n              OfferedPriceRoundedOff: changeddata.OfferedPriceRoundedOff,\n              AgentCommission: changeddata.AgentCommission,\n              AgentMarkUp: changeddata.AgentMarkUp,\n              ServiceTax: changeddata.ServiceTax,\n              TDS: changeddata.TDS,\n            };\n          }\n          setBook_req(bookroom_obj);\n          setLoading(false);\n          setPrice_change(true);\n          setChanged_room_data(data);\n        } else {\n          // book_room_api(bookroom_obj);\n          dispatch(\n            HotelBookingDetailsActions.bookingrequest({\n              bookdata: bookroom_obj,\n              trasaction_id: transactionStr,\n            })\n          );\n          // details =\n          //  `${key}|${transactionStr}|${prices.discount > 0 ? prices.updatedprice : prices.totalprice}|${productinfo}|${persons[0]?.adult_state[0]?.first_name}|${ticket_receiver_info.email}|||||||||||${salt}`;\n          // console.log(details)\n          //  let hashedValue = sha512.create();\n          // hashedValue.update(details);\n          // console.log(hashedValue.hex(),\"hashed value\")\n          // setHashedData(hashedValue.hex())\n          setLoading(false);\n          document.getElementById(\"payuPayButton\").click();\n        }\n      } else {\n        setSnackopen(true);\n        setSnackmessage(res.data.message);\n        // alert(res.data.message);\n      }\n    } catch (error) {\n      setSnackopen(true);\n      setSnackmessage(error);\n      // alert(error);\n    }\n  };\n  // profile data setting\n  useEffect(() => {\n    setTicket_receiver_info((prev) => ({\n      ...prev,\n      mobile: profile?.mobile,\n      email: profile?.email,\n    }));\n  }, [profile]);\n  useEffect(() => {\n    let total_adult = 0;\n    let total_child = 0;\n    const settraveller_state = async () => {\n      // if (require_all_pax_details) {\n      total_adult = await guests_details.reduce(\n        (sum, item) => sum + item.NoOfAdults,\n        0\n      );\n      total_child = await guests_details.reduce(\n        (sum, item) => sum + item.NoOfChild,\n        0\n      );\n      setAdult_num(total_adult);\n      setChild_num(total_child);\n      // }\n      // else {\n      //   total_adult = guests_details.length;\n      //   setAdult_num(total_adult);\n      // }\n      const per = await Array.from(\n        { length: guests_details.length },\n        (_, index) => ({\n          adult_state: Array.from(\n            { length: guests_details[index].NoOfAdults },\n            (_, index) => ({\n              type: 1,\n              first_name: \"\",\n              last_name: \"\",\n              gender: 0,\n              dob: \"\",\n              passport_num: \"\",\n              passport_exp: \"\",\n              title: 1,\n              passport_issue: \"\",\n              passport_issue_country: \"\",\n              pan_no: \"\",\n              f_name_err: false,\n              l_name_err: false,\n              dob_err: false,\n              p_num_err: false,\n              p_exp_err: false,\n              title_err: false,\n              passport_issue_err: false,\n              passport_issue_country_err: false,\n              pan_no_err: false,\n            })\n          ),\n          child_state: Array.from(\n            { length: guests_details[index].NoOfChild },\n            (_, index) => ({\n              type: 2,\n              first_name: \"\",\n              last_name: \"\",\n              gender: 0,\n              dob: \"\",\n              passport_num: \"\",\n              passport_exp: \"\",\n              title: 3,\n              passport_issue: \"\",\n              passport_issue_country: \"\",\n              pan_no: \"\",\n              f_name_err: false,\n              l_name_err: false,\n              dob_err: false,\n              p_num_err: false,\n              p_exp_err: false,\n              title_err: false,\n              passport_issue_err: false,\n              passport_issue_country_err: false,\n              pan_no_err: false,\n            })\n          ),\n        })\n      );\n      // console.log(per,\"details generated dynamically\")\n      setPersons([...per]);\n    };\n    settraveller_state();\n    // setLoading(true)\n  }, [guests_details, room_details]);\n  const titlechange = (type, index, roomindex) => (event, title) => {\n    if (title === null) {\n      return;\n    } else {\n      // child title updation\n      if (type === 1) {\n        const updatedpersons = [...persons];\n        updatedpersons[roomindex].child_state[index].title = title;\n        setPersons(updatedpersons);\n      }\n      // adult title updation\n      else if (type === 2) {\n        const updatedpersons = [...persons];\n        updatedpersons[roomindex].adult_state[index].title = title;\n        setPersons(updatedpersons);\n      }\n    }\n  };\n  // promocodes callback\n  // type-1 coupon data\n  // type-2 validated coupon and discount data\n  const coupons_data = (data) => {\n    if (data.type === 1) {\n      setGmt_fee(data.platform_charge);\n      setCoupons(data.couponsdata);\n      setPrices((prev) => ({ ...prev, totalprice: data.totalprice }));\n    } else {\n      setPrices((prev) => ({\n        ...prev,\n        discount: data.discount,\n        updatedprice: data.updated_price,\n        coupon_id: data.couponid,\n        coupon_code: data.couponcode,\n      }));\n    }\n  };\n  // 0=>infant\n  // 1=>child\n  // 2=>adult\n  const handleGender = (type, index, roomindex) => (event, gender) => {\n    // child gender updation\n    if (type === 1) {\n      const updatedpersons = [...persons];\n      updatedpersons[roomindex].child_state[index].gender = gender;\n      setPersons(updatedpersons);\n    }\n    // adult gender updation\n    else if (type === 2) {\n      const updatedpersons = [...persons];\n      updatedpersons[roomindex].adult_state[index].gender = gender;\n      setPersons(updatedpersons);\n    }\n    // setGender(gender);\n  };\n  // handle travellers onchange event\n  // 2->adult state\n  // 1->child state\n  const handletravellersinput = (e, index, type, roomindex) => {\n    const { name, value } = e.target;\n    // console.log(value,\"value\")\n    if (type === 2) {\n      // Get a copy of the current persons state\n      const updatedPersons = [...persons];\n      // console.log(updatedPersons[roomindex],\"change\")\n      updatedPersons[roomindex].adult_state[index][name] = value;\n      setPersons(updatedPersons);\n    } else if (type === 1) {\n      // Get a copy of the current persons state\n      const updatedPersons = [...persons];\n      updatedPersons[roomindex].child_state[index][name] = value;\n      setPersons(updatedPersons);\n    }\n  };\n  // travellers dialog opening\n  const Travellersdialogopen = async (index, type, roomindex) => {\n    setTraveller_index({ indx: index, type: type, roomindex: roomindex });\n    // console.log(localStorage.getItem(\"userid\"));\n    const userid = localStorage.getItem(\"userid\");\n    if (userid != null) {\n      const res = await Apipost(\"/allTravellers\", { user_id: userid });\n      if (res.status) {\n        setTravellerdata(res.data);\n        setViewtravellerdialog(true);\n      }\n    } else {\n      setSnackopen(true);\n      setSnackmessage(\"you need to login to your account\");\n      // alert(\"you need to login to your account\");\n    }\n  };\n  // travelers call back setting in inputs\n  const traveller_cal = (data) => {\n    const gendre =\n      data.gender === \"1\"\n        ? 0\n        : data.gender === \"2\"\n        ? 1\n        : data.gender === \"3\" && 2;\n\n    const [birth_day, birth_month, birth_year] = data?.dob.split(\"/\");\n    let birth_date = `${birth_year}-${birth_month}-${birth_day}`;\n    const [p_day, p_month, p_year] = data?.passport_expiry.split(\"/\");\n    let passport_expdate = `${p_year}-${p_month}-${p_day}`;\n    const [p_issue_day, p_issue_month, p_issue_year] =\n      data?.passport_issue_date.split(\"/\");\n    let passport_issue_date = `${p_issue_year}-${p_issue_month}-${p_issue_day}`;\n    // console.log(birth_date);\n    // console.log(passport_expdate);\n    if (traveller_index.type === 2) {\n      // alert(traveller_index.indx);\n      setPersons((prevdata) => {\n        const updatedPersons = [...prevdata];\n        updatedPersons[traveller_index.roomindex].adult_state[\n          traveller_index.indx\n        ] = {\n          ...updatedPersons[traveller_index.roomindex].adult_state[\n            traveller_index.indx\n          ],\n          first_name: data.first_name,\n          last_name: data.last_name,\n          gender: gendre,\n          dob: birth_date,\n          passport_num: data.passport,\n          passport_exp: passport_expdate,\n          passport_issue: passport_issue_date,\n          pan_no: data.pan_card,\n          passport_issue_country: data.passport_issue_country,\n          title: parseInt(data.title),\n        };\n        return updatedPersons;\n      });\n    } else if (traveller_index.type === 1) {\n      setPersons((prevdata) => {\n        const updatedPersons = [...prevdata];\n        updatedPersons[traveller_index.roomindex].child_state[traveller_index.indx] = {\n          ...updatedPersons[traveller_index.roomindex].child_state[\n            traveller_index.indx\n          ],\n          first_name: data.first_name,\n          last_name: data.last_name,\n          gender: gendre,\n          dob: birth_date,\n          passport_num: data.passport,\n          passport_exp: passport_expdate,\n          passport_issue: passport_issue_date,\n          pan_no: data.pan_card,\n          passport_issue_country: data.passport_issue_country,\n          title: parseInt(data.title),\n        };\n        return updatedPersons;\n      });\n    }\n  };\n  // country selection\n  function handlecountryselected(value) {\n    setSelectedcountry(value);\n  }\n  // if(!persons){\n  //   <h1>loading...</h1>\n  // }\n\n  // payment related start's\n\n  const [transactionStr, setTransactionStr] = useState(\"\");\n\n  let key = envdata.PayU_hotel_Key;//\"Lk3AOx\";//\n  let salt = envdata.PayU_hotel_salt;//\"VFuQME6bm4OQKXQ7T8Fbxw4XniaBxWxf\"//\n  let productinfo = \"web\";\n  let details;\n  //-----------------------------PAYU key\n  details = `${key}|${transactionStr}|${\n    prices.discount > 0 ? prices.updatedprice : prices.totalprice\n  }|${productinfo}|${persons[0]?.adult_state[0]?.first_name}|${\n    ticket_receiver_info.email\n  }|||||||||||${salt}`;\n  // details = `${key}|${transactionStr}|10|${productinfo}|${persons[0]?.adult_state[0]?.first_name}|${\n  //   ticket_receiver_info.email\n  // }|||||||||||${salt}`;\n  console.log(details, \"detailjs\");\n  let hashedValue = sha512.create();\n  hashedValue.update(details);\n  let hashedData = hashedValue.hex();\n  // const [hashedData,setHashedData] = useState(); //= hashedValue.hex();\n\n  useEffect(() => {\n    const randomFiveDigitNumber = Math.floor(10000 + Math.random() * 90000);\n    let txnid = \"txnid\" + \"-\" + Date.now() + randomFiveDigitNumber; //crypto.randomUUID();\n    setTransactionStr(txnid);\n  }, []);\n\n \n\n  // payment related end's\n\n  return (\n    <div>\n      <MySnackbar open={snackopen} close={snackclose} message={snackmessage} />\n      <Hotelconfirmation\n        open={hotelbooked}\n        close={() => setHotelbooked(false)}\n        data={booking_details}\n      />\n      <Countrycodefilter\n        open={countrydialog}\n        onclose={() => setCountrydialog(false)}\n        selectedvalue={handlecountryselected}\n      />\n      <Loadingmodal open={loading} loadingclose={() => setLoading(false)} />\n      <Tickettravellers\n        open={viewtravellerdialog}\n        close={() => setViewtravellerdialog(false)}\n        travellers={travellerdata}\n        traveller_data={traveller_cal}\n      />\n      {/* {JSON.stringify(book_req, null, 2)} */}\n      <Container maxWidth=\"xl\">\n        <Grid container spacing={2}>\n          <Grid item container md={9} direction=\"column\">\n            <Grid item mt={{ md: 1, xs: 1 }}>\n              <span\n                className={room_style.text}\n                style={{ display: \"flex\", gap: \"10px\" }}\n              >\n                {\" \"}\n                <ArrowBackIcon\n                  sx={{ display: { md: \"none\", xs: \"block\" } }}\n                  onClick={() => navigate(-1)}\n                />{\" \"}\n                Complete your Booking\n              </span>\n            </Grid>\n            <Stack spacing={1}>\n              <Grid item mt={1}>\n                <Paper sx={{ borderRadius: \"0.8rem\" }}>\n                  <Stack p={1} spacing={1}>\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        md={3}\n                        xs={12}\n                        sx={{ padding: \"8px\", height: \"11rem\" }}\n                        textAlign={\"center\"}\n                      >\n                        <img\n                          src={hotel_info?.Images===undefined?\"\":hotel_info?.Images[0]}\n                          alt=\"selected_room\"\n                          style={{\n                            maxWidth: \"100%\",\n                            maxHeight: \"100%\",\n                            width: \"100%\",\n                            height: \"100%\",\n                            borderRadius: \"0.7rem\",\n                            objectFit: \"cover\",\n                          }}\n                        />\n                      </Grid>\n                      <Grid item container direction=\"column\" md={8.5}>\n                        <Grid item>\n                          <span className={room_style.hotelname}>\n                            {hotel_info.HotelName}\n                          </span>\n                        </Grid>\n                        <Grid item>\n                          <Stack direction=\"row\">\n                            {Array.from(\n                              { length: hotel_info.StarRating },\n                              (_, index) => {\n                                return (\n                                  <img src={Ratingstar} alt=\"ratingstar\" />\n                                );\n                              }\n                            )}\n                          </Stack>\n                        </Grid>\n                        <Grid item>\n                          <span className={room_style.hotel_loc}>\n                            {typeof hotel_info?.Address===\"string\"&&hotel_info.Address}\n                          </span>\n                        </Grid>\n                        <Grid item container rowGap={1}>\n                          <Grid item md={2.5} xs={4}>\n                            <Stack>\n                              <span className={room_style.hotel_loc}>\n                                Check-In{\" \"}\n                              </span>\n                              <span className={room_style.hotel_checked_dates}>\n                                {helperFunctions.get_numeric_date(\n                                  hotelresult.CheckInDate\n                                )}\n                              </span>\n                              <span className={room_style.hotel_loc}>\n                                {`${helperFunctions.day_name(\n                                  hotelresult.CheckInDate\n                                )} ${checkintime}`}{\" \"}\n                              </span>\n                            </Stack>\n                          </Grid>\n                          <Grid\n                            item\n                            md={2.5}\n                            xs={4}\n                            alignSelf={\"center\"}\n                            textAlign={\"center\"}\n                          >\n                            <button\n                              className={room_style.days_stay}\n                            >{`${helperFunctions.nights_calc(\n                              hotelresult.CheckInDate,\n                              hotelresult.CheckOutDate\n                            )} ${\n                              helperFunctions.nights_calc(\n                                hotelresult.CheckInDate,\n                                hotelresult.CheckOutDate\n                              ) > 1\n                                ? \"Nights\"\n                                : \"Night\"\n                            }`}</button>\n                          </Grid>\n                          <Grid item md={2.5} xs={4}>\n                            <Stack>\n                              <span className={room_style.hotel_loc}>\n                                Check-Out\n                              </span>\n                              <span className={room_style.hotel_checked_dates}>\n                                {helperFunctions.get_numeric_date(\n                                  hotelresult.CheckOutDate\n                                )}\n                              </span>\n                              <span className={room_style.hotel_loc}>\n                                {`${helperFunctions.day_name(\n                                  hotelresult.CheckOutDate\n                                )} ${checkouttime}`}\n                              </span>\n                            </Stack>\n                          </Grid>\n                          <Grid\n                            item\n                            container\n                            justifyContent={\"space-between\"}\n                            md={4.5}\n                            xs={12}\n                            alignSelf={\"center\"}\n                          >\n                            <Grid\n                              sx={{\n                                display: { md: \"none\", xs: \"block\" },\n                                fontSize: \"14px\",\n                                color: \"rgba(0, 53, 86, 1)\",\n                                fontWeight: \"500\",\n                              }}\n                            >\n                              Rooms & guests\n                            </Grid>\n                            <Breadcrumbs\n                              separator=\"|\"\n                              className={room_style.guests_count}\n                            >\n                              <span>{`${helperFunctions.nights_calc(\n                                hotelresult.CheckInDate,\n                                hotelresult.CheckOutDate\n                              )} ${\n                                helperFunctions.nights_calc(\n                                  hotelresult.CheckInDate,\n                                  hotelresult.CheckOutDate\n                                ) > 1\n                                  ? \"Nights\"\n                                  : \"Night\"\n                              }`}</span>\n                              {/* {console.log(adult_num,\"adult_numer\")} */}\n                              {/* {console.log(child_num,\"childnumebr\")} */}\n                              {/* {console.log(guests_details,\"guests detials\")} */}\n                              <span>{adult_num + child_num} Guest</span>\n                              <span>{`${guests_details.length} ${\n                                guests_details.length > 1 ? \"Rooms\" : \"Room\"\n                              }`}</span>\n                            </Breadcrumbs>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      item\n                      sx={{ borderBottom: `1px dashed ${styles.app_color}` }}\n                    ></Grid>\n                    {/* {console.log(room_details.HotelRoomsDetails.find(item=>item.RoomIndex===selectedroom[0]),\"dtilal\")} */}\n                    \n                    {room_details?.RoomCombinationsArray!==undefined&&<Grid item>\n                      {\n                      <span className={room_style.room_name}>\n                        {\n                          room_details.HotelRoomsDetails.find(\n                            (item) => item.RoomIndex === selectedroom[0]\n                          )?.RoomTypeName\n                        }{\" \"}\n                      </span>\n                      }\n                    </Grid>}\n                    {/* <ul style={{fontSize:'14px',fontWeight:400,color:\"#000000\"}}>\n                  <li>Free Breakfast and Lunch/Dinner</li>\n                  <li>Includes Breakfast, One major meal, Two Way airport Transfer, Beach Transfers At Designated Time Intervals *Minibar First Fill on us *Kids Special Amenities, Kids Below 12 Yrs. Stay Free</li>\n                </ul> */}\n                   { <span\n                      style={{\n                        fontSize: \"14px\",\n                        fontWeight: 400,\n                        color: \"#000000\",\n                      }}\n                    >\n                     {/* {\n                      room_details.HotelRoomsDetails.find(\n                        (item) => item.RoomIndex === selectedroom[0]\n                      )?.Amenities.join(\",\")\n                     } */}\n                    </span>}\n                  </Stack>\n                </Paper>\n              </Grid>\n\n              {/* Fare summary responsive */}\n              <Grid item sx={{ display: { xs: \"block\", md: \"none\" } }}>\n                <Paper\n                  sx={{ padding: \"1rem\", borderRadius: \"0.5rem\" }}\n                  elevation={3}\n                >\n                  <Grid container direction={\"column\"} spacing={1.5}>\n                    <Grid item>\n                      <h3 className={ticketbook.completebookings}>\n                        Fare summary\n                      </h3>\n                    </Grid>\n                    <Grid item container justifyContent={\"space-between\"}>\n                      <Grid item>\n                        <Stack>\n                          <span>\n                            {`${guests_details.length} ${\n                              guests_details.length > 1 ? \"Rooms\" : \"Room\"\n                            } * ${`${helperFunctions.nights_calc(\n                              hotelresult.CheckInDate,\n                              hotelresult.CheckOutDate\n                            )} ${\n                              helperFunctions.nights_calc(\n                                hotelresult.CheckInDate,\n                                hotelresult.CheckOutDate\n                              ) > 1\n                                ? \"Nights\"\n                                : \"Night\"\n                            }`}`}\n                          </span>\n                          <span style={{ color: \"grey\", fontSize: \"12px\" }}>\n                            Base Price\n                          </span>\n                        </Stack>\n                      </Grid>\n                      <Grid item>\n                        {`${cancellation_policies[0].Currency} ${room_details.RoomCombinationsArray===undefined?open_room_price:fixed_room_price}`}\n                      </Grid>\n                    </Grid>\n\n                    <Grid item>\n                      <Divider />\n                    </Grid>\n\n                    {/* {prices.discount>0&& <>\n                            <Grid item container sx={{color:'#00a19c'}}>\n                            <Grid item md={8}>\n                                  Price after Discount\n                              </Grid>\n                              <Grid item md={4} textAlign={'right'}>\n                              {`${cancellation_policies[0].Currency} ${fixed_room_price-prices.discount}`}\n                              </Grid>\n                          \n                          </Grid>\n                          <Grid item>\n                        <Divider />\n                        </Grid>\n                          </>\n                        } */}\n                    <Grid item>\n                      <Grid container justifyContent={\"space-between\"}>\n                        <Grid item>Fee & Surcharges</Grid>\n                        <Grid item textAlign={\"right\"}>\n                          {`${cancellation_policies[0].Currency} ${gmt_fee}`}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item>\n                      <Divider />\n                    </Grid>\n                    {prices.discount > 0 && (\n                      <>\n                        <Grid item>\n                          <Grid container justifyContent={\"space-between\"}>\n                            <Grid item>Total Discount</Grid>\n                            <Grid item sx={{ color: \"#3F8CFF\" }}>\n                              <Stack>\n                                <span>{`- ${cancellation_policies[0].Currency} ${prices.discount}`}</span>\n                                {/* <span><CancelIcon onClick={()=>{setPrices((prev)=>({...prev,discount:0}))}}/></span> */}\n                                <button\n                                  style={{\n                                    border: \"none\",\n                                    background: \"none\",\n                                    color: \"red\",\n                                    textDecoration: \"underline\",\n                                  }}\n                                  onClick={() => {\n                                    setPrices((prev) => ({\n                                      ...prev,\n                                      discount: 0,\n                                    }));\n                                  }}\n                                >\n                                  Remove\n                                </button>\n                              </Stack>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid item>\n                          <Divider />\n                        </Grid>\n                      </>\n                    )}\n                    <Grid item>\n                      <Grid container sx={{ color: styles.app_color }}>\n                        <Grid item xs={6}>\n                          <span className={ticketbook.totalamount}>\n                            Total Amount\n                          </span>\n                        </Grid>\n                        <Grid\n                          item\n                          xs={6}\n                          textAlign={\"right\"}\n                          sx={{ fontWeight: 500 }}\n                        >\n                          {`${room_details?.RoomCombinationsArray!==undefined&&cancellation_policies[0].Currency} ${\n                            prices.discount > 0\n                              ? prices.updatedprice\n                              : prices.totalprice\n                          }`}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Paper sx={{ padding: \"1rem\", borderRadius: \"0.8rem\" }}>\n                <Stack spacing={1}>\n                  <Grid item>\n                    <Stack direction=\"row\" spacing={1}>\n                      <img src={Refundpolicy} alt=\"cancellation\" />\n                      <span className={room_style.room_name}>\n                        Cancellation Details\n                      </span>\n                    </Stack>\n                  </Grid>\n                  <Grid\n                    container\n                    direction={\"column\"}\n                    spacing={1}\n                    sx={{\n                      padding: \"1rem\",\n                      backgroundColor:styles.shade_color,\n                      borderRadius: \"0.5rem\",\n                    }}\n                  >\n                    <Grid item container>\n                      <Grid item md={4} xs={4}>\n                        <span className={room_style.cancel_header}>\n                          Cancellation Time\n                        </span>\n                      </Grid>\n                      <Grid item md={4} xs={4}>\n                        <span className={room_style.cancel_header}>\n                          Penalty%\n                        </span>\n                      </Grid>\n                      <Grid item md={4} xs={4}>\n                        <span className={room_style.cancel_header}>Amount</span>\n                      </Grid>\n                    </Grid>\n                    {cancellation_policies.map((item, index) => {\n                      return (\n                        <Grid item container>\n                          <Grid item md={4} xs={4}>\n                            <span\n                              className={room_style.hotel_loc}\n                            >{`Before ${room_details?.RoomCombinationsArray===undefined?item.FromDate:helperFunctions.calculateDateDifference(\n                              hotelresult.CheckInDate,\n                              item.FromDate\n                            )}- ${room_details?.RoomCombinationsArray===undefined?item.ToDate:helperFunctions.calculateDateDifference(\n                              hotelresult.CheckInDate,\n                              item.ToDate\n                            )} Days`}</span>\n                          </Grid>\n                          <Grid item md={4} xs={4}>\n                            <span\n                              className={room_style.hotel_loc}\n                            >{`${room_details?.RoomCombinationsArray===undefined?\n                              Hotelhelpers.open_room_cancellation_percent(item?.ChargeType,item?.Charge,location1?.state,room_details?.HotelRoomsDetails):\n                              helperFunctions.hotel_cancellation_penalty(\n                              item.ChargeType,\n                              item.Charge,\n                              location1.state,\n                              room_details.HotelRoomsDetails\n                            )}%`}</span>\n                          </Grid>\n                          <Grid item md={4} xs={4}>\n                            <span className={room_style.hotel_loc}>{`${\n                              item.Currency\n                            } ${room_details?.RoomCombinationsArray===undefined?\n                              Hotelhelpers.open_room_cancellation_rs(item?.ChargeType,item?.Charge,location1?.state,room_details?.HotelRoomsDetails)\n                              :helperFunctions.hotel_cancellation_penalty_rs(\n                              item.ChargeType,\n                              item.Charge,\n                              location1.state,\n                              room_details.HotelRoomsDetails\n                            )}`}</span>\n                          </Grid>\n                        </Grid>\n                      );\n                    })}\n                    {/* <Grid item container>\n                      <Grid item md={4}><span className={room_style.hotel_loc}>Less than 24 hrs before check in</span></Grid>\n                      <Grid item md={4}><span className={room_style.hotel_loc}>100%</span></Grid>\n                      <Grid item md={4}><span className={room_style.hotel_loc}>Non - Refundable </span></Grid>\n                      </Grid> */}\n                  </Grid>\n                </Stack>\n              </Paper>\n              {/* promo code responsive */}\n              <Grid item sx={{ display: { md: \"none\", xs: \"block\" } }}>\n                <PromoCodes\n                  coupons={coupons_data}\n                  data={{\n                    baseprice: room_details?.RoomCombinationsArray===undefined?open_room_price:fixed_room_price,\n                    count: guests_details.length,\n                  }}\n                  all_prices={prices}\n                />\n              </Grid>\n              <Importantinfo />\n              <Paper\n                sx={{\n                  borderRadius: \"0.8rem\",\n                  padding: \"1.5rem 0.5rem 0.5rem 1rem\",\n                }}\n              >\n                <Stack direction={\"row\"} spacing={1}>\n                  <HealthAndSafetyIcon sx={{ color: styles.app_color }} />\n                  <span\n                    style={{ color: styles.app_color, fontWeight: 500 }}\n                  >\n                    Health Insurance Details\n                  </span>\n                </Stack>\n                <span>\n                  Protection your stay in Hotel from COVID - 19, medical costs &\n                  more with Health Insurance from our partner Xcover.{\" \"}\n                </span>\n                <RadioGroup\n                  value={health_insurance}\n                  onChange={(e) => setHealth_insurance(e.target.value)}\n                >\n                  <FormControlLabel\n                    value=\"yes\"\n                    control={\n                      <Radio\n                        sx={{\n                          color: \"white\",\n                          \"&, &.Mui-checked\": {\n                            color:styles.textcolor,\n                          },\n                          size: \"small\",\n                        }}\n                      />\n                    }\n                    label={\n                      <span style={{ fontSize: \"14px\", fontFamily: \"poppins\" }}>\n                        Yes, add Health Insurance with COVID-19 Cover for only ₹\n                        99.00{\" \"}\n                      </span>\n                    }\n                  />\n                  <Grid container direction=\"column\" pl={4}>\n                    <Grid item>\n                      <Stack direction={\"row\"} spacing={1}>\n                        <img src={correct} alt=\"correct\" />\n                        <span className={room_style.insurance_text}>\n                          Emergency medical\n                        </span>\n                      </Stack>\n                    </Grid>\n                    <Grid item>\n                      <Stack direction={\"row\"} spacing={1}>\n                        <img src={correct} alt=\"correct\" />\n                        <span className={room_style.insurance_text}>\n                          24/7 Emergency assistance\n                        </span>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n                  <FormControlLabel\n                    value=\"no\"\n                    control={\n                      <Radio\n                        sx={{\n                          color: \"white\",\n                          \"&, &.Mui-checked\": {\n                            color: styles.textcolor,\n                          },\n\n                          size: \"small\",\n                        }}\n                      />\n                    }\n                    label={\n                      <span style={{ fontSize: \"14px\", fontFamily: \"poppins\" }}>\n                        No, thanks, I’ll risk it.\n                      </span>\n                    }\n                  />\n                </RadioGroup>\n              </Paper>\n              {/* Traveller information */}\n              <div ref={textFieldRef}>\n                <Paper className={ticketbook.paperadjustment} elevation={3}>\n                  <Stack direction={\"row\"} spacing={1.5}>\n                    <img src={personblue} alt=\"personblue\" />\n                    <span className={ticketbook.textsize}>Guest Details</span>\n                  </Stack>\n                  {/* <span style={{border:'1px solid red!important'}}> */}\n                  <Grid container spacing={2} mt={1} direction={\"column\"}>\n                    {/* adult */}\n\n                    {Array.from(\n                      { length: guests_details.length },\n                      (_, roomindex) => {\n                        // console.log(room_details.HotelRoomsDetails.find(item=>item.RoomIndex===selectedroom[roomindex]),\"true\")\n                        return (\n                          <>\n                            {/* <span > */}\n                            <h4\n                              style={{\n                                marginLeft: \"1rem\",\n                                color: styles.app_color,\n                                marginTop: `${roomindex === 0 ? 0 : 1}rem`,\n                              }}\n                            >\n                              Room{roomindex + 1}\n                            </h4>\n                            {/* {console.log(room_details.HotelRoomsDetails.find(item=>item.RoomIndex===selectedroom[roomindex]).RequireAllPaxDetails,\"paxdetails\")} */}\n                            {Array.from(\n                              { length: guests_details[roomindex].NoOfAdults },\n                              (_, index) => {\n                                return (\n                                  <>\n                                    <Grid\n                                      item\n                                      container\n                                      direction=\"column\"\n                                      spacing={1}\n                                    >\n                                      <Grid item container spacing={1}>\n                                        <Grid item mt={0.4}>\n                                          <img\n                                            src={traveller}\n                                            alt=\"traveller\"\n                                          />\n                                        </Grid>\n                                        <Grid item sx={{ fontWeight: \"600\" }}>\n                                          Adult\n                                        </Grid>\n                                      </Grid>\n\n                                      <Grid item container spacing={2}>\n                                        <Grid item md={4} xs={12}>\n                                          <ToggleButtonGroup\n                                            value={\n                                              persons[roomindex]?.adult_state[\n                                                index\n                                              ]?.title\n                                            }\n                                            exclusive\n                                            onChange={titlechange(\n                                              2,\n                                              index,\n                                              roomindex\n                                            )}\n                                            size=\"small\"\n                                          >\n                                            <ToggleButton\n                                              disableRipple\n                                              value={1}\n                                              sx={{\n                                                // padding: \"0.3rem 1rem\",\n                                                // background: \"#EEF7FD\",\n                                                // color: styles.app_color,\n                                                // border: \"none\",\n                                                // borderRadius: \"0.5rem!important\",\n                                                // width:'4rem'\n                                                padding: \"0.3rem 1rem\",\n                                                background: \"#EEF7FD\",\n                                                color: styles.app_color,\n                                                border: \"none\",\n                                                borderRadius:\n                                                  \"0.5rem!important\",\n                                                width: \"4rem\",\n                                                textTransform: \"none\",\n                                                \"@media (min-width:900px) and (max-width:1300px)\":\n                                                  {\n                                                    width: \"fit-content\",\n                                                    padding: \"0rem 0.5rem\",\n                                                  },\n                                                \"@media (max-width:367px)\": {\n                                                  width: \"fit-content\",\n                                                  padding:\n                                                    \"0rem 0.5rem !important\",\n                                                  marginLeft:\n                                                    \"0.5rem!important\",\n                                                },\n                                              }}\n                                            >\n                                              MR\n                                            </ToggleButton>\n                                            <ToggleButton\n                                              disableRipple\n                                              value={2}\n                                              className={ticketbook.titlebtns}\n                                            >\n                                              MRS\n                                            </ToggleButton>\n                                            <ToggleButton\n                                              value={3}\n                                              disableRipple\n                                              className={ticketbook.titlebtns}\n                                            >\n                                              MSTR\n                                            </ToggleButton>\n                                            <ToggleButton\n                                              value={4}\n                                              disableRipple\n                                              className={ticketbook.titlebtns}\n                                            >\n                                              Ms\n                                            </ToggleButton>\n                                          </ToggleButtonGroup>\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                          {/* {console.log(persons[roomindex]?.adult_state[index],\"error\")} */}\n                                          <TextField\n                                            className={classes.travelerinfo}\n                                            label=\"*First Name\"\n                                            fullWidth\n                                            size={\"small\"}\n                                            name=\"first_name\"\n                                            // error={adult_state[index].f_name_err}\n                                            // helperText={adult_state[index].f_name_err ? 'Firstname shouldnt be empty' : ''}\n                                            onChange={(e) =>\n                                              handletravellersinput(\n                                                e,\n                                                index,\n                                                2,\n                                                roomindex\n                                              )\n                                            }\n                                            value={\n                                              persons[roomindex]?.adult_state[\n                                                index\n                                              ]?.first_name\n                                            }\n                                            InputLabelProps={{\n                                              style: {\n                                                color: persons[roomindex]\n                                                  ?.adult_state[index]\n                                                  ?.f_name_err\n                                                  ? \"red\"\n                                                  : \"#8F9098\",\n                                                fontWeight: \"500\",\n                                              },\n                                            }}\n                                            InputProps={{\n                                              startAdornment: (\n                                                <InputAdornment position=\"start\">\n                                                  <img\n                                                    src={person}\n                                                    alt=\"personn\"\n                                                  />\n                                                </InputAdornment>\n                                              ),\n                                            }}\n                                          />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                          <TextField\n                                            className={classes.travelerinfo}\n                                            label=\"*Last Name\"\n                                            fullWidth\n                                            name=\"last_name\"\n                                            onChange={(e) =>\n                                              handletravellersinput(\n                                                e,\n                                                index,\n                                                2,\n                                                roomindex\n                                              )\n                                            }\n                                            value={\n                                              persons[roomindex]?.adult_state[\n                                                index\n                                              ]?.last_name\n                                            }\n                                            // error={adult_state[index].l_name_err}\n                                            // helperText={adult_state[index].l_name_err ? 'Lastname shouldnt be empty' : ''}\n                                            InputLabelProps={{\n                                              style: {\n                                                color: persons[roomindex]\n                                                  ?.adult_state[index]\n                                                  ?.l_name_err\n                                                  ? \"red\"\n                                                  : \"#8F9098\",\n                                                fontWeight: \"500\",\n                                              },\n                                            }}\n                                            InputProps={{\n                                              startAdornment: (\n                                                <InputAdornment position=\"start\">\n                                                  <img\n                                                    src={person}\n                                                    alt=\"personn\"\n                                                  />\n                                                </InputAdornment>\n                                              ),\n                                            }}\n                                            size=\"small\"\n                                          />\n                                        </Grid>\n                                        {room_details.HotelRoomsDetails.find(\n                                          (item) =>\n                                            item.RoomIndex ===\n                                              selectedroom[roomindex] \n                                              &&\n                                            item.CategoryId ===\n                                              category_ids\n                                        )?.RequireAllPaxDetails && (\n                                          // true\n                                          <>\n                                            {/* <Grid item md={4}>\n                                       \n                                         <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                 <MobileDatePicker\n                                 inputFormat=\"MM/dd/yyyy\"\n                                //  disabled={disableCalendar}\n                                 sx={{\n                                    \"& .MuiPickersToolbar-penIconButton\": {\n                                     display: \"none\",\n                                    },\n                                 }}\n                                 closeOnSelect\n                                 disableFuture\n                                //  inputRef={busDateSelectRef}\n                                \n                                 label=\"Date\"\n                                 value={persons[roomindex]?.adult_state[index]?.dob}\n                                  // error={adult_state[index].dob_err}\n                                  // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                  onChange={(newvalue) =>\n                                    setPersons((prevdata)=>{\n                                      const updatedpersons=[...prevdata];\n                                      updatedpersons[roomindex].adult_state[index].dob=newvalue;\n                                    return updatedpersons;\n                                    })\n                                  }\n                                 renderInput={(params) => (\n                                    <TextField\n                                     id=\"dateInputTag\"\n                                     sx={{ minWidth: \"90px\" }}\n                                     // size=\"small\"\n                                     {...params}\n                                     fullWidth\n                                     autoComplete=\"off\"\n                                     name=\"dob\"\n                                     size=\"small\"\n                                     label={\n                                        <span style={{ paddingRight: \"0.5rem\" }}>\n                                         *Date of Birth\n                                        </span>\n                                     }\n                                     // value=\"\"\n                                     className={classes.travelerinfo}\n                                     InputLabelProps={{\n                                      style: {\n                                        color:persons[roomindex]?.adult_state[index]?.dob_err?\"red\": \"#8F9098\",\n                                        fontWeight: \"500\",\n                                      },\n                                    }}\n                                     InputProps={{\n                                        readOnly: true,\n                                        startAdornment: (\n                                         <InputAdornment position=\"start\">\n                                            <img\n                                             src={calender}\n                                             alt=\"caleder\"\n                                             width=\"27\"\n                                             height=\"100\"\n                                            />\n                                         </InputAdornment>\n                                        ),\n                                   \n                                     }}\n                                    />\n                                 )}\n                                />\n                                        </LocalizationProvider>\n                                      </Grid> */}\n                                            {/* <Grid item md={4}>\n                                        <ToggleButtonGroup\n                                          value={persons[roomindex]?.adult_state[index]?.gender}\n                                          exclusive\n                                          onChange={handleGender(2, index,roomindex)}\n                                          size=\"large\"\n                                        >\n                                          <ToggleButton\n                                            value={0}\n                                            sx={{\n                                              // padding: \"0rem 0.5rem!important\",\n                                              width:'80px',\n                                              height:'30px',\n                                              background: \"#EEF7FD\",\n                                              color: styles.app_color,\n                                              border: \"none\",\n                                              borderRadius: \"0.5rem!important\",\n                                              textTransform:'none',\n                                              fontSize:'14px'\n                                            }}\n                                          >\n                                            <Stack direction={\"row\"} spacing={1}>\n                                              <span style={{ paddingTop: \"2px\" }}>\n                                                <svg\n                                                  width=\"16\"\n                                                  height=\"16\"\n                                                  viewBox=\"0 0 16 16\"\n                                                  fill=\"none\"\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                >\n                                                  <path\n                                                    d=\"M9.84502 5.36709C10.8257 4.38546 11.7984 3.41181 12.7799 2.42934C12.7282 2.42682 12.6736 2.42219 12.6194 2.42219C11.8749 2.42177 11.1303 2.42513 10.3862 2.42051C9.88116 2.41757 9.52443 2.05996 9.53998 1.58596C9.55258 1.19515 9.83704 0.876205 10.2236 0.821576C10.2858 0.812752 10.3488 0.807289 10.4114 0.807289C11.8476 0.806869 13.2841 0.806448 14.7207 0.80855C14.8194 0.80855 14.9211 0.817374 15.0161 0.842587C15.3526 0.932514 15.5653 1.21448 15.5657 1.57713C15.5678 3.05546 15.5678 4.5338 15.5648 6.01213C15.564 6.47479 15.2896 6.79794 14.8631 6.85971C14.4846 6.91476 14.1089 6.68154 13.9967 6.31007C13.964 6.20165 13.9539 6.08315 13.953 5.96927C13.9493 5.23514 13.9509 4.50144 13.9509 3.76732C13.9509 3.71101 13.9509 3.65428 13.9509 3.61226C12.9804 4.58506 12.0098 5.55829 11.0265 6.54413C12.1266 8.07583 12.4581 9.79705 11.9253 11.6586C11.5371 13.0155 10.7307 14.0829 9.55258 14.8599C7.18701 16.4206 3.99832 16.0155 2.07057 13.9169C0.178951 11.8574 0.0541595 8.66288 1.79451 6.43025C2.76511 5.18514 4.05168 4.46068 5.61556 4.26528C7.1702 4.07114 8.58702 4.45984 9.84502 5.36709Z\"\n                                                    fill=\"currentColor\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                              <span>Male</span>\n                                            </Stack>\n                                          </ToggleButton>\n                                          <ToggleButton\n                                            value={1}\n                                            className={ticketbook.genderbtns}\n                                            sx={{textTransform:'none', textTransform:'none',}}\n                                          >\n                                            <Stack direction={\"row\"} spacing={1}>\n                                              <span style={{ paddingTop: \"2px\" }}>\n                                                <svg\n                                                  width=\"12\"\n                                                  height=\"16\"\n                                                  viewBox=\"0 0 12 16\"\n                                                  fill=\"none\"\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                >\n                                                  <path\n                                                    d=\"M5.64408 15.8071C5.53857 15.7601 5.42449 15.726 5.32871 15.6638C5.07875 15.5014 4.95338 15.2607 4.94715 14.9624C4.94208 14.7049 4.94598 14.4469 4.94598 14.1698C4.69602 14.1698 4.45929 14.1784 4.22335 14.1678C3.86982 14.1518 3.61519 13.9721 3.48281 13.6445C3.35316 13.3232 3.40766 13.0202 3.63738 12.7588C3.80791 12.565 4.02984 12.4797 4.28603 12.4805C4.4994 12.4809 4.71237 12.4805 4.93547 12.4805C4.93547 12.1309 4.93547 11.7912 4.93547 11.4452C3.31266 11.1368 2.0504 10.2894 1.20123 8.85758C0.55647 7.77024 0.34116 6.58701 0.531552 5.33724C0.929076 2.73358 3.17639 0.792188 5.81812 0.807061C8.3956 0.821543 10.6293 2.7238 11.0338 5.248C11.2678 6.70874 10.9723 8.05558 10.1169 9.26034C9.26151 10.4643 8.0884 11.179 6.63925 11.4432C6.63925 11.7857 6.63925 12.1212 6.63925 12.4801C6.86507 12.4801 7.08583 12.4766 7.30698 12.4809C7.71775 12.4887 8.03156 12.7314 8.13396 13.1138C8.27062 13.6253 7.89723 14.1459 7.37123 14.1674C7.13411 14.1772 6.89622 14.169 6.63419 14.169C6.63419 14.2645 6.63419 14.3498 6.63419 14.4352C6.63419 14.6109 6.63692 14.7867 6.63341 14.9624C6.62524 15.3511 6.38695 15.6626 6.01629 15.7761C5.98904 15.7844 5.96295 15.7969 5.93648 15.8071C5.83836 15.8071 5.74142 15.8071 5.64408 15.8071Z\"\n                                                    fill=\"currentColor\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                              <span>Female</span>\n                                            </Stack>\n                                          </ToggleButton>\n                                          <ToggleButton\n                                            value={2}\n                                            className={ticketbook.genderbtns}\n                                            sx={{textTransform:'none',fontSize:'14px'}}\n                                          >\n                                            <Stack direction={\"row\"} spacing={1}>\n                                              <span style={{ paddingTop: \"2px\" }}>\n                                                <svg\n                                                  width=\"19\"\n                                                  height=\"19\"\n                                                  viewBox=\"0 0 19 19\"\n                                                  fill=\"none\"\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                >\n                                                  <path\n                                                    fill-rule=\"evenodd\"\n                                                    clip-rule=\"evenodd\"\n                                                    d=\"M10.7435 6.7082C10.4528 6.99908 10.2011 7.25096 10.0165 7.43568C8.88726 6.62128 7.61544 6.27235 6.21991 6.44663C4.81608 6.62203 3.66118 7.27235 2.78992 8.39003C1.22768 10.3942 1.3397 13.2617 3.03772 15.1105C4.76818 16.9943 7.63053 17.3579 9.754 15.9569C10.8116 15.2595 11.5354 14.3013 11.8839 13.0833C12.3621 11.4123 12.0645 9.8672 11.0771 8.49225C11.262 8.30686 11.5138 8.05459 11.8044 7.76356C11.8357 7.79468 11.8596 7.8185 11.8746 7.83351C11.9364 7.89534 11.9929 7.95317 12.0472 8.0088C12.1528 8.1169 12.2502 8.21667 12.363 8.32128C12.742 8.67289 13.3317 8.60175 13.5615 8.18213C13.7331 7.8683 13.6692 7.49634 13.3889 7.20613C13.2866 7.10008 13.177 6.99158 13.0681 6.88379C13.0165 6.83271 12.9651 6.78179 12.9147 6.73137C12.9054 6.72211 12.892 6.70867 12.8749 6.69157C13.0393 6.52693 13.2055 6.36054 13.3703 6.19553C14.1189 5.44601 14.8391 4.72487 15.2378 4.32527V4.46446C15.2378 4.61957 15.2377 4.77466 15.2377 4.92974C15.2374 5.43351 15.2371 5.93718 15.2397 6.44106C15.2405 6.54328 15.2495 6.64966 15.2789 6.74698C15.3796 7.08044 15.7168 7.28979 16.0567 7.24037C16.4395 7.18492 16.6858 6.89485 16.6865 6.47954C16.6892 5.1525 16.6892 3.82547 16.6873 2.49843C16.6869 2.1729 16.4961 1.91979 16.194 1.83906C16.1087 1.81643 16.0174 1.80851 15.9288 1.80851C14.6393 1.80662 13.3497 1.807 12.0605 1.80738C12.0043 1.80738 11.9478 1.81228 11.8919 1.8202C11.5449 1.86924 11.2896 2.15554 11.2783 2.50635C11.2643 2.93185 11.5846 3.25286 12.0379 3.2555C12.4912 3.25831 12.9446 3.25783 13.3981 3.25734C13.6129 3.25711 13.8277 3.25688 14.0426 3.25701C14.0769 3.25701 14.1113 3.25907 14.145 3.26108C14.159 3.26192 14.173 3.26275 14.1867 3.26342C13.7462 3.70434 12.9238 4.52702 12.1015 5.34963C12.0065 5.44464 11.9116 5.53965 11.8172 5.63407C11.5605 5.37741 11.346 5.16285 11.2914 5.10805C11.114 4.92965 10.9057 4.82969 10.6643 4.83425C10.3388 4.84069 10.1086 4.99513 9.99471 5.28914C9.87869 5.58901 9.94148 5.87987 10.1768 6.13556C10.2362 6.2 10.4683 6.43338 10.7435 6.7082Z\"\n                                                    fill=\"currentColor\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                              <span>Other</span>\n                                            </Stack>\n                                          </ToggleButton>\n                                        </ToggleButtonGroup>\n                                      </Grid> */}\n                                            {room_details.HotelRoomsDetails.find(\n                                              (item) =>\n                                                item.RoomIndex ===\n                                                selectedroom[roomindex]\n                                            ).IsPassportMandatory && (\n                                              <>\n                                                <Grid item md={4} xs={12}>\n                                                  <TextField\n                                                    className={\n                                                      classes.travelerinfo\n                                                    }\n                                                    label=\"*Passport No\"\n                                                    fullWidth\n                                                    name=\"passport_num\"\n                                                    onChange={(e) =>\n                                                      handletravellersinput(\n                                                        e,\n                                                        index,\n                                                        2,\n                                                        roomindex\n                                                      )\n                                                    }\n                                                    value={\n                                                      persons[roomindex]\n                                                        ?.adult_state[index]\n                                                        ?.passport_num\n                                                    }\n                                                    // error={adult_state[index].p_num_err}\n                                                    // helperText={adult_state[index].p_num_err ? 'Passport_num shouldnt be empty' : ''}\n                                                    InputLabelProps={{\n                                                      style: {\n                                                        color: persons[\n                                                          roomindex\n                                                        ]?.adult_state[index]\n                                                          ?.p_num_err\n                                                          ? \"red\"\n                                                          : \"#8F9098\",\n                                                        fontWeight: \"500\",\n                                                      },\n                                                    }}\n                                                    InputProps={{\n                                                      startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                          <img\n                                                            src={passport}\n                                                            alt=\"passport\"\n                                                          />\n                                                        </InputAdornment>\n                                                      ),\n                                                    }}\n                                                    size=\"small\"\n                                                  />\n                                                </Grid>\n                                                <Grid item md={4} xs={12}>\n                                                  <LocalizationProvider\n                                                    dateAdapter={AdapterDateFns}\n                                                  >\n                                                    <MobileDatePicker\n                                                      inputFormat=\"MM/dd/yyyy\"\n                                                      //  disabled={disableCalendar}\n                                                      sx={{\n                                                        \"& .MuiPickersToolbar-penIconButton\":\n                                                          {\n                                                            display: \"none\",\n                                                          },\n                                                      }}\n                                                      closeOnSelect\n                                                      disablePast\n                                                      //  inputRef={busDateSelectRef}\n\n                                                      label=\"passport_exp\"\n                                                      value={\n                                                        persons[roomindex]\n                                                          ?.adult_state[index]\n                                                          ?.passport_exp\n                                                      } // error={adult_state[index].dob_err}\n                                                      // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                                      onChange={(newvalue) =>\n                                                        setPersons(\n                                                          (prevdata) => {\n                                                            const updatedpersons =\n                                                              [...prevdata];\n                                                            updatedpersons[\n                                                              roomindex\n                                                            ].adult_state[\n                                                              index\n                                                            ].passport_exp =\n                                                              newvalue;\n                                                            return updatedpersons;\n                                                          }\n                                                        )\n                                                      }\n                                                      renderInput={(params) => (\n                                                        <TextField\n                                                          id=\"dateInputTag\"\n                                                          sx={{\n                                                            minWidth: \"90px\",\n                                                          }}\n                                                          // size=\"small\"\n                                                          {...params}\n                                                          fullWidth\n                                                          autoComplete=\"off\"\n                                                          name=\"dob\"\n                                                          size=\"small\"\n                                                          label={\n                                                            <span\n                                                              style={{\n                                                                paddingRight:\n                                                                  \"0.5rem\",\n                                                              }}\n                                                            >\n                                                              * Passport Expiry\n                                                            </span>\n                                                          }\n                                                          // value=\"\"\n                                                          className={\n                                                            classes.travelerinfo\n                                                          }\n                                                          InputLabelProps={{\n                                                            style: {\n                                                              color: persons[\n                                                                roomindex\n                                                              ]?.adult_state[\n                                                                index\n                                                              ]?.p_exp_err\n                                                                ? \"red\"\n                                                                : \"#8F9098\",\n                                                              fontWeight: \"500\",\n                                                            },\n                                                          }}\n                                                          InputProps={{\n                                                            readOnly: true,\n                                                            startAdornment: (\n                                                              <InputAdornment position=\"start\">\n                                                                <img\n                                                                  src={passport}\n                                                                  alt=\"caleder\"\n                                                                />\n                                                              </InputAdornment>\n                                                            ),\n                                                          }}\n                                                        />\n                                                      )}\n                                                    />\n                                                  </LocalizationProvider>\n                                                </Grid>\n                                                <Grid item md={4} xs={12}>\n                                                  <LocalizationProvider\n                                                    dateAdapter={AdapterDateFns}\n                                                  >\n                                                    <MobileDatePicker\n                                                      inputFormat=\"MM/dd/yyyy\"\n                                                      //  disabled={disableCalendar}\n                                                      sx={{\n                                                        \"& .MuiPickersToolbar-penIconButton\":\n                                                          {\n                                                            display: \"none\",\n                                                          },\n                                                      }}\n                                                      closeOnSelect\n                                                      disableFuture\n                                                      //  inputRef={busDateSelectRef}\n\n                                                      label=\"passport_issue\"\n                                                      value={\n                                                        persons[roomindex]\n                                                          ?.adult_state[index]\n                                                          ?.passport_issue\n                                                      } // error={adult_state[index].dob_err}\n                                                      // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                                      onChange={(newvalue) =>\n                                                        setPersons(\n                                                          (prevdata) => {\n                                                            const updatedpersons =\n                                                              [...prevdata];\n                                                            updatedpersons[\n                                                              roomindex\n                                                            ].adult_state[\n                                                              index\n                                                            ].passport_issue =\n                                                              newvalue;\n                                                            return updatedpersons;\n                                                          }\n                                                        )\n                                                      }\n                                                      renderInput={(params) => (\n                                                        <TextField\n                                                          id=\"dateInputTag\"\n                                                          sx={{\n                                                            minWidth: \"90px\",\n                                                          }}\n                                                          // size=\"small\"\n                                                          {...params}\n                                                          fullWidth\n                                                          autoComplete=\"off\"\n                                                          name=\"dob\"\n                                                          size=\"small\"\n                                                          label={\n                                                            <span\n                                                              style={{\n                                                                paddingRight:\n                                                                  \"0.5rem\",\n                                                              }}\n                                                            >\n                                                              * Passport Issue\n                                                              Date\n                                                            </span>\n                                                          }\n                                                          // value=\"\"\n                                                          className={\n                                                            classes.travelerinfo\n                                                          }\n                                                          InputLabelProps={{\n                                                            style: {\n                                                              color: persons[\n                                                                roomindex\n                                                              ]?.adult_state[\n                                                                index\n                                                              ]\n                                                                ?.passport_issue_err\n                                                                ? \"red\"\n                                                                : \"#8F9098\",\n                                                              fontWeight: \"500\",\n                                                            },\n                                                          }}\n                                                          InputProps={{\n                                                            readOnly: true,\n                                                            startAdornment: (\n                                                              <InputAdornment position=\"start\">\n                                                                <img\n                                                                  src={passport}\n                                                                  alt=\"caleder\"\n                                                                />\n                                                              </InputAdornment>\n                                                            ),\n                                                          }}\n                                                        />\n                                                      )}\n                                                    />\n                                                  </LocalizationProvider>\n                                                </Grid>\n                                                {/* <Grid item md={4} xs={12}>\n                                                  <TextField\n                                                    className={\n                                                      classes.travelerinfo\n                                                    }\n                                                    label=\"* Passport Issue Country\"\n                                                    fullWidth\n                                                    name=\"passport_issue_country\"\n                                                    onChange={(e) =>\n                                                      handletravellersinput(\n                                                        e,\n                                                        index,\n                                                        2,\n                                                        roomindex\n                                                      )\n                                                    }\n                                                    value={\n                                                      persons[roomindex]\n                                                        ?.adult_state[index]\n                                                        ?.passport_issue_country\n                                                    }\n                                                    // error={adult_state[index].p_num_err}\n                                                    // helperText={adult_state[index].p_num_err ? 'Passport_num shouldnt be empty' : ''}\n                                                    InputLabelProps={{\n                                                      style: {\n                                                        color: persons[\n                                                          roomindex\n                                                        ]?.adult_state[index]\n                                                          ?.passport_issue_country_err\n                                                          ? \"red\"\n                                                          : \"#8F9098\",\n                                                        fontWeight: \"500\",\n                                                      },\n                                                    }}\n                                                    InputProps={{\n                                                      startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                          <img\n                                                            src={passport}\n                                                            alt=\"passport\"\n                                                          />\n                                                        </InputAdornment>\n                                                      ),\n                                                    }}\n                                                    size=\"small\"\n                                                  />\n                                                </Grid> */}\n                                              </>\n                                            )}\n                                            {room_details.HotelRoomsDetails.find(\n                                              (item) =>\n                                                item.RoomIndex ===\n                                                selectedroom[roomindex]\n                                            ).IsPANMandatory && (\n                                              <Grid item md={4} xs={12}>\n                                                <TextField\n                                                  className={\n                                                    classes.travelerinfo\n                                                  }\n                                                  label=\"Pan Card No \"\n                                                  fullWidth\n                                                  name=\"pan_no\"\n                                                  onChange={(e) =>\n                                                    handletravellersinput(\n                                                      e,\n                                                      index,\n                                                      2,\n                                                      roomindex\n                                                    )\n                                                  }\n                                                  value={\n                                                    persons[roomindex]\n                                                      ?.adult_state[index]\n                                                      ?.pan_no\n                                                  }\n                                                  // error={adult_state[index].p_num_err}\n                                                  // helperText={adult_state[index].p_num_err ? 'Passport_num shouldnt be empty' : ''}\n                                                  InputLabelProps={{\n                                                    style: {\n                                                      color: persons[roomindex]\n                                                        ?.adult_state[index]\n                                                        ?.pan_no_err\n                                                        ? \"red\"\n                                                        : \"#8F9098\",\n                                                      fontWeight: \"500\",\n                                                    },\n                                                  }}\n                                                  InputProps={{\n                                                    startAdornment: (\n                                                      <InputAdornment position=\"start\">\n                                                        <img\n                                                          src={pan_card}\n                                                          alt=\"passport\"\n                                                        />\n                                                      </InputAdornment>\n                                                    ),\n                                                  }}\n                                                  size=\"small\"\n                                                />\n                                              </Grid>\n                                            )}\n                                          </>\n                                        )}\n                                      </Grid>\n\n                                      <Grid\n                                        item\n                                        container\n                                        columnGap={2}\n                                        rowGap={2}\n                                      >\n                                        <Grid item md={\"auto\"}>\n                                          <Button\n                                            onClick={() =>\n                                              Travellersdialogopen(\n                                                index,\n                                                2,\n                                                roomindex\n                                              )\n                                            }\n                                            variant=\"contained\"\n                                            disableRipple\n                                            className={\n                                              ticketbook.addtravellerbtn\n                                            }\n                                          >\n                                            Existence Guest\n                                          </Button>\n                                        </Grid>\n                                        {/* <Grid item md={\"auto\"}>\n                                          <Button\n                                            variant={\"outlined\"}\n                                            className={\n                                              ticketbook.savedetailsbtn\n                                            }\n                                          >\n                                            Save Details\n                                          </Button>\n                                        </Grid> */}\n                                      </Grid>\n                                    </Grid>\n                                  </>\n                                );\n                              }\n                            )}\n                            {Array.from(\n                              { length: guests_details[roomindex].NoOfChild },\n                              (_, index) => {\n                                return (\n                                  <>\n                                    <Grid\n                                      item\n                                      container\n                                      direction=\"column\"\n                                      spacing={2}\n                                    >\n                                      <Grid item container spacing={1}>\n                                        <Grid item mt={0.4}>\n                                          <img\n                                            src={traveller}\n                                            alt=\"traveller\"\n                                          />\n                                        </Grid>\n                                        <Grid item sx={{ fontWeight: \"600\" }}>\n                                          Child\n                                        </Grid>\n                                      </Grid>\n\n                                      <Grid item container spacing={3}>\n                                        <Grid item md={4} xs={12}>\n                                          {/* {console.log(persons[roomindex]?.child_state,\"title\")} */}\n                                          <ToggleButtonGroup\n                                            value={\n                                              persons[roomindex]?.child_state[\n                                                index\n                                              ]?.title\n                                            }\n                                            exclusive\n                                            onChange={titlechange(\n                                              1,\n                                              index,\n                                              roomindex\n                                            )}\n                                            size=\"small\"\n                                          >\n                                            <ToggleButton\n                                              disableRipple\n                                              value={1}\n                                              sx={{\n                                                // padding: \"0.3rem 1rem\",\n                                                // background: \"#EEF7FD\",\n                                                // color: styles.app_color,\n                                                // border: \"none\",\n                                                // borderRadius: \"0.5rem!important\",\n                                                // width:'4rem'\n                                                padding: \"0.3rem 1rem\",\n                                                background: \"#EEF7FD\",\n                                                color: styles.app_color,\n                                                border: \"none\",\n                                                borderRadius:\n                                                  \"0.5rem!important\",\n                                                width: \"4rem\",\n                                                textTransform: \"none\",\n                                                \"@media (min-width:900px) and (max-width:1300px)\":\n                                                  {\n                                                    width: \"fit-content\",\n                                                    padding: \"0rem 0.5rem\",\n                                                  },\n                                                \"@media (max-width:367px)\": {\n                                                  width: \"fit-content\",\n                                                  padding:\n                                                    \"0rem 0.5rem !important\",\n                                                  marginLeft:\n                                                    \"0.5rem!important\",\n                                                },\n                                              }}\n                                            >\n                                              MR\n                                            </ToggleButton>\n                                            <ToggleButton\n                                              disableRipple\n                                              value={2}\n                                              className={ticketbook.titlebtns}\n                                            >\n                                              MRS\n                                            </ToggleButton>\n                                            <ToggleButton\n                                              value={3}\n                                              disableRipple\n                                              className={ticketbook.titlebtns}\n                                            >\n                                              MSTR\n                                            </ToggleButton>\n                                            <ToggleButton\n                                              value={4}\n                                              disableRipple\n                                              className={ticketbook.titlebtns}\n                                            >\n                                              Ms\n                                            </ToggleButton>\n                                          </ToggleButtonGroup>\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                          {/* {console.log(persons[roomindex]?.child_state[index]?.first_name,\"first name\")} */}\n                                          <TextField\n                                            className={classes.travelerinfo}\n                                            label=\"*First Name\"\n                                            name=\"first_name\"\n                                            onChange={(e) =>\n                                              handletravellersinput(\n                                                e,\n                                                index,\n                                                1,\n                                                roomindex\n                                              )\n                                            }\n                                            value={\n                                              persons[roomindex]?.child_state[\n                                                index\n                                              ]?.first_name\n                                            }\n                                            fullWidth\n                                            size={\"small\"}\n                                            InputLabelProps={{\n                                              style: {\n                                                color: persons[roomindex]\n                                                  ?.child_state[index]\n                                                  ?.f_name_err\n                                                  ? \"red\"\n                                                  : \"#8F9098\",\n                                                fontWeight: \"500\",\n                                              },\n                                            }}\n                                            InputProps={{\n                                              startAdornment: (\n                                                <InputAdornment position=\"start\">\n                                                  <img\n                                                    src={person}\n                                                    alt=\"personn\"\n                                                  />\n                                                </InputAdornment>\n                                              ),\n                                            }}\n                                          />\n                                        </Grid>\n                                        <Grid item md={4} xs={12}>\n                                          <TextField\n                                            className={classes.travelerinfo}\n                                            label=\"*Last Name\"\n                                            name=\"last_name\"\n                                            onChange={(e) =>\n                                              handletravellersinput(\n                                                e,\n                                                index,\n                                                1,\n                                                roomindex\n                                              )\n                                            }\n                                            value={\n                                              persons[roomindex]?.child_state[\n                                                index\n                                              ]?.last_name\n                                            }\n                                            fullWidth\n                                            InputLabelProps={{\n                                              style: {\n                                                color: persons[roomindex]\n                                                  ?.child_state[index]\n                                                  ?.l_name_err\n                                                  ? \"red\"\n                                                  : \"#8F9098\",\n                                                fontWeight: \"500\",\n                                              },\n                                            }}\n                                            InputProps={{\n                                              startAdornment: (\n                                                <InputAdornment position=\"start\">\n                                                  <img\n                                                    src={person}\n                                                    alt=\"personn\"\n                                                  />\n                                                </InputAdornment>\n                                              ),\n                                            }}\n                                            size=\"small\"\n                                          />\n                                        </Grid>\n                                        {room_details.HotelRoomsDetails.find(\n                                          (item) =>\n                                            item.RoomIndex ===\n                                            selectedroom[roomindex]\n                                        ).RequireAllPaxDetails && (\n                                          <>\n                                            {/* <Grid item md={4} xs={12}>\n                                            <LocalizationProvider\n                                              dateAdapter={AdapterDateFns}\n                                            >\n                                              <MobileDatePicker\n                                                inputFormat=\"MM/dd/yyyy\"\n                                                //  disabled={disableCalendar}\n                                                sx={{\n                                                  \"& .MuiPickersToolbar-penIconButton\":\n                                                    {\n                                                      display: \"none\",\n                                                    },\n                                                }}\n                                                closeOnSelect\n                                                disableFuture\n                                                //  inputRef={busDateSelectRef}\n\n                                                label=\"Date\"\n                                                value={\n                                                  persons[roomindex]\n                                                    ?.child_state[index]?.dob\n                                                }\n                                                // error={adult_state[index].dob_err}\n                                                // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                                onChange={(newvalue) =>\n                                                  setPersons((prevdata) => {\n                                                    const updatedpersons = [\n                                                      ...prevdata,\n                                                    ];\n                                                    updatedpersons[\n                                                      roomindex\n                                                    ].child_state[index].dob =\n                                                      newvalue;\n                                                    return updatedpersons;\n                                                  })\n                                                }\n                                                renderInput={(params) => (\n                                                  <TextField\n                                                    id=\"dateInputTag\"\n                                                    sx={{ minWidth: \"90px\" }}\n                                                    // size=\"small\"\n                                                    {...params}\n                                                    fullWidth\n                                                    autoComplete=\"off\"\n                                                    name=\"dob\"\n                                                    size=\"small\"\n                                                    label={\n                                                      <span\n                                                        style={{\n                                                          paddingRight:\n                                                            \"0.5rem\",\n                                                        }}\n                                                      >\n                                                        *Date of Birth\n                                                      </span>\n                                                    }\n                                                    // value=\"\"\n                                                    className={\n                                                      classes.travelerinfo\n                                                    }\n                                                    InputLabelProps={{\n                                                      style: {\n                                                        color: persons[\n                                                          roomindex\n                                                        ]?.child_state[index]\n                                                          ?.dob_err\n                                                          ? \"red\"\n                                                          : \"#8F9098\",\n                                                        fontWeight: \"500\",\n                                                      },\n                                                    }}\n                                                    InputProps={{\n                                                      readOnly: true,\n                                                      startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                          <img\n                                                            src={calender}\n                                                            alt=\"caleder\"\n                                                            width=\"27\"\n                                                            height=\"100\"\n                                                          />\n                                                        </InputAdornment>\n                                                      ),\n                                                    }}\n                                                  />\n                                                )}\n                                              />\n                                            </LocalizationProvider>\n                                          </Grid> */}\n                                            {/* <Grid item md={4}>\n                                    <ToggleButtonGroup\n                                      value={persons[roomindex]?.child_state[index]?.gender}\n                                      exclusive\n                                      onChange={handleGender(1, index,roomindex)}\n                                      size=\"large\"\n                                    >\n                                      <ToggleButton\n                                        value={0}\n                                        sx={{\n                                          // padding: \"0.3rem 1.5rem\",\n                                          width:'80px',\n                                          height:'30px',\n                                          background: \"#EEF7FD\",\n                                          color: styles.app_color,\n                                          border: \"none\",\n                                          borderRadius: \"0.5rem!important\",\n                                          textTransform:'none',\n                                          fontSize:'14px'\n                                        }}\n                                      >\n                                        <Stack direction={\"row\"} spacing={1}>\n                                          <span style={{ paddingTop: \"2px\" }}>\n                                            <svg\n                                              width=\"16\"\n                                              height=\"16\"\n                                              viewBox=\"0 0 16 16\"\n                                              fill=\"none\"\n                                              xmlns=\"http://www.w3.org/2000/svg\"\n                                            >\n                                              <path\n                                                d=\"M9.84502 5.36709C10.8257 4.38546 11.7984 3.41181 12.7799 2.42934C12.7282 2.42682 12.6736 2.42219 12.6194 2.42219C11.8749 2.42177 11.1303 2.42513 10.3862 2.42051C9.88116 2.41757 9.52443 2.05996 9.53998 1.58596C9.55258 1.19515 9.83704 0.876205 10.2236 0.821576C10.2858 0.812752 10.3488 0.807289 10.4114 0.807289C11.8476 0.806869 13.2841 0.806448 14.7207 0.80855C14.8194 0.80855 14.9211 0.817374 15.0161 0.842587C15.3526 0.932514 15.5653 1.21448 15.5657 1.57713C15.5678 3.05546 15.5678 4.5338 15.5648 6.01213C15.564 6.47479 15.2896 6.79794 14.8631 6.85971C14.4846 6.91476 14.1089 6.68154 13.9967 6.31007C13.964 6.20165 13.9539 6.08315 13.953 5.96927C13.9493 5.23514 13.9509 4.50144 13.9509 3.76732C13.9509 3.71101 13.9509 3.65428 13.9509 3.61226C12.9804 4.58506 12.0098 5.55829 11.0265 6.54413C12.1266 8.07583 12.4581 9.79705 11.9253 11.6586C11.5371 13.0155 10.7307 14.0829 9.55258 14.8599C7.18701 16.4206 3.99832 16.0155 2.07057 13.9169C0.178951 11.8574 0.0541595 8.66288 1.79451 6.43025C2.76511 5.18514 4.05168 4.46068 5.61556 4.26528C7.1702 4.07114 8.58702 4.45984 9.84502 5.36709Z\"\n                                                fill=\"currentColor\"\n                                              />\n                                            </svg>\n                                          </span>\n                                          <span>Male</span>\n                                        </Stack>\n                                      </ToggleButton>\n                                      <ToggleButton\n                                        value={1}\n                                        className={ticketbook.genderbtns}\n                                        sx={{textTransform:'none',fontSize:'14px'}}\n                                      >\n                                        <Stack direction={\"row\"} spacing={1}>\n                                          <span style={{ paddingTop: \"2px\" }}>\n                                            <svg\n                                              width=\"12\"\n                                              height=\"16\"\n                                              viewBox=\"0 0 12 16\"\n                                              fill=\"none\"\n                                              xmlns=\"http://www.w3.org/2000/svg\"\n                                            >\n                                              <path\n                                                d=\"M5.64408 15.8071C5.53857 15.7601 5.42449 15.726 5.32871 15.6638C5.07875 15.5014 4.95338 15.2607 4.94715 14.9624C4.94208 14.7049 4.94598 14.4469 4.94598 14.1698C4.69602 14.1698 4.45929 14.1784 4.22335 14.1678C3.86982 14.1518 3.61519 13.9721 3.48281 13.6445C3.35316 13.3232 3.40766 13.0202 3.63738 12.7588C3.80791 12.565 4.02984 12.4797 4.28603 12.4805C4.4994 12.4809 4.71237 12.4805 4.93547 12.4805C4.93547 12.1309 4.93547 11.7912 4.93547 11.4452C3.31266 11.1368 2.0504 10.2894 1.20123 8.85758C0.55647 7.77024 0.34116 6.58701 0.531552 5.33724C0.929076 2.73358 3.17639 0.792188 5.81812 0.807061C8.3956 0.821543 10.6293 2.7238 11.0338 5.248C11.2678 6.70874 10.9723 8.05558 10.1169 9.26034C9.26151 10.4643 8.0884 11.179 6.63925 11.4432C6.63925 11.7857 6.63925 12.1212 6.63925 12.4801C6.86507 12.4801 7.08583 12.4766 7.30698 12.4809C7.71775 12.4887 8.03156 12.7314 8.13396 13.1138C8.27062 13.6253 7.89723 14.1459 7.37123 14.1674C7.13411 14.1772 6.89622 14.169 6.63419 14.169C6.63419 14.2645 6.63419 14.3498 6.63419 14.4352C6.63419 14.6109 6.63692 14.7867 6.63341 14.9624C6.62524 15.3511 6.38695 15.6626 6.01629 15.7761C5.98904 15.7844 5.96295 15.7969 5.93648 15.8071C5.83836 15.8071 5.74142 15.8071 5.64408 15.8071Z\"\n                                                fill=\"currentColor\"\n                                              />\n                                            </svg>\n                                          </span>\n                                          <span>Female</span>\n                                        </Stack>\n                                      </ToggleButton>\n                                      <ToggleButton\n                                        value={2}\n                                        className={ticketbook.genderbtns}\n                                        sx={{textTransform:'none',fontSize:'14px'}}\n                                      >\n                                        <Stack direction={\"row\"} spacing={1}>\n                                          <span style={{ paddingTop: \"2px\" }}>\n                                            <svg\n                                              width=\"19\"\n                                              height=\"19\"\n                                              viewBox=\"0 0 19 19\"\n                                              fill=\"none\"\n                                              xmlns=\"http://www.w3.org/2000/svg\"\n                                            >\n                                              <path\n                                                fill-rule=\"evenodd\"\n                                                clip-rule=\"evenodd\"\n                                                d=\"M10.7435 6.7082C10.4528 6.99908 10.2011 7.25096 10.0165 7.43568C8.88726 6.62128 7.61544 6.27235 6.21991 6.44663C4.81608 6.62203 3.66118 7.27235 2.78992 8.39003C1.22768 10.3942 1.3397 13.2617 3.03772 15.1105C4.76818 16.9943 7.63053 17.3579 9.754 15.9569C10.8116 15.2595 11.5354 14.3013 11.8839 13.0833C12.3621 11.4123 12.0645 9.8672 11.0771 8.49225C11.262 8.30686 11.5138 8.05459 11.8044 7.76356C11.8357 7.79468 11.8596 7.8185 11.8746 7.83351C11.9364 7.89534 11.9929 7.95317 12.0472 8.0088C12.1528 8.1169 12.2502 8.21667 12.363 8.32128C12.742 8.67289 13.3317 8.60175 13.5615 8.18213C13.7331 7.8683 13.6692 7.49634 13.3889 7.20613C13.2866 7.10008 13.177 6.99158 13.0681 6.88379C13.0165 6.83271 12.9651 6.78179 12.9147 6.73137C12.9054 6.72211 12.892 6.70867 12.8749 6.69157C13.0393 6.52693 13.2055 6.36054 13.3703 6.19553C14.1189 5.44601 14.8391 4.72487 15.2378 4.32527V4.46446C15.2378 4.61957 15.2377 4.77466 15.2377 4.92974C15.2374 5.43351 15.2371 5.93718 15.2397 6.44106C15.2405 6.54328 15.2495 6.64966 15.2789 6.74698C15.3796 7.08044 15.7168 7.28979 16.0567 7.24037C16.4395 7.18492 16.6858 6.89485 16.6865 6.47954C16.6892 5.1525 16.6892 3.82547 16.6873 2.49843C16.6869 2.1729 16.4961 1.91979 16.194 1.83906C16.1087 1.81643 16.0174 1.80851 15.9288 1.80851C14.6393 1.80662 13.3497 1.807 12.0605 1.80738C12.0043 1.80738 11.9478 1.81228 11.8919 1.8202C11.5449 1.86924 11.2896 2.15554 11.2783 2.50635C11.2643 2.93185 11.5846 3.25286 12.0379 3.2555C12.4912 3.25831 12.9446 3.25783 13.3981 3.25734C13.6129 3.25711 13.8277 3.25688 14.0426 3.25701C14.0769 3.25701 14.1113 3.25907 14.145 3.26108C14.159 3.26192 14.173 3.26275 14.1867 3.26342C13.7462 3.70434 12.9238 4.52702 12.1015 5.34963C12.0065 5.44464 11.9116 5.53965 11.8172 5.63407C11.5605 5.37741 11.346 5.16285 11.2914 5.10805C11.114 4.92965 10.9057 4.82969 10.6643 4.83425C10.3388 4.84069 10.1086 4.99513 9.99471 5.28914C9.87869 5.58901 9.94148 5.87987 10.1768 6.13556C10.2362 6.2 10.4683 6.43338 10.7435 6.7082Z\"\n                                                fill=\"currentColor\"\n                                              />\n                                            </svg>\n                                          </span>\n                                          <span>Other</span>\n                                        </Stack>\n                                      </ToggleButton>\n                                    </ToggleButtonGroup>\n                                  </Grid>  */}\n                                            {room_details.HotelRoomsDetails.find(\n                                              (item) =>\n                                                item.RoomIndex ===\n                                                selectedroom[roomindex]\n                                            ).IsPassportMandatory && (\n                                              <>\n                                                <Grid item md={4} xs={12}>\n                                                  <TextField\n                                                    className={\n                                                      classes.travelerinfo\n                                                    }\n                                                    label=\"*Passport No\"\n                                                    name=\"passport_num\"\n                                                    onChange={(e) =>\n                                                      handletravellersinput(\n                                                        e,\n                                                        index,\n                                                        1,\n                                                        roomindex\n                                                      )\n                                                    }\n                                                    value={\n                                                      persons[roomindex]\n                                                        ?.child_state[index]\n                                                        ?.passport_num\n                                                    }\n                                                    fullWidth\n                                                    InputLabelProps={{\n                                                      style: {\n                                                        color: persons[\n                                                          roomindex\n                                                        ]?.child_state[index]\n                                                          ?.p_num_err\n                                                          ? \"red\"\n                                                          : \"#8F9098\",\n                                                        fontWeight: \"500\",\n                                                      },\n                                                    }}\n                                                    InputProps={{\n                                                      startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                          <img\n                                                            src={passport}\n                                                            alt=\"passport\"\n                                                          />\n                                                        </InputAdornment>\n                                                      ),\n                                                    }}\n                                                    size=\"small\"\n                                                  />\n                                                </Grid>\n                                                <Grid item md={4} xs={12}>\n                                                  <LocalizationProvider\n                                                    dateAdapter={AdapterDateFns}\n                                                  >\n                                                    <MobileDatePicker\n                                                      inputFormat=\"MM/dd/yyyy\"\n                                                      //  disabled={disableCalendar}\n                                                      sx={{\n                                                        \"& .MuiPickersToolbar-penIconButton\":\n                                                          {\n                                                            display: \"none\",\n                                                          },\n                                                      }}\n                                                      closeOnSelect\n                                                      disablePast\n                                                      //  inputRef={busDateSelectRef}\n\n                                                      label=\"passport_exp\"\n                                                      value={\n                                                        persons[roomindex]\n                                                          ?.child_state[index]\n                                                          ?.passport_exp\n                                                      } // error={adult_state[index].dob_err}\n                                                      // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                                      onChange={(newvalue) =>\n                                                        setPersons(\n                                                          (prevdata) => {\n                                                            const updatedpersons =\n                                                              [...prevdata];\n                                                            updatedpersons[\n                                                              roomindex\n                                                            ].child_state[\n                                                              index\n                                                            ].passport_exp =\n                                                              newvalue;\n                                                            return updatedpersons;\n                                                          }\n                                                        )\n                                                      }\n                                                      renderInput={(params) => (\n                                                        <TextField\n                                                          id=\"dateInputTag\"\n                                                          sx={{\n                                                            minWidth: \"90px\",\n                                                          }}\n                                                          // size=\"small\"\n                                                          {...params}\n                                                          fullWidth\n                                                          autoComplete=\"off\"\n                                                          name=\"dob\"\n                                                          size=\"small\"\n                                                          label={\n                                                            <span\n                                                              style={{\n                                                                paddingRight:\n                                                                  \"0.5rem\",\n                                                              }}\n                                                            >\n                                                              * Passport Expiry\n                                                            </span>\n                                                          }\n                                                          // value=\"\"\n                                                          className={\n                                                            classes.travelerinfo\n                                                          }\n                                                          InputLabelProps={{\n                                                            style: {\n                                                              color: persons[\n                                                                roomindex\n                                                              ]?.child_state[\n                                                                index\n                                                              ]?.p_exp_err\n                                                                ? \"red\"\n                                                                : \"#8F9098\",\n                                                              fontWeight: \"500\",\n                                                            },\n                                                          }}\n                                                          InputProps={{\n                                                            readOnly: true,\n                                                            startAdornment: (\n                                                              <InputAdornment position=\"start\">\n                                                                {/* <CalendarMonthIcon sx={{color:'#003556'}}/> */}\n                                                                <img\n                                                                  src={passport}\n                                                                  alt=\"caleder\"\n                                                                />\n                                                              </InputAdornment>\n                                                            ),\n                                                          }}\n                                                        />\n                                                      )}\n                                                    />\n                                                  </LocalizationProvider>\n                                                </Grid>\n                                                <Grid item md={4} xs={12}>\n                                                  <LocalizationProvider\n                                                    dateAdapter={AdapterDateFns}\n                                                  >\n                                                    <MobileDatePicker\n                                                      inputFormat=\"MM/dd/yyyy\"\n                                                      //  disabled={disableCalendar}\n                                                      sx={{\n                                                        \"& .MuiPickersToolbar-penIconButton\":\n                                                          {\n                                                            display: \"none\",\n                                                          },\n                                                      }}\n                                                      closeOnSelect\n                                                      disableFuture\n                                                      //  inputRef={busDateSelectRef}\n\n                                                      label=\"passport_issue\"\n                                                      value={\n                                                        persons[roomindex]\n                                                          ?.child_state[index]\n                                                          ?.passport_issue\n                                                      } // error={adult_state[index].dob_err}\n                                                      // helperText={adult_state[index].dob_err ? 'dob shouldnt be empty' : ''}\n                                                      onChange={(newvalue) =>\n                                                        setPersons(\n                                                          (prevdata) => {\n                                                            const updatedpersons =\n                                                              [...prevdata];\n                                                            updatedpersons[\n                                                              roomindex\n                                                            ].child_state[\n                                                              index\n                                                            ].passport_issue =\n                                                              newvalue;\n                                                            return updatedpersons;\n                                                          }\n                                                        )\n                                                      }\n                                                      renderInput={(params) => (\n                                                        <TextField\n                                                          id=\"dateInputTag\"\n                                                          sx={{\n                                                            minWidth: \"90px\",\n                                                          }}\n                                                          // size=\"small\"\n                                                          {...params}\n                                                          fullWidth\n                                                          autoComplete=\"off\"\n                                                          name=\"dob\"\n                                                          size=\"small\"\n                                                          label={\n                                                            <span\n                                                              style={{\n                                                                paddingRight:\n                                                                  \"0.5rem\",\n                                                              }}\n                                                            >\n                                                              * Passport Issue\n                                                              Date\n                                                            </span>\n                                                          }\n                                                          // value=\"\"\n                                                          className={\n                                                            classes.travelerinfo\n                                                          }\n                                                          InputLabelProps={{\n                                                            style: {\n                                                              color: persons[\n                                                                roomindex\n                                                              ]?.child_state[\n                                                                index\n                                                              ]\n                                                                ?.passport_issue_err\n                                                                ? \"red\"\n                                                                : \"#8F9098\",\n                                                              fontWeight: \"500\",\n                                                            },\n                                                          }}\n                                                          InputProps={{\n                                                            readOnly: true,\n                                                            startAdornment: (\n                                                              <InputAdornment position=\"start\">\n                                                                {/* <CalendarMonthIcon sx={{color:'#003556'}}/> */}\n                                                                <img\n                                                                  src={passport}\n                                                                  alt=\"caleder\"\n                                                                />\n                                                              </InputAdornment>\n                                                            ),\n                                                          }}\n                                                        />\n                                                      )}\n                                                    />\n                                                  </LocalizationProvider>\n                                                </Grid>\n                                                {/* <Grid item md={4} xs={12}>\n                                              <TextField\n                                                className={classes.travelerinfo}\n                                                label=\"* Passport Issue Country\"\n                                                name=\"passport_issue_country\"\n                                                onChange={(e) =>\n                                                  handletravellersinput(\n                                                    e,\n                                                    index,\n                                                    1,\n                                                    roomindex\n                                                  )\n                                                }\n                                                value={\n                                                  persons[roomindex]\n                                                    ?.child_state[index]\n                                                    ?.passport_issue_country\n                                                }\n                                                fullWidth\n                                                InputLabelProps={{\n                                                  style: {\n                                                    color: persons[roomindex]\n                                                      ?.child_state[index]\n                                                      ?.passport_issue_country_err\n                                                      ? \"red\"\n                                                      : \"#8F9098\",\n                                                    fontWeight: \"500\",\n                                                  },\n                                                }}\n                                                InputProps={{\n                                                  startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                      <img\n                                                        src={passport}\n                                                        alt=\"passport\"\n                                                      />\n                                                    </InputAdornment>\n                                                  ),\n                                                }}\n                                                size=\"small\"\n                                              />\n                                            </Grid> */}\n                                              </>\n                                            )}\n\n                                            {/* {room_details.HotelRoomsDetails.find(\n                                      (item) =>\n                                        item.RoomIndex ===\n                                        selectedroom[roomindex]\n                                    ).IsPANMandatory&& <Grid item md={4} xs={12}>\n                                              <TextField\n                                                className={classes.travelerinfo}\n                                                label=\"Pan Card No \"\n                                                name=\"pan_no\"\n                                                onChange={(e) =>\n                                                  handletravellersinput(\n                                                    e,\n                                                    index,\n                                                    1,\n                                                    roomindex\n                                                  )\n                                                }\n                                                value={\n                                                  persons[roomindex]\n                                                    ?.child_state[index]?.pan_no\n                                                }\n                                                fullWidth\n                                                InputLabelProps={{\n                                                  style: {\n                                                    color: persons[roomindex]\n                                                      ?.child_state[index]\n                                                      ?.pan_no_err\n                                                      ? \"red\"\n                                                      : \"#8F9098\",\n                                                    fontWeight: \"500\",\n                                                  },\n                                                }}\n                                                InputProps={{\n                                                  startAdornment: (\n                                                    <InputAdornment position=\"start\">\n                                                      <img\n                                                        src={pan_card}\n                                                        alt=\"passport\"\n                                                      />\n                                                    </InputAdornment>\n                                                  ),\n                                                }}\n                                                size=\"small\"\n                                              />\n                                            </Grid>} */}\n                                          </>\n                                        )}\n                                      </Grid>\n\n                                      <Grid item container>\n                                        <Grid item md={3.4}>\n                                          <Button\n                                            variant=\"contained\"\n                                            disableRipple\n                                            className={\n                                              ticketbook.addtravellerbtn\n                                            }\n                                            onClick={() =>\n                                              Travellersdialogopen(\n                                                index,\n                                                1,\n                                                roomindex\n                                              )\n                                            }\n                                          >\n                                            Existence Guest\n                                          </Button>\n                                        </Grid>\n                                        {/* <Grid item md={3}>\n                                    <Button\n                                      variant={\"outlined\"}\n                                      className={ticketbook.savedetailsbtn}\n                                    >\n                                      Save Details\n                                    </Button>\n                                  </Grid> */}\n                                      </Grid>\n                                    </Grid>\n                                  </>\n                                );\n                              }\n                            )}\n                            {/* </span> */}\n                          </>\n                        );\n                      }\n                    )}\n                    {/* child */}\n\n                    <span style={{ paddingLeft: \"1rem\", marginTop: \"1.5rem\" }}>\n                      {\" \"}\n                      <Divider />\n                    </span>\n\n                    <Grid item container>\n                      <span style={{ fontSize: \"14px\", fontWeight: \"500\" }}>\n                        Booking details will sent to\n                      </span>\n                    </Grid>\n                    <Grid item container spacing={2} ref={ticker_receivers_ref}>\n                      <Grid item md={3.7} xs={12}>\n                        <TextField\n                          className={classes.travelerinfo}\n                          autoComplete=\"off\"\n                          value={ticket_receiver_info.email}\n                          onChange={(e) =>\n                            setTicket_receiver_info((prev) => ({\n                              ...prev,\n                              email: e.target.value,\n                            }))\n                          }\n                          label=\"Email ID\"\n                          fullWidth\n                          InputLabelProps={{\n                            style: {\n                              color: ticket_receiver_info.email_err\n                                ? \"red\"\n                                : \"#8F9098\",\n                              fontWeight: \"500\",\n                            },\n                          }}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <img src={Email} alt=\"Email\" />\n                              </InputAdornment>\n                            ),\n                          }}\n                          size=\"small\"\n                        />\n                      </Grid>\n                      <Grid item md={6.5} xs={12}>\n                        <Grid\n                          container\n                          columnGap={1}\n                          justifyContent={\"space-between\"}\n                        >\n                          <Grid item width={\"fit-content\"}>\n                            <Button\n                              disableRipple\n                              variant=\"outlined\"\n                              onClick={() => setCountrydialog(true)}\n                              startIcon={\n                                <img\n                                  src={\n                                    Object.keys(selectedcountry).length > 0\n                                      ? selectedcountry.country_flag\n                                      : `${\"baseurl\"}/in.png`\n                                  }\n                                  width=\"20px\"\n                                  height=\"20px\"\n                                  alt=\"\"\n                                />\n                              }\n                              endIcon={\n                                <ArrowDropDownIcon sx={{ color: styles.app_color }} />\n                              }\n                              sx={{\n                                padding: \"0.4rem 0.5rem\",\n                                borderRadius: \"0.5rem\",\n                                borderColor: \"#EDEDED!important\",\n                                maxWidth: \"100%\",\n                              }}\n                            >\n                              {Object.keys(selectedcountry).length > 0\n                                ? selectedcountry.code\n                                : \"+91\"}\n                            </Button>\n                          </Grid>\n                          <Grid item xs>\n                            <TextField\n                              autoComplete=\"off\"\n                              label=\"Phone Number\"\n                              shrink={true}\n                              value={ticket_receiver_info.mobile}\n                              onChange={(e) =>\n                                setTicket_receiver_info((prev) => ({\n                                  ...prev,\n                                  mobile: e.target.value,\n                                }))\n                              }\n                              className={classes.travelerinfo}\n                              InputLabelProps={{\n                                style: {\n                                  color: ticket_receiver_info.mobile_err\n                                    ? \"red\"\n                                    : \"#8F9098\",\n                                  fontWeight: \"500\",\n                                },\n                              }}\n                              size=\"small\"\n                              fullWidth\n                              autoFocus\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    {/* <span style={{paddingLeft:'1rem',marginTop:'1.5rem'}}> <Divider /></span>\n                        <Grid item Container>\n                          <FormControlLabel\n                            size=\"large\"\n                            label={\n                              <InputLabel\n                                style={{\n                                  fontSize: \"14px\",\n                                  fontWeight: \"600\",\n                                  color: \"#303030\",\n                                }} // set the desired color here\n                                shrink={false}\n                              >\n                                I have a GST number (Optional)\n                              </InputLabel>\n                            }\n                            control={\n                              <Checkbox\n                                sx={{\n                                  color: styles.app_color,\n                                  \"&.Mui-checked\": {\n                                    color: styles.app_color,\n                                  },\n                                }}\n                                checked={gstexist}\n                                onClick={() => setGstexist((prev) => !prev)}\n                              />\n                            }\n                          />\n                        </Grid>\n                        <Grid item container spacing={1.5}>\n                          <Grid item md={4}>\n                            <TextField\n                              fullWidth\n                              label=\"Company Name\"\n                              className={classes.travelerinfo}\n                              InputLabelProps={{\n                                style: {\n                                  color: \"#8F9098\",\n                                  fontWeight: \"500\",\n                                },\n                              }}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <img src={company} alt=\"companie\" />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              size=\"small\"\n                            />\n                          </Grid>\n                          <Grid item md={4}>\n                            <TextField\n                              fullWidth\n                              className={classes.travelerinfo}\n                              label=\"Registration Number\"\n                              InputLabelProps={{\n                                style: {\n                                  color: \"#8F9098\",\n                                  fontWeight: \"500\",\n                                },\n                              }}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <img\n                                      src={registration}\n                                      alt=\"registration\"\n                                    />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              size=\"small\"\n                            />\n                          </Grid>\n                          <Grid item md={4}>\n                            <TextField\n                              fullWidth\n                              className={classes.travelerinfo}\n                              label=\"Company Email\"\n                              InputLabelProps={{\n                                style: {\n                                  color: \"#8F9098\",\n                                  fontWeight: \"500\",\n                                },\n                              }}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <img\n                                      src={Email}\n                                      alt=\"Email\"\n                                    />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              size=\"small\"\n                            />\n                          </Grid>\n                          <Grid item md={4}>\n                            <TextField\n                              fullWidth\n                              className={classes.travelerinfo}\n                              label=\"Company Mobile\"\n                              InputLabelProps={{\n                                style: {\n                                  color: \"#8F9098\",\n                                  fontWeight: \"500\",\n                                },\n                              }}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <img\n                                      src={phone}\n                                      alt=\"Phone\"\n                                    />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              size=\"small\"\n                            />\n                          </Grid>\n                          <Grid item md={4}>\n                            <TextField\n                              fullWidth\n                              className={classes.travelerinfo}\n                              label=\"Company Address\"\n                              InputLabelProps={{\n                                style: {\n                                  color: \"#8F9098\",\n                                  fontWeight: \"500\",\n                                },\n                              }}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <img\n                                      src={location}\n                                      alt=\"address\"\n                                    />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              size=\"small\"\n                            />\n                          </Grid>\n                        </Grid> */}\n                  </Grid>\n                  {/* </span> */}\n                </Paper>\n              </div>\n              {/* why gmt */}\n              <Grid item mt={2}>\n                <Why_gmt />\n              </Grid>\n              <Grid\n                container\n                justifyContent={\"space-between\"}\n                alignItems={\"center\"}\n                mt={\"1rem !important\"}\n                mb={{ md: \"1rem !important\", xs: \"0rem !important\" }}\n                sx={{\n                  backgroundColor: { md: \"transparent\", xs: \"white\" },\n                  boxShadow: {\n                    md: \"none\",\n                    xs: \"0px -2px 4px 0px rgba(0, 0, 0, 0.25)\",\n                  },\n                  width: {\n                    md: \"100%\",\n                    xs: \"calc(100% + 32px)\",\n                    sm: \"calc(100% + 48px)\",\n                  },\n                  marginLeft: {\n                    md: \"0px !important\",\n                    xs: \"-16px !important\",\n                    sm: \"-24px !important\",\n                  },\n                  padding: { md: \"0rem\", xs: \"1rem 1.5rem\" },\n                }}\n              >\n                <Grid\n                  sx={{\n                    display: { md: \"none\", xs: \"block\" },\n                    color: styles.app_color,\n                    fontWeight: \"500\",\n                  }}\n                >\n                  <span>₹ 8,400</span> <br />\n                  <span style={{ fontWeight: \"400\" }}>for 2 guest</span>\n                </Grid>\n                <button\n                  style={{\n                    color: \"#fff\",\n                    fontFamily: \"poppins\",\n                    backgroundColor: styles.app_color,\n                    border: \"none\",\n                    borderRadius: \"0.5rem\",\n                    width: \"8rem\",\n                    height: \"2.2rem\",\n                  }}\n                  onClick={typeof location1.state===\"string\"?() => hot_room_booking():()=>gmt_blockroom()}\n                >\n                  Continue\n                </button>\n                {/* ()=>hot_room_booking() */}\n              </Grid>\n            </Stack>\n          </Grid>\n          {/* offers */}\n          <Grid item md={3} sx={{ display: { md: \"block\", xs: \"none\" } }}>\n            <Grid container direction={\"column\"} mt={3.3} spacing={2}>\n              <Grid item>\n                <Paper\n                  sx={{ padding: \"1rem\", borderRadius: \"0.8rem\" }}\n                  elevation={3}\n                >\n                  <Grid container direction={\"column\"} spacing={1.5}>\n                    <Grid item>\n                      <h3 className={ticketbook.completebookings}>\n                        Fare summary\n                      </h3>\n                    </Grid>\n                    <Grid item container justifyContent={\"space-between\"}>\n                      <Grid item>\n                        <Stack>\n                          <span>\n                            {`${guests_details.length} ${\n                              guests_details.length > 1 ? \"Rooms\" : \"Room\"\n                            } * ${`${helperFunctions.nights_calc(\n                              hotelresult.CheckInDate,\n                              hotelresult.CheckOutDate\n                            )} ${\n                              helperFunctions.nights_calc(\n                                hotelresult.CheckInDate,\n                                hotelresult.CheckOutDate\n                              ) > 1\n                                ? \"Nights\"\n                                : \"Night\"\n                            }`}`}\n                          </span>\n                          <span style={{ color: \"grey\", fontSize: \"12px\" }}>\n                            Base Price\n                          </span>\n                        </Stack>\n                      </Grid>\n                      <Grid item>\n                        {`${cancellation_policies[0].Currency} ${room_details?.RoomCombinationsArray===undefined?open_room_price:fixed_room_price}`}\n                      </Grid>\n                    </Grid>\n\n                    <Grid item>\n                      <Divider />\n                    </Grid>\n\n                    {/* {prices.discount>0&& <>\n                            <Grid item container sx={{color:'#00a19c'}}>\n                            <Grid item md={8}>\n                                  Price after Discount\n                              </Grid>\n                              <Grid item md={4} textAlign={'right'}>\n                              {`${cancellation_policies[0].Currency} ${fixed_room_price-prices.discount}`}\n                              </Grid>\n                          \n                          </Grid>\n                          <Grid item>\n                        <Divider />\n                        </Grid>\n                          </>\n                        } */}\n                    <Grid item>\n                      <Grid container justifyContent={\"space-between\"}>\n                        <Grid item>Fee & Surcharges</Grid>\n                        <Grid item textAlign={\"right\"}>\n                          {`${cancellation_policies[0].Currency} ${gmt_fee}`}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item>\n                      <Divider />\n                    </Grid>\n                    {prices.discount > 0 && (\n                      <>\n                        <Grid item>\n                          <Grid container justifyContent={\"space-between\"}>\n                            <Grid item>Total Discount</Grid>\n                            <Grid item sx={{ color: \"#3F8CFF\" }}>\n                              <Stack>\n                                <span>{`- ${cancellation_policies[0].Currency} ${prices.discount}`}</span>\n                                {/* <span><CancelIcon onClick={()=>{setPrices((prev)=>({...prev,discount:0}))}}/></span> */}\n                                <button\n                                  style={{\n                                    border: \"none\",\n                                    background: \"none\",\n                                    color: \"red\",\n                                    textDecoration: \"underline\",\n                                  }}\n                                  onClick={() => {\n                                    setPrices((prev) => ({\n                                      ...prev,\n                                      discount: 0,\n                                    }));\n                                  }}\n                                >\n                                  Remove\n                                </button>\n                              </Stack>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid item>\n                          <Divider />\n                        </Grid>\n                      </>\n                    )}\n                    <Grid item>\n                      <Grid container sx={{ color: styles.app_color }}>\n                        <Grid item xs={6}>\n                          <span className={ticketbook.totalamount}>\n                            Total Amount\n                          </span>\n                        </Grid>\n                        <Grid\n                          item\n                          xs={6}\n                          textAlign={\"right\"}\n                          sx={{ fontWeight: 500 }}\n                        >\n                          {`${cancellation_policies[0].Currency} ${\n                            prices.discount > 0\n                              ? prices.updatedprice\n                              : prices.totalprice\n                          }`}\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              {/* Coupons */}\n              <Grid item>\n                <PromoCodes\n                  coupons={coupons_data}\n                  data={{\n                    baseprice: room_details?.RoomCombinationsArray===undefined?open_room_price:fixed_room_price,\n                    count: guests_details.length,\n                  }}\n                  all_prices={prices}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n      <form action=\"https://test.payu.in/_payment\" method=\"post\">\n        <input type=\"hidden\" name=\"key\" value={`${key}`} />\n        <input type=\"hidden\" name=\"txnid\" value={`${transactionStr}`} />\n        <input type=\"hidden\" name=\"productinfo\" value={`${productinfo}`} />\n        <input\n          type=\"hidden\"\n          name=\"amount\"\n          value={\n            `${\n            prices.discount > 0 ? prices.updatedprice : prices.totalprice\n          }`\n        }\n        />\n        <input\n          type=\"hidden\"\n          name=\"email\"\n          value={`${ticket_receiver_info.email}`}\n        />\n        <input\n          type=\"hidden\"\n          name=\"firstname\"\n          value={`${persons[0]?.adult_state[0]?.first_name}`}\n        />\n        <input\n          type=\"hidden\"\n          name=\"lastname\"\n          value={`${persons[0]?.adult_state[0]?.last_name}`}\n        />\n        <input\n          type=\"hidden\"\n          name=\"surl\"\n          value={`${\n            process.env.NODE_ENV === \"production\"\n              ? `${process.env.REACT_APP_CLIENT_URL}api/hotelSuccessUrl`\n              : `${process.env.REACT_APP_CLIENT_URL}api/hotelSuccessUrl`\n          }`}\n        />\n        <input\n          type=\"hidden\"\n          name=\"furl\"\n          value={`${\n            process.env.NODE_ENV === \"production\"\n              ? `${process.env.REACT_APP_CLIENT_URL}api/hotelFailUrl`\n              : `${process.env.REACT_APP_CLIENT_URL}api/hotelFailUrl`\n          }`}\n        />\n        <input\n          type=\"hidden\"\n          name=\"phone\"\n          value={`${ticket_receiver_info.mobile}`}\n        />\n        <input type=\"hidden\" name=\"hash\" value={`${hashedData}`} />\n        <input\n          className=\"v-hidden\"\n          id=\"payuPayButton\"\n          type=\"submit\"\n          value=\"PAY\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Room_booking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
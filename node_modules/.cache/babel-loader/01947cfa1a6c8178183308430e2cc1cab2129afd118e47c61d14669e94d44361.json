{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/bitbucket/priortive/src/components/modals/AdminModals/AdminForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport { Button, InputAdornment, Container, Dialog, Grid, TextField } from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { forgotpwdmodel } from \"../../../assets/styles/Flights\";\nimport viewpassword from \"../../../assets/images/viewpassword.svg\";\nimport hidepassword from \"../../../assets/images/hidepassword.svg\";\nimport Lock from \"../../../assets/images/Lock.svg\";\nimport React, { useRef, useState } from \"react\";\nimport { Apipost } from \"../../../ApiServices/Apicalls\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useForm } from 'react-hook-form';\nimport { regex_data } from '../../Regex';\nimport { enqueueSnackbar } from \"notistack\";\nimport gomytripclient from \"../../../GomytripClient\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminForgotPassword = props => {\n  _s();\n  var _errors$email;\n  const ReCAPTCHAId = process.env.REACT_APP_RECAPTCHA;\n  const forgotcss = forgotpwdmodel();\n  const {\n    open,\n    close\n  } = props;\n  const [recaptchaval, setRecaptchaval] = useState(null);\n  const [loading, setLoading] = useState(false);\n  function handleclose() {\n    close();\n  }\n  const handleRecaptchaChange = value => {\n    setRecaptchaval(value);\n    // console.log('reCAPTCHA value:', value);\n  };\n\n  async function resetPassword(data) {\n    if (!recaptchaval) {\n      enqueueSnackbar('Check the Captcha To continue', {\n        variant: 'error'\n      });\n      return false;\n    }\n    setLoading(true);\n    gomytripclient.post('/adminForgotPassword', data).then(res => {\n      if (res.data.status === 1) {\n        enqueueSnackbar(res.data.message, {\n          variant: 'success'\n        });\n        reset();\n        close();\n        setLoading(false);\n      } else {\n        enqueueSnackbar(res.data.message, {\n          variant: 'error'\n        });\n        setLoading(false);\n      }\n    }).catch(err => {\n      enqueueSnackbar(err.message);\n      setLoading(false);\n    });\n  }\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    setValue,\n    control\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleclose,\n      sx: {\n        \"& .MuiDialog-paper\": {\n          width: \"100%\",\n          mixHeight: 580,\n          maxWidth: \"350px\",\n          borderRadius: \"15px\",\n          padding: \"0.7rem\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(CancelIcon, {\n          sx: {\n            color: \"#003556\"\n          },\n          onClick: handleclose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(resetPassword),\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            textAlign: \"center\",\n            direction: \"column\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                fontSize: \"18px\",\n                color: \"#003556\",\n                fontWeight: \"500\"\n              },\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                ...register('email', {\n                  required: {\n                    value: true,\n                    message: \"E-Mail is required\"\n                  },\n                  pattern: {\n                    value: regex_data.email_Regex,\n                    message: 'Enter Valid Emial address'\n                  }\n                }),\n                label: \"Email\",\n                className: forgotcss.root,\n                fullWidth: true,\n                size: \"small\",\n                helperText: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n                sitekey: ReCAPTCHAId,\n                onChange: handleRecaptchaChange,\n                size: \"normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n                loading: loading,\n                type: \"submit\",\n                className: forgotcss.button,\n                sx: {\n                  textTransform: \"none\"\n                },\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminForgotPassword, \"IA+uYgA3Y9oPT16WbDuNfMoOdvU=\", false, function () {\n  return [useForm];\n});\n_c = AdminForgotPassword;\nexport default AdminForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"AdminForgotPassword\");","map":{"version":3,"names":["Button","InputAdornment","Container","Dialog","Grid","TextField","CancelIcon","forgotpwdmodel","viewpassword","hidepassword","Lock","React","useRef","useState","Apipost","ReCAPTCHA","useForm","regex_data","enqueueSnackbar","gomytripclient","LoadingButton","jsxDEV","_jsxDEV","AdminForgotPassword","props","_s","_errors$email","ReCAPTCHAId","process","env","REACT_APP_RECAPTCHA","forgotcss","open","close","recaptchaval","setRecaptchaval","loading","setLoading","handleclose","handleRecaptchaChange","value","resetPassword","data","variant","post","then","res","status","message","reset","catch","err","register","handleSubmit","formState","errors","setValue","control","children","onClose","sx","width","mixHeight","maxWidth","borderRadius","padding","item","textAlign","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","direction","spacing","style","fontSize","fontWeight","required","pattern","email_Regex","label","className","root","fullWidth","size","helperText","email","sitekey","onChange","type","button","textTransform","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/bitbucket/priortive/src/components/modals/AdminModals/AdminForgotPassword.jsx"],"sourcesContent":["import {\n    Button,\n    InputAdornment,\n    Container,\n    Dialog,\n    Grid,\n    TextField,\n} from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { forgotpwdmodel } from \"../../../assets/styles/Flights\";\nimport viewpassword from \"../../../assets/images/viewpassword.svg\";\nimport hidepassword from \"../../../assets/images/hidepassword.svg\";\nimport Lock from \"../../../assets/images/Lock.svg\";\nimport React, { useRef, useState } from \"react\";\nimport { Apipost } from \"../../../ApiServices/Apicalls\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useForm } from 'react-hook-form';\nimport { regex_data } from '../../Regex'\nimport { enqueueSnackbar } from \"notistack\";\nimport gomytripclient from \"../../../GomytripClient\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nconst AdminForgotPassword = (props) => {\n    const ReCAPTCHAId = process.env.REACT_APP_RECAPTCHA;\n\n    const forgotcss = forgotpwdmodel();\n    const { open, close } = props;\n    const [recaptchaval, setRecaptchaval] = useState(null)\n    const [loading, setLoading] = useState(false)\n    function handleclose() {\n        close();\n    }\n    const handleRecaptchaChange = (value) => {\n        setRecaptchaval(value)\n        // console.log('reCAPTCHA value:', value);\n    };\n    async function resetPassword(data) {\n        if (!recaptchaval) {\n            enqueueSnackbar('Check the Captcha To continue', { variant: 'error' })\n            return false\n        }\n        setLoading(true)\n\n        gomytripclient.post('/adminForgotPassword', data\n        ).then(res => {\n            if (res.data.status === 1) {\n                enqueueSnackbar(res.data.message, { variant: 'success' })\n                reset()\n                close()\n                setLoading(false)\n            } else {\n                enqueueSnackbar(res.data.message, { variant: 'error' })\n                setLoading(false)\n\n            }\n        }).catch(err => {\n            enqueueSnackbar(err.message)\n            setLoading(false)\n\n        })\n    }\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n        reset,\n        setValue,\n        control,\n    } = useForm();\n\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleclose}\n                sx={{\n                    \"& .MuiDialog-paper\": {\n                        width: \"100%\",\n                        mixHeight: 580,\n                        maxWidth: \"350px\",\n                        borderRadius: \"15px\",\n                        padding: \"0.7rem\",\n                    },\n                }}\n            >\n                <Grid item textAlign=\"right\">\n                    <CancelIcon sx={{ color: \"#003556\" }} onClick={handleclose} />\n                </Grid>\n                <Container>\n                    <form onSubmit={handleSubmit(resetPassword)}>\n                        <Grid container textAlign={\"center\"} direction={\"column\"} spacing={2}>\n                            <Grid\n                                item\n                                style={{ fontSize: \"18px\", color: \"#003556\", fontWeight: \"500\" }}\n                            >\n                                Reset Password\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    {...register('email', { required: { value: true, message: \"E-Mail is required\" }, pattern: { value: regex_data.email_Regex, message: 'Enter Valid Emial address' } })}\n                                    label={\"Email\"}\n                                    className={forgotcss.root}\n                                    fullWidth\n                                    size=\"small\"\n                                    helperText={errors?.email?.message}\n                                />\n                            </Grid>\n\n                            <Grid item>\n                                <ReCAPTCHA sitekey={ReCAPTCHAId}\n                                    onChange={handleRecaptchaChange}\n                                    size=\"normal\"\n                                />\n                            </Grid>\n                            <Grid item>\n                                <LoadingButton\n                                    loading={loading}\n                                    type=\"submit\"\n                                    className={forgotcss.button}\n                                    sx={{ textTransform: \"none\" }}\n                                >\n                                    Confirm\n                                </LoadingButton>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Container>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AdminForgotPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/bitbucket/priortive/src/components/pages/Flights/Flightcalender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"../../../assets/styles/Calenderstyles.css\";\nimport MySnackbar from \"../../modals/Signupmodals/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst priceData = {\n  \"01-03-2023\": \" $1000000\",\n  \"02-03-2023\": \" $800\",\n  \"03-03-2023\": \" $120\"\n  // more price data for other dates\n};\n\nconst dates = [\"01-03-2023\", \"02-03-2023\", \"03-03-2023\"];\nfunction CalendarWithPrices(props) {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [cal, setCal] = useState(false);\n  // for snackbar\n  const [snackopen, setSnackopen] = useState(false);\n  const [snackmessage, setSnackmessage] = useState(\"\");\n  function snackclose() {\n    setSnackopen(false);\n  }\n  ;\n  //\n  const getPriceForDate = date => {\n    const dateString = date.toISOString().substring(0, 10);\n    return priceData[dateString] || \"\";\n  };\n  const handleDateChange = date => {\n    // alert(props.trip)\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const selected_date = date;\n    selected_date.setHours(0, 0, 0, 0);\n    // console.log(date,\"datejksfd\")\n    // console.log(new Date(),\"ajjkdfsla\")\n    if (selected_date < today) {\n      setSnackopen(true);\n      setSnackmessage(\"you didn't allow to select the previous date\");\n      // alert(\"you didn't allow to select the previous date\");\n      return;\n    } else {\n      setSelectedDate(date);\n      props.selectdate(date, props.trip);\n    }\n\n    // console.log(date)\n  };\n\n  const tile = ({\n    date,\n    view\n  }) => {\n    const d = new Date(date);\n    if (date < new Date()) {\n      // return { disabled: true, label: date.getDate().toString() };\n    }\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n    const formattedDate = `${day}-${month}-${year}`;\n    for (let key in priceData) {\n      if (key === formattedDate) {\n        console.log(priceData[key]);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"green\"\n            },\n            children: priceData[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }\n    }\n  };\n\n  //disable date\n  const disablePastDates = date => {\n    let comingDate = new Date(date);\n    comingDate.setHours(0, 0, 0, 0);\n    let todayDate = new Date();\n    todayDate.setHours(0, 0, 0, 0);\n    return comingDate < todayDate;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MySnackbar, {\n      open: snackopen,\n      close: snackclose,\n      message: snackmessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      value: selectedDate,\n      onChange: handleDateChange,\n      tileContent: (date, view) => tile(date, view)\n      // sx={{zindex:'1'}}\n      ,\n      tileClassName: ({\n        date\n      }) => disablePastDates(date) ? 'disabled-date' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarWithPrices, \"WYrDq2pdetpaP+2HFQYUb7WoZP0=\");\n_c = CalendarWithPrices;\nexport default CalendarWithPrices;\nvar _c;\n$RefreshReg$(_c, \"CalendarWithPrices\");","map":{"version":3,"names":["React","useState","Calendar","MySnackbar","jsxDEV","_jsxDEV","Fragment","_Fragment","priceData","dates","CalendarWithPrices","props","_s","selectedDate","setSelectedDate","cal","setCal","snackopen","setSnackopen","snackmessage","setSnackmessage","snackclose","getPriceForDate","date","dateString","toISOString","substring","handleDateChange","today","Date","setHours","selected_date","selectdate","trip","tile","view","d","day","getDate","toString","padStart","month","getMonth","year","getFullYear","formattedDate","key","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","disablePastDates","comingDate","todayDate","open","close","message","value","onChange","tileContent","tileClassName","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/bitbucket/priortive/src/components/pages/Flights/Flightcalender.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"../../../assets/styles/Calenderstyles.css\";\nimport MySnackbar from \"../../modals/Signupmodals/Snackbar\"\nconst priceData = {\n  \"01-03-2023\": \" $1000000\",\n  \"02-03-2023\": \" $800\",\n  \"03-03-2023\": \" $120\",\n  // more price data for other dates\n};\nconst dates = [\"01-03-2023\", \"02-03-2023\", \"03-03-2023\"];\n\nfunction CalendarWithPrices(props) {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [cal, setCal] = useState(false);\n  // for snackbar\n  const [snackopen, setSnackopen] = useState(false);\n  const [snackmessage, setSnackmessage] = useState(\"\");\n  function snackclose() {\n    setSnackopen(false);\n  };\n  //\n  const getPriceForDate = (date) => {\n    const dateString = date.toISOString().substring(0, 10);\n    return priceData[dateString] || \"\";\n  };\n\n  const handleDateChange = (date) => {\n    // alert(props.trip)\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const selected_date = date;\n    selected_date.setHours(0, 0, 0, 0);\n    // console.log(date,\"datejksfd\")\n    // console.log(new Date(),\"ajjkdfsla\")\n    if (selected_date < today) {\n      setSnackopen(true);\n      setSnackmessage(\"you didn't allow to select the previous date\");\n      // alert(\"you didn't allow to select the previous date\");\n      return;\n    } else {\n      setSelectedDate(date);\n      props.selectdate(date, props.trip);\n    }\n\n    // console.log(date)\n  };\n  const tile = ({ date, view }) => {\n    const d = new Date(date);\n\n    if (date < new Date()) {\n      // return { disabled: true, label: date.getDate().toString() };\n    }\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n    const formattedDate = `${day}-${month}-${year}`;\n    for (let key in priceData) {\n      if (key === formattedDate) {\n        console.log(priceData[key]);\n\n        return (\n          <>\n            <br />\n            <span style={{ color: \"green\" }}>{priceData[key]}</span>\n          </>\n        );\n      }\n    }\n  };\n\n  //disable date\n  const disablePastDates = (date) => {\n    let comingDate = new Date(date)\n    comingDate.setHours(0, 0, 0, 0);\n    let todayDate = new Date()\n    todayDate.setHours(0, 0, 0, 0);\n    return comingDate < todayDate;\n  };\n\n  return (\n    <div>\n      <MySnackbar open={snackopen} close={snackclose} message={snackmessage} />\n      {/* {cal&& */}\n      <Calendar\n        value={selectedDate}\n        onChange={handleDateChange}\n        tileContent={(date, view) => tile(date, view)}\n        // sx={{zindex:'1'}}\n        tileClassName={({ date }) =>\n          disablePastDates(date) ? 'disabled-date' : ''\n        }\n      />\n      {/* } */}\n      {/* <button onClick={()=>setCal(prev=>!prev)}>calender</button>\n      {selectedDate && (\n        <div>\n          <p>\n            Price for {selectedDate.toLocaleDateString()}:{' '}\n            {getPriceForDate(selectedDate)}\n          </p>\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nexport default CalendarWithPrices;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}